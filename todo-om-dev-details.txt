    This file is part of OneModel, a program to manage knowledge.
    Copyright in each year of 2010 and 2013-2014 inclusive, Luke A Call; all rights reserved.
    OneModel is free software, distributed under a license that includes honesty, the Golden Rule, guidelines around binary
    distribution, and the GNU Affero General Public License as published by the Free Software Foundation, either version 3
    of the License, or (at your option) any later version.  See the file LICENSE for details.
    OneModel is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
    You should have received a copy of the GNU Affero General Public License along with OneModel.  If not, see <http://www.gnu.org/licenses/>
-----------------------------------------------------------------------

(See "About this file" at the end for easier reading, navigation.)

vsgeer (vision, strategy, ...)
  vision
    to the extent possible:
      grow, learn, best tool I can think of for optimizing much other work.
      
      all available knowledge in the most useful possible way, for a person, then for a group, then for the world
      
      ...in ways that help to enable things like
        full employment among all the trustworthy, 
        easier research (finding data, capturing, sharing, processing), 
        organizing *all* the world's data as best we can, 
        remove the limitations that are imposed by textual formats, 
        better decision-making, better use of time
          ability to choose the likely most *valuable* (not just best-promoted) activities in personal growth and serving others 
            increasing days or quality of life
            saving lives
            mentoring
          .
        .
      .
  strategy
    immed
      done
        entry/viewing of basic data
      not done
        make lists/sublists (RelationToGroups and their contents) very useful, efficient
        assigning code to classes (so easy, efficient manipulation of things, semi-uniform groups)
        try it w/ todos! contacts!
          this will really need better searching, sorting, filtering, default filters, export (& import?).  Prioritize well.
        and colors/general highlighting, right?
        sharing
        much more
      .
    .
  .
  goals: per iteration, from the below...
  empowerment
  execution: just do stuff for now, make things better org'd here as I go.  Setting timed goals has been near useless.
  record/report/review/reconsider/repeat etc
.
DEVELOPMENT: release plan/milestones:   "story points, ship by? version: theme", details
  .0.4 continued: import/export, groups work effectively, initial search feature, copyright assignment, candidate to revu & see if demo-able.
    .5/.2 bug(S): make the > or >> markers on groups more helpful if subgroup is empty
      and others i found
    .
    xhow far can I really get in the time avail: as far as searching? 
    1.3/.2 allow editing RTG name: (GREW: ended up allow editing all RTG and RTE info, plus group names)
    30m/0  bug (when fix?): if you go to junk,9,t1,test file, 5 go to entity repr. the type, it takes you...to something else. why?
    
    .2/.2 is it fast to make single entries?
    .
    then prep om 4 work
      add initial data layout for work use (rolE/FHD...)
        vsgeer...
          w/ todos
        notes
      start using it as I would at work!
    recreate the doc content table, put doc back!
      CREATE TABLE FileAttributeContent (
                 file_attribute_id bigint PRIMARY KEY, 
                 contents_oid lo NOT NULL,
                 CONSTRAINT valid_fileattr_id FOREIGN KEY (file_attribute_id) REFERENCES fileattribute (id) ON DELETE CASCADE 
                 );
        CREATE TRIGGER om_contents_oid_cleanup BEFORE UPDATE OR DELETE ON fileattributecontent FOR EACH ROW EXECUTE PROCEDURE lo_manage(contents_oid);
      .
      test it
      clean up old one?
    .
    fix the bugs in vt
      couldn't reproduce!
    fix the syncfr* script to not delete old pg backups, until i'm more confident
    
    change ui to make navigation faster: single keypress goes to subgroup now.
      grouplist #7 becomes #8
      #7 (or 5? 4 fingers? but less similar to others) is "choose highlighted entity"
        does what hitting a letter does now: highlights
      hitting a letter 
        sets highlight like now
        but ALSO AND goes there (like 5 has done)
      5 still goes, or what?  (or 7? but less similar to others)
        just goes to the entity, not the grp?: probly.
      .
    .
    fix bug when entering a 2nd dup (3rd same) entity name
    .
    import my outlines?
      dif't menu for quickedit (each menu has a corollary?) ?
        skips the dates etc: everything fast/efficient?
        or do quick on slow grpmenu, or goes on quick one?
    and export! (so can put my notes in other format 2 present/report?, & in case h/o work2others??)
      where on menus?
      prompts user for some limit input
      goes all the way
      as text outl OR html outl?
      redundant to have some grp name lines or indent dif'tly or both...?
      outputs the filename
      option to include the metadata (so more readable w/o)?
      see why things out of order in the export!! (like didn't indent for hers
      run imports/exports on each other's output a few times then compare to the *original* ?
      w/ daily exports/backups so minimizes loss.? NOT4now.
      checks for recursion in the data, and makes a mark there instead of repeating
      why 
        for example this nesting:
          ideas
            sort the belowm & integrate w/ the above
        ...has as entity name 'ideas', but whose sole  grp name is the same as name of 1st entity: "sort the belowm..."??
        FIX THAT BE4 DOING MORE W/ IT!?
      fix import
        export my ideas & diff it against the file!
          see what I added; needs re-adding if del amnything?%%
            under strategy
              traits/areas (or put under matModel, combined?)
                faith
                hope
                virtue
                knowledge
                temperance
                patience
                brotherly kindness
                godliness
                charity
                love
                  how differs from charity?
                humility
                diligence
              milestones (maturity model)
    .
    allow adding an existing RTG
      see code in
        cntrlr sch for 
          kind of attribute to add
        ...then under that the option 6 & the constant it uses
        
        and controller.chooseOrCreateObject > Group
      proc
      allow adding existing grp to BOTH
        in Controller, cont from %%'s
        grp
        entity
      .
        database mods to have BOTH a group and relationtogroup table
          finish going thru w/ the files
            postgresqld
            entity
            group
            RTG
              make each of the group, rel2grp tables like its entity corollary AND make sense
            ADH
            pgtest
            controller
          WAS STILL TO DO, before realized there's no need:
            reviews,bookmarks...hit all
              FINISH review from PSQLD 1090ff
            make tests pass
              (bookmark those?)
            should add any tests or note4ltr.....?
            map out how to apply that to my own database so it looks like the test one w/o losing data now?
              try it on a test one? or? MAKE A BACKUP 1ST?: alr have, from the syncing right?
            .
            ****************THEN try it AND NOT BEFORE ON MY OWN DATA! W/ A BACKUP 1ST!!!!*************
        (why doesn't it work just to add an entity (if searching were fixed)?)
        
        revu recent mods quickly to see if there are any parts I'd want to keep? like textclarifications? 
        can just make it convcenient to add those entities, via the menu (assuming search coming): maybe just clarify the prompt 4 nesting grps somehow? or what, best, 4 demos (makes sense 2 others, get there promptly)
    .
    finish testing
    get the stuff in the wip stash so can add group to > 1 entity.
      redo all the breakpoints, probably.
      given the mods, what to run to xform my db?
        (after backup!!!! and test well be4 doing any new mods!?)
        .
        some code
          old
            dbAction("create table RelationToGroup (" +
                     "id bigint DEFAULT nextval('RelationToGroupKeySequence') PRIMARY KEY, " +
                     // the entity id of the entity whose attribute (subgroup, RTG) this is:
                     "parent_id bigint NOT NULL, " +
                     "rel_type_id bigint NOT NULL, " +
                     "name varchar(" + entityNameLength + ") NOT NULL, " +
                     "allow_mixed_classes boolean NOT NULL, " +
                     //  idea: Should the 2 dates to eliminated? The code is there, including in the parent class, and they might be useful,
                     //  maybe no harm while we wait & see.
                     // see "create table RelationToEntity" for comments about dates' meanings.
                     "valid_on_date bigint, " +
                     "observation_date bigint not null, " +
                     "CONSTRAINT valid_reltogrp_parent_id FOREIGN KEY (parent_id) REFERENCES entity (id) ON DELETE CASCADE, " +
                     "CONSTRAINT valid_reltogrp_rel_type_id FOREIGN KEY (rel_type_id) REFERENCES relationType (entity_id) " +
                     ") ")
            dbAction("create index RelationToGroup_parent_id on RelationToGroup (parent_id)")
          .
          new
            create table grupo (id bigint DEFAULT nextval('RelationToGroupKeySequence') PRIMARY KEY, name varchar(" + entityNameLength + ") NOT NULL, insertion_date bigint not null, allow_mixed_classes boolean NOT NULL) 
            
            create table RelationToGroup (" +
                     // the entity id of the entity whose attribute (subgroup, RTG) this is:
                     "entity_id bigint NOT NULL, " +
                     "rel_type_id bigint NOT NULL, " +
                     "group_id bigint NOT NULL, " +
                     //  idea: Should the 2 dates to eliminated? The code is there, including in the parent class, and they might be useful,
                     //  maybe no harm while we wait & see.
                     // see "create table RelationToEntity" for comments about dates' meanings.
                     "valid_on_date bigint, " +
                     "observation_date bigint not null, " +
                     "PRIMARY KEY (entity_id, rel_type_id, group_id), " +
                     "CONSTRAINT valid_reltogrp_entity_id FOREIGN KEY (entity_id) REFERENCES entity (id) ON DELETE CASCADE, " +
                     "CONSTRAINT valid_reltogrp_rel_type_id FOREIGN KEY (rel_type_id) REFERENCES relationType (entity_id), " +
                     "CONSTRAINT valid_reltogrp_group_id FOREIGN KEY (group_id) REFERENCES grupo (id) ON DELETE CASCADE " +
                     ") ")
            create index RTG_entity_id on RelationToGroup (entity_id)")
            create index RTG_group_id on RelationToGroup (group_id)")
          .
          to update old to new (my db)
            make a backup copy of the whole schema 1st? back it up to other machine, anyway?
            rename the sequence? no just do the tables & keep using it
            create group table as above
              --BEGIN TRANSACTION ;  --?
              
              create table grupo (
                id bigint DEFAULT nextval('RelationToGroupKeySequence') PRIMARY KEY, 
                name varchar(140) NOT NULL, 
                insertion_date bigint not null, 
                allow_mixed_classes boolean NOT NULL);
              
            copy all from old rtg to new g
              how best: in a script or sql? can 'insert from'...?
              
              insert into grupo (id, name, insertion_date, allow_mixed_classes) 
                select id, name, 1401204162189, allow_mixed_classes from relationtogroup;
              
              --update grupo set (insertion_date) = 1401204162189;
              
              alter table grupo owner to lacall;
            .
            do some verification!!
            massage the rtg table into looking like the new rtg table
            do more verification!!
            put back constraints on entitiesinagroup as they  s.b. now! 
              compare old/new files...
              those I dropped:
                valid_relation_to_group_id
            be ready to redo anything I have, if not *fully* tested?
              i.e., to query out all added entities, other data...? or what, if find bugs *after* testing that mess up data or require me to use the other jar temporarily!???
            .
            make these things the same wrt database!?:
    [cont,next proc/cmt:-----------------%%$%  ------------------------------- ]
      add searching for when you add an existing group 
      cont testing it at breakpoints.
      proc
      gp
      ASAP: should I ck breakpoints (esp in db things!) left on laptop be4 syncing back, to see what else to test!!??
        reset those here 2 cont testing?
      .
      fix index on entitiesinagroup so it disallows > 1 of group_id, entity_id!
              om_lacall=# select * from entitiesinagroup where group_id=-9223372036854775755;
                     group_id       |      entity_id       |    sorting_index     
              ----------------------+----------------------+----------------------
               -9223372036854775755 | -9223372036854775637 | -9223372036854775808
               -9223372036854775755 | -9223372036854775637 |  9223372036854775807
        have another index to help sort things, or at least remove s_i field and cmt why
      .
      need to debug imports, just step thru it & fix things; they seem messed up
        importing without the single top level in the file (or answer 'y'??), OR you get an existing group duplicated, and its name is used as the parent of the imported stuff!
          ck revu to see if all brkpoints needed are there
          build/run, test it now with 
          %%
            /home/lacall/testomimport.txt
          .
          etc
        .
        here is a text file's content to use:
          1
            2
            3
          4
          5
            6
              7
                8
        .
        write a test as noted elsewhere, now??
        
        OR, if you say 'y', it adds the data even if you say no?
          on mDB.mConn, autoCommit is true
          and mDB.mConn.protoConnection.transactionState is 0 at least sometimes
            how did those get set?
            do we want that? need to ck code everywhere, if changed?
              can add tests around this? 
              how'd I miss it for so long!?
            does *any* rollback work!?
              if not, how'd I miss *that* for so long!?
            .
          do I need a new jdbc driver?
          .
        .
        do I have a note somewhere to make all imported items of the same class? what do about that, on importing all this stuff?????
          or can fix up in bulk as needed later...?
        .
        should import leave the observationdate as the file date, or what would best inform a future observer trying to discern meaning?
      .
      what are the UI changes here: need way to select the existing grp, 2 add it, or...?
        that search feature
          git show 126c30d682df3e30a08b1ef323772a0c0124838c
      .
    .
    sort the below, what move to 0.0.4a or .5... or just the debt list?
    
    sch for 'om bug' &c in vt
    
    fix bug from when in slow group menu, choose 5,1 to "Go edit the relation to group that led us here :has group/1:...", AND THEN you choose a new group for it (date and all), BUT choose "correct it" at the end, and try the other 2 menu options (1 search, 2 create new) but ESC ouyt from them, and you get a NPE:
      should it even allow that sequence? does it make sense??
      msg
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has: name1, name2, ___?, info2name3; valid unsp'd, obsv'd Tue 2014-05-27 16:31:27:763 MDT                                             
         b-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        a
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: name1, name2, ___?, info2name3 (class: todo-template): found via relation: t2 has: name1, name2, ___?, info2name3; valid unsp'd, obsv'd Tue 2014-05-27 16:31:27:763 MDT
        No attributes have been assigned to this object, yet.
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (name1, name2, ___?, info2name3 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
        4
        
        
        
        
        
        
        ==============================================
        Choose a deletion or archiving option:
        1-Delete this entity
        2-Archive this entity (remove from visibility but not permanent/total deletion)
        3-Delete the linking relation between the linker: "t2", and this Entity: "name1, name2, ___?, info2name3"
        0/ESC - back/previous menu
        3
        DELETE the relation: ARE YOU SURE? (y/n) (y/n) [defaults to n]: 
        n
        
        
        
        
        
        
        ==============================================
        Did not delete relation.
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: name1, name2, ___?, info2name3 (class: todo-template): found via relation: t2 has: name1, name2, ___?, info2name3; valid unsp'd, obsv'd Tue 2014-05-27 16:31:27:763 MDT
        No attributes have been assigned to this object, yet.
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (name1, name2, ___?, info2name3 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
        4
        
        
        
        
        
        
        ==============================================
        Choose a deletion or archiving option:
        1-Delete this entity
        2-Archive this entity (remove from visibility but not permanent/total deletion)
        3-Delete the linking relation between the linker: "t2", and this Entity: "name1, name2, ___?, info2name3"
        0/ESC - back/previous menu
        3
        DELETE the relation: ARE YOU SURE? (y/n) (y/n) [defaults to n]: 
        y
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        a
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST
        1-Add entry
        2-Other (slower, more complete menu)
        0/ESC - back/previous menu
        ESC
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        ESC
        
        
        
        
        
        
        ==============================================
        invalid response
        Press any key to continue (except the spacebar)...
        
        
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        ESC
        
        
        
        
        
        
        ==============================================
        invalid response
        Press any key to continue (except the spacebar)...
        ESC
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        ESC
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (regular menu: more complete, so slower for some things): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Add entity to group (if you add an existing entity with a relationship to one group, that is effectively adding that group as a subgroup to this one)
        2-(stub)
        3-Edit group name
        4-Delete...
        5-Go to...
        6-Search: list next items
        7-Filter (limit which are shown; unimplemented)
        8-(stub)
        9-Quick group menu
        0/ESC - back/previous menu
         a-t2                                                                                                                                        
        ESC
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: <j>umbled info,<j>unk to organize, class: (mixed); valid unsp'd, obsv'd Tue 2014-02-18 16:55:08:992 MST
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
         a-goals for 2014 - 2018?: ...                     
         b->if have enough money someday, to pay off kids' loans                                                                                     
         c->test todo entries                                                                                                                        
        *d->t1                                                                                                                                      
        d
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-t2                                                                                                                                       
        5
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        5
        
        
        
        
        
        
        ==============================================
        Go to...
        1-Go to class-defining entity
        0/ESC - back/previous menu
        1
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: todo-template (defining entity (template) for class: todo-template)
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (todo-template (defining entity (template) for class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-description: "."; valid unsp'd, obsv'd Wed 2014-01-01 15:24:28:730 MST                                                                    
        ESC
        
        
        
        
        
        
        ==============================================
        **CURRENT ENTITY: t2 (class: todo-template): found via group: t1
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-Go to...
        6-Search: list next items
        7-Set current entity (t2 (class: todo-template)) as default (first to come up when launching this program.)
        0/ESC - back/previous menu
         a-has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST                                             
        ESC
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-t2                                                                                                                                       
        a
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/0: testgroup1, class: (mixed); valid unsp'd, obsv'd Thu 2014-02-20 11:18:50:923 MST
        1-Add entry
        2-Other (slower, more complete menu)
        0/ESC - back/previous menu
        ESC
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-t2                                                                                                                                       
        9
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (regular menu: more complete, so slower for some things): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Add entity to group (if you add an existing entity with a relationship to one group, that is effectively adding that group as a subgroup to this one)
        2-(stub)
        3-Edit group name
        4-Delete...
        5-Go to...
        6-Search: list next items
        7-Filter (limit which are shown; unimplemented)
        8-(stub)
        9-Quick group menu
        0/ESC - back/previous menu
         a-t2                                                                                                                                        
        5
        
        
        
        
        
        
        ==============================================
        1-Go edit the relation to group that led us here :has group/1:...
        2-(stub: no class-defining entity to go to)
        0/ESC - back/previous menu
        1
        
        
        
        
        
        
        ==============================================
        CHOOSE TYPE OF (%%or edit existing?) Relation to Entity:
        1-Search: list next items
        2-Keep previous selection (has).
        3-Add new relation type (i.e., ownership of or "has" another entity, family ties, etc)
        0/ESC - back/previous menu
         a-has                                                                                                                                       
         b-is child of                                                                                                                               
         c-is sibling to                                                                                                                             
         d-is spouse of                                                                                                                              
         e-is hometeaching partner with                                                                                                              
         f-hometeaches                                                                                                                               
        a
        
        
        
        
        
        
        ==============================================
        Please choose a relationship type
        1-Search: list next items
        2-Add new relation type (i.e., ownership of or "has" another entity, family ties, etc)
        0/ESC - back/previous menu
         a-has                                                                                                                                       
         b-is child of                                                                                                                               
         c-is sibling to                                                                                                                             
         d-is spouse of                                                                                                                              
         e-is hometeaching partner with                                                                                                              
         f-hometeaches                                                                                                                               
        a
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 518 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-cla...ne or in standup - group                                                                                                      
         X-what is the priority of data quality, really? what is our responsibility? - group                                                         
        b
        Please enter the date when this was first VALID (true) (like this, w/ at least the year: "2013-01-31 23:59:59:999 MST"; zeros are allowed in all but the yyyy-mm-dd):  (Or for "all time", enter just 0.  Or for unknown/unspecified leave blank.  Or for current date/time enter "now".  ESC to exit this.  For dates far in the past you can prefix them with "BC " (or "AD ", but either way omit a space before the year), like BC3400-01-31 23:59:59:999 GMT, entered at least up through the year, up to ~292000000 years AD or BC.  There is ambiguity about BC that needs some investigation, because java allows a '0' year (which for now means 'for all time' in just this program), but normal human time doesn't allow a '0' year, so maybe you have to subtract a year from all BC things for them to work right, and enter/read them accordingly, until someone learns for sure, and we decide whether to subtract a year from everything BC for you automatically. Hm. *OR* maybe dates in year zero just don't mean anything so can be ignored by users, and all other dates' entry are just fine, so there's nothing to do but use it as is? But that would have to be kept in mind if doing any relative date calculations in the program, e.g. # of years, spanning 0.) 
        Also, real events with more specific time-tracking needs will probably need to model their own time-related entity classes, and establish relations to them, within their use of OM.: 
        
        WHEN OBSERVED?: Please enter the date (like this, w/ at least the year "2013-01-31 23:59:59:999 MDT"; zeros are allowed in all but the yyyy-mm-dd).  Or press Enter (blank) for "now"; ESC to exit.  "BC" or "AD" prefix allowed (before the year, with no space). ("All time" and "unknown" not allowed here.)  [defaults to AD2014-05-27 15:31:03:402 MDT]: 
        
        Dates are: valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT: right? (y/n) (y/n) [defaults to y]: 
        y
        
        
        
        
        
        
        ==============================================
        1-1-Save this relation to group attribute?
        2-2-Correct it?
        0/ESC - back/previous menu
        2
        
        
        
        
        
        
        ==============================================
        CHOOSE TYPE OF (%%or edit existing?) Relation to Entity:
        1-Search: list next items
        2-Keep previous selection (has).
        3-Add new relation type (i.e., ownership of or "has" another entity, family ties, etc)
        0/ESC - back/previous menu
         a-has                                                                                                                                       
         b-is child of                                                                                                                               
         c-is sibling to                                                                                                                             
         d-is spouse of                                                                                                                              
         e-is hometeaching partner with                                                                                                              
         f-hometeaches                                                                                                                               
        a
        
        
        
        
        
        
        ==============================================
        Please choose a relationship type
        1-Search: list next items
        2-Add new relation type (i.e., ownership of or "has" another entity, family ties, etc)
        0/ESC - back/previous menu
         a-has                                                                                                                                       
         b-is child of                                                                                                                               
         c-is sibling to                                                                                                                             
         d-is spouse of                                                                                                                              
         e-is hometeaching partner with                                                                                                              
         f-hometeaches                                                                                                                               
        a
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 518 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-class-defining entities                                                                                                                   
         b-testgroup2                                                                                                                                
         c-docu...y of data quality, really? what is our responsibility? - group                                                         
        1
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 468 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-lunch                                                                                                                                     
         b-fix atwra...                                                                                                                                 
         W-2014-2-24--2014-3-11                                                                                                                      
         X-2014-2-24--2014-3-11                                                                                                                      
        1
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 418 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-ideas                                                                                                                                     
         b-2014-3-1...ng list here; add 2 it to GET EARMUFFS4HOME. ?                                                                               
        2
        
        
        
        
        
        
        ==============================================
        Not yet implemented; available from other place(s) in menu...
        Press any key to continue (except the spacebar)...
        
        
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 418 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-ideas                                                                                                                                     
         b-2014-3...list here; add 2 it to GET EARMUFFS4HOME. ?                                                                               
        2
        
        
        
        
        
        
        ==============================================
        Not yet implemented; available from other place(s) in menu...
        Press any key to continue (except the spacebar)...
        
        
        
        
        
        
        
        
        ==============================================
        SELECT GROUP FOR THIS RELATION
        1-Search: list next items (of 418 more)
        2-Create new group (aka RelationToGroup)
        0/ESC - back/previous menu
         a-ideas                                                                                                                                     
         b-2014-3-1...list here; add 2 it to GET EARMUFFS4HOME. ?                                                                               
        ESC
        
        
        
        
        
        
        ==============================================
        Blank, so assuming you want to cancel; if not come back & add again.
        Exception in thread "main" java.lang.Exception: Key -9223372036854760897/-9223372036854775806/-9223372036854775782 does not exist in database.
                at org.onemodel.RelationToGroup.<init>(RelationToGroup.scala:14)
                at org.onemodel.Controller.groupMenu(Controller.scala:2779)
                at org.onemodel.Controller.quickGroupMenu(Controller.scala:2577)
                at org.onemodel.Controller.quickGroupMenu(Controller.scala:2600)
                at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:905)
                at org.onemodel.Controller.entityMenu(Controller.scala:1071)
                at org.onemodel.Controller.mainMenu(Controller.scala:315)
                at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                at org.onemodel.Controller.start(Controller.scala:124)
                at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                at org.onemodel.TextUI$.main(TextUI.scala:26)
                at org.onemodel.TextUI.main(TextUI.scala:1)
        lacall@acerblack Tue May 27 16:36:45:~/proj/om
        
      .
    .
    bug when adding 2nd entry to a group, then immediately moving it w/ 2,3 results in stack trace:
      msg
        **CURRENT ENTITY: Luke
        Attribute list menu: (or choose attribute by letter)
        1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
        2-Import/Export...
        3-Edit name
        4-Delete or Archive...
        5-(stub: no relation or classDefiningEntity to go to)
        6-Search: list next items
        0/ESC - back/previous menu
         a-has: spirit; valid all time, obsv'd Wed 2013-11-13 15:42:53:847 MST                                                                       
         b-has: <B>ody; valid unsp'd, obsv'd Wed 2013-11-13 18:44:52:049 MST                                                                         
         c-has: <C>ontacts (relationships with people and groups); valid unsp'd, obsv'd Sat 1966-01-01 00:00:00:000 MST                              
         d-has: <D>ocuments; valid unsp'd, obsv'd Tue 2013-11-26 06:50:40:616 MST                                                                    
         e-has: rol<E>s; valid Thu 1970-01-01 00:00:00:000 MST, obsv'd Fri 1971-01-01 00:00:00:000 MST                                               
         f-has: <F>uture plans; valid unsp'd, obsv'd Fri 1988-01-01 00:00:00:000 MST                                                                 
         g-has: material resources (<G>old); valid unsp'd, obsv'd Tue 2013-01-01 00:00:00:000 MST                                                    
         h-has: <H>istorical info (personal; also other?); valid Fri 1966-05-27 01:00:00:000 MDT, obsv'd Wed 1969-01-01 00:00:00:000 MST             
         i-has: contextual <I>nformation; valid unsp'd, obsv'd Sat 1966-01-01 00:00:00:000 MST                                                       
         j-has group/4: <j>umbled info,<j>unk to organize, class: (mixed); valid unsp'd, obsv'd Tue 2014-02-18 16:55:08:992 MST                      
        j
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: <j>umbled info,<j>unk to organize, class: (mixed); valid unsp'd, obsv'd Tue 2014-02-18 16:55:08:992 MST
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-goals for 2014 - 2018?: ...                    
         b->if have enough money someday, to pay off kids' loans                                                                                     
         c->test todo entries                                                                                                                        
         d->t1                                                                                                                                       
        d
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-t2                                                                                                                                       
        1
        NAME THE ENTITY:
        Enter entity name (up to 140 characters): : 
        testing4
        
        
        
        
        
        
        ==============================================
        Nowhere to move it to, so doing nothing.
        Press any key to continue (except the spacebar)...
        
        
        
        
        
        
        
        
        ==============================================
        ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/2: t1, class: (mixed); valid unsp'd, obsv'd Tue 2014-05-27 15:31:03:402 MDT
        1-Create new entry
        2-Move selection (*) up/down, in, out...
        3-Edit group name
        4-Delete or Archive the selection (*)...
        5-Go to highlighted entity (not the subgroup)
        6-Search: list next items
        7-Select target (entry move destination: gets a '+')
        8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
        9-Other (slower actions, more complete menu)
        0/ESC - back/previous menu
        *a-testing4                                                                                                                                 
         b-t2                                                                                                                                        
        2
        
        
        
        
        
        
        ==============================================
        1-Move up 5
        2-Move up 1
        3-Move down 1
        4-Move down 5
        5-(stub: have to choose a target before you can move entries to it)
        6-Move (*) to calling menu (up one)
        0/ESC - back/previous menu
        3
        Exception in thread "main" org.onemodel.OmException: never should have got here: should have been the logic of ~nowhere to go so doing nothing
                at org.onemodel.Controller.getNewSortingIndex$1(Controller.scala:2219)
                at org.onemodel.Controller.placeEntryInPosition$1(Controller.scala:2165)
                at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:2310)
                at org.onemodel.Controller.quickGroupMenu(Controller.scala:2476)
                at org.onemodel.Controller.quickGroupMenu(Controller.scala:2600)
                at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:905)
                at org.onemodel.Controller.entityMenu(Controller.scala:1071)
                at org.onemodel.Controller.mainMenu(Controller.scala:315)
                at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                at org.onemodel.Controller.start(Controller.scala:124)
                at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                at org.onemodel.TextUI$.main(TextUI.scala:26)
                at org.onemodel.TextUI.main(TextUI.scala:1)
        
      .
    .
    fix bug that when one adds an entity by SEARCHing for "test", it creates more than expected #  of results and fails on textui 314
      or, later??
      line says:
        require((choices.size + moreChoices.size) <= possibleMenuChars.size)
      .
    .
    
    when try out the fsc speed improvements in scala 11? does it work 4 me? 
      didn't last time IIRC. try only later, or?
    .
    fix the looping, never lets you out of "no more found" 
      AND, why didn't it findit!?
      
      output
        3
        Enter part of an entity name to search for.  (For the curious: it will be used in matching as a case-insensitive POSIX regex; details at  http://www.postgresql.org/docs/9.1/static/functions-matching.html#FUNCTIONS-POSIX-REGEXP .): 
        notes
        
        
        
        
        
        
        ==============================================
        End of list, or none found; starting over from the beginning...
        Press any key to continue (except the spacebar)...
        
        
        
        
        
        
        
        
        ==============================================
        End of list, or none found; starting over from the beginning...
        Press any key to continue (except the spacebar)...
        n
        
        
        
        
        
        

    .
    make the sch results show '>>', '>' as needed!
    
    ck the "om bug"s in vt.
    
    do I want to be able to control where it adds the entry (vs. always at the last?)
      or later
    
    ck proc
    change new option 3 to be in a better place so 'search' option is consistently #1?
    if group is limited by class, make the search be, also? 
      (or later)
    .
    
    
    make priorities below?:
      editing
      color
      contacts
      tracking health things
      sharing
    .
    more on import/export
      import more stuff
        add some like todolists/vsgeer between my generic futureplans places, roles/goals places, and vsgeer place?
          such as
            add prof'l task list from top/future/tasks/prof...   to om rol<E> entity ?
            add om-specific task list ("OM work") to prof also
          consider tho' the dif'c between:
            1) in a subgroup, adding an entity that has a group
            2) to an entity, actually adding a group (OR, an entity that has a group, in some cases!?)
            and doc that or anything? (is in proc, should see it there right?)
          .
        under plans (just below 'topics')
         study re the maturity model/steps? (similarly for knowledge elements/abil's/traits/service-talks/exs in src &c!--those indiv'ly?)
         about maturity models
           keeping in mind the *end* goal, how much overlearning vs. barely learning spectrum, at what point, is most helpful for lowest cost & delay?
           and at what point (in age, time, time relative to other aspects of balanced maturity, problem-solving,..?) is it best to move forward?
           does this apply dif'tly to oneself, vs. to mentoring others?
           how track thesee for an indiv? (wehre at, evals by self/others, what next): in a vsgeer or is that just a template for a person 2 use, or..?
           what is shared by a mentor and when? w/ the person (vs. harming by giving info that not ready for & won't handle safely?, vs. confiden.?)
           what review, recing, when?
         start modeling from the beginning, and build in things for measures of goodness(knowing when 'done') (overlearn&c elsewhere),&revu/maint!
         milestones, key steps/where learn
           desire; willingness to make/keep simple commitments (like PMG, Alma 32...)
           unfiled?:
             habit of prayer, quality of prayer...
             habit of scrs readding, quality of it
             habit of obedience in gen'l to stuff learned so far, quality of the obedience
           membership: miss'ry commitments, bapt interview/cov't
           regular meeting attendance, listening (participating as fits)
           understand sacrament prayer; follow it
           sermon on the mount
             becoming a true Christian....
             study it carefully, prayerfully, & evaluate life
             tips for how to do individual things....
             turn other cheek: clarified in JST Luke ...
           articles of faith
           throughout: service to others in one's various roles, prioritized
           FSOY understanding/compliance, temple recommend worthiness/holding
           basic contents of scriptures: teachings, stories (habit of reading them, including 1st pres'cy messages like fam procl, and gen'l conf
           learn by worthiness, study & practice & humility, how to get/follow/keep the infl. of HG
           things taught in SS & youth/prstd classes, man'ls
           making & keeping covenants
           *really* follow sacrament prayer
           things mentioned in 2 peter 1 (or wherever mentions making calling/election sure) AND the attributes in D&C 4!          
        .
        also import the stuff I typed in vt (& share w/ abby?)
        would this also affect export?
      .
      make tests for import/export along these lines / bugfixes!?
        note it for later: to make tests for the bugfixes in these commits.
      .
      see file
        onemodel-export_-9223372036854775807_Luke-3823251941773339984.txt
      ...under om/other.../, and why the "group named" part at t he end looks so wrong. Worth redoing tha tstuff so import/export really can exchange together!!?  write tests for that now??! AND:
        is the intenting weird for the contents of it?
          it's that I have 2 kinds of groups: implicit and explicit, and handling them the same makes it look funny. So, what best?
      .
    .
    bunch of fixes to do or move to debt list or 0.0.4x; misc improvements/friendliness?
      prioritize these, for be4 releasing/demos, soon after, or sometime later....
        does 'release critical' like debian idea help here?
      .
      replace the archived boolean with making the date non-nullable, and its presence means archived?
        and should subgroups be able to be archived? (grp and all contents?: warns how many?)
      .
      make this err more friendly (entering a name too long):
        Enter entity name (up to 60 characters): : 
          msg
            ARCHIVED-ENTITY-THAT-SHOULD-NEVER-SHOW-UP-ANYWHERE--AS-PERMANENT-TEST
            Exception in thread "main" java.lang.Exception: Exception while processing sql: INSERT INTO Entity (id, name) VALUES (-9223372036854775666,'ARCHIVED-ENTITY-THAT-SHOULD-NEVER-SHOW-UP-ANYWHERE--AS-PERMANENT-TEST')
                    at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:124)
                    at org.onemodel.PostgreSQLDatabase.dbAction(PostgreSQLDatabase.scala:206)
                    at org.onemodel.PostgreSQLDatabase.createEntity(PostgreSQLDatabase.scala:892)
                    at org.onemodel.Entity$.createEntity(Entity.scala:17)
                    at org.onemodel.Controller.askForNameAndWriteEntity(Controller.scala:383)
                    at org.onemodel.Controller.askForInfoAndCreateEntity(Controller.scala:240)
                    at org.onemodel.Controller.chooseOrCreateObject(Controller.scala:1227)
                    at org.onemodel.Controller.askForAttributeTypeId(Controller.scala:1094)
                    at org.onemodel.Controller.org$onemodel$Controller$$askForRelationEntityIdNumber2(Controller.scala:1403)
                    at org.onemodel.Controller$$anonfun$addRelation$1$1.apply(Controller.scala:694)
                    at org.onemodel.Controller$$anonfun$addRelation$1$1.apply(Controller.scala:694)
                    at org.onemodel.Controller.askForAttributeData(Controller.scala:1068)
                    at org.onemodel.Controller.askForInfoAndAddAttribute(Controller.scala:633)
                    at org.onemodel.Controller.addRelation$1(Controller.scala:692)
                    at org.onemodel.Controller.entityMenu(Controller.scala:922)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:807)
                    at org.onemodel.Controller.entityMenu(Controller.scala:978)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:807)
                    at org.onemodel.Controller.entityMenu(Controller.scala:978)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:807)
                    at org.onemodel.Controller.entityMenu(Controller.scala:978)
                    at org.onemodel.Controller.mainMenu(Controller.scala:308)
                    at org.onemodel.Controller.menuLoop$1(Controller.scala:120)
                    at org.onemodel.Controller.start(Controller.scala:123)
                    at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                    at org.onemodel.TextUI$.main(TextUI.scala:26)
                    at org.onemodel.TextUI.main(TextUI.scala:1)
            Caused by: org.postgresql.util.PSQLException: ERROR: value too long for type character varying(60)
                    at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
                    at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
                    at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
                    at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
                    at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
                    at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:299)
                    at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:127)
  
        .
      .
      edit entity grp names?
      change every "throw" inside OM to throw an OmException or subclass.
      
      under unsorted/junk/jumbled, put possible top-level other items?
        ~"things I have" could also incl:
          knowledge (anki-like or more?)
          habits/routines
            or goes better under vsgeer or elshwere, or not at all?
      .
      model spiritual development by?
        seeing in scrs how ppl grew in ways Peter(?2?)/D&C4 says are needed, incl?
          humility
            how did ppl become humble & repent at dif't times, coming from dif't places? who?
        goes under history? mentoring?
      .
      .
      reverse these defaults?
        Do you want to add attributes to the newly created defining entity for this class? (These will be used for the prompts and defaults when creating/editing entities in this class). (y/n) [defaults to y]: 
        
        Should this group allow entities with mixed classes? (Usually not desirable: doing so means losing some conveniences such as scripts and assisted data entry.) (y/n) [defaults to n]: 
      .
      do I need to allow importing into a *group* (on alt.9 menu), not just entities? do same thing from there, prob'ly
        probly not, as can alr add an entity & import to *it*
      BUT, should chaning adding a grp to an entity to not create *another* entity between: just the grp right?
      
      note4when?:
        figure out waht chars are allowed (and desired, like not spaces?) in a file name and:
          no slashes at least!
          multi-platform?
          prevent them from being in the exported filenames I use
        .
      .
      typing 'r' on a group causes ESC behavior, why?
      (then when good, start entering/org'ing notes re sp growth in om, from...where?)
      
      put all this in om now? or just start using that way? or wait for sharing?
        is it in right order of things4now?
          notes w/ main entry 4 that thing
          all under right 'version' 
        shorten lines also
        and daily stuff!? practical?
        prac using it4atime logs, tasks, whatever reporting/tracking 4 work
      .
      auto-display the date that is already saved at entity creation
        where..how..do
      .
      bug where doing stuff(? editing but not, del but not, or moving/adding?) then saying add but not(?), then coming back shows fewer entries in the list until re-gen'd. 
        workaround: go out & come back in
        
        (or skip 4 now since good wkaround, other debt is worse like file sizes?)
      .
      work on performance: esp when navigating/redisplaying a list frequently (way too slow)
        MOVE THIS DOWN BELOW TO BUG/DEBT LIST
        so workaround: shorter lists?
        
        something in foss world like jprofiler?
        skip some details in quick menu?
          easy win?
      .
      in quickmenu, instead of creating an entry below an entry, then moving it 'in' to make a subgroup, could be more efficient?:
        make quickmenu's add option not do entity add but grp add: create a subgroup & go there (but not show > unless has an entry?)
          any reason not to do it this way?
            solves below problem w/ > or not, by adding a sub-entry and subgroup ONLY if user types it in & doesn't hit ESC?
        or something else that doesn't create the subgroup if nothing added in it? 
      .
      display entity entry dates? where best?
      
      start/cont using!! for all further notes.
        n jnl?
      .
      then, can put stuff in junk & efficiently find/file later??
        have to allow mixed clases or use same for everything, or be able to assign class later (when adding to a grp, ask?), or?
          maybe it's none or just mixed & quik to say none.
      .
      make the rsync fail badly if the doc contents table isn't there!
        would that err have been output somehow: why didn't catch it? if get errs in future, can abort (excepting the expected ones)?
        so, what approach is best: decide.
        read up on psql cmds a little? to ck 1st/fail, or what?
        test it in some good way!! remove the module 'lo' 1st, see it fail, then put it back & see it work?
          syncing back to work laptop that way, then back here, ck if doc still there, good?
        what takes to be more confident!? enough to start the syncfrom-* script to delete old pg bkups again?
          do I have everything, or how find out what else was dropped in xfers?
      .
    .
    implement copyright assignment
      see open tabs?
      sort the below
      let the README say at top (or a CONTRIBUTING file)?:
        all contributions should be via pull request where included in at least the latest git comment of your commits is this text:
          "I hereby assign copyright on this commit and those it depends on to Luke Call.  I assert that to the best of my knowledge that I have full rights to do so and that those contributions free of patent or other encumbrances or future problems."
        ...or whatever it should say based on my readings.
        
        Or, could there be a one-time thing, and future stuff from that person automatically falls under it until said otherwise in a commit?
        .
        reasons pro (to expl?)
          better changce to make a living if have flexibility for future (have to provide for family. with questionable health?)
          still have strong desire to be open & make maximally useful to the most people
          single entity makes it easier to fight infringements, or to assign copyright in the future to a nonprofit if opp'ty allows.
          probably more ...?
        .
        if so, take out things in startup, & eac hfile that say like "and any other contributor"?
        make part of my code review process to first check for that (and general relevance, trust the committer enough to give it time?), before reviewing further?
        
      reconsider cost/benefit here!
      see any notes elsewhere?
      changestartup text
        app version and copyright date in startup text to reflect what is in pom w/ filtering?
      .
      what debian is thinking? or some? trusted copyright holder org:
        from debian project news 2014-3-17:
          Lucas mentioned the ongoing work by
          Stefano Zacchiroli, the Software Freedom Conservancy [20] and SPI [21]
          to offer Debian contributors the possibility to transfer the copyright
          of their contributions to a "trusted" organisation. Lucas also forwarded
          to Debian France [22], Debian.ch [23] and FFIS [24] the list of
          evaluation criteria [25] to become a trusted organisation, authorised to
          accept and hold assets for Debian.
                  
             19: http://lists.debian.org/debian-devel-announce/2014/03/msg00001.html
             20: http://sfconservancy.org/
             21: http://www.spi-inc.org/
             22: http://france.debian.net/
             23: http://debian.ch/
             24: http://www.ffis.de/
          .
        .
      give to fsf?
      have an assignment form like other proj's, such as the kernel or something? what is a good example?
      what does bruce perens say? or the fsf say or eff if they do?
      what does slashdot say?
      put on list for s.o. else to help? do this for licensing/copyright reg, fsf etc?
        There is no legal requirement to register your copyright with anyone; simply distributing the program makes it copyrighted. However, it is a very good idea to register the copyright with the US Registry of Copyrights, because that puts you in a stronger position against anyone who violates the license in the US. Most other countries have no system of copyright registration.
        
        If the program runs on some form of the GNU operating system, such as GNU/Linux or GNU/Hurd, we would probably like to make a link to the web site for your program. So please tell webmasters@gnu.org the URL. Also, we would like to list your program in the Free Software Directory once it is working solidly. Please contact directory@gnu.org.
        
        It is also possible to make your program a GNU package, a part of the GNU Project. (That's if we like the program--we have to look at it first, and decide.) If you might be interested in joining up with the GNU Project in this way, please tell gnu@gnu.org, and we'll explain more.
      .
    .
    when should i do an OM 'release' or other proc steps for boundaries?
      re rel, see below about versions/milestones2pick one?
    .
    go thru iteration boundary stuff 4 this now.
    
    post a binary at the web site
      make a downloadable with
        INSTALLING (modified such that the .jar already built, put BUILDING instructions elsewhere...same file or new?)
        script(s?) to run it
        whatever else makes it SIMPLE for someone to inst (like, ben? tom/markB?)
      and a zip & tgz w/ those files: executable in the tgz.
    .
    tell tomP/markB re that, don't know if mailing list works, and future themes as doc'd in detail in this text file.
    .
  .
  ck our old mailing lists & tell tom/mark? in big context: just do it now? or get ben/D using, & sharing 1st? when demos?
  .
  demo2jared? LUNCH!?
  
  NEXT BIG THINGS!
    ck bus list & integrate w/ this group: high dual priorities of revenue & long-term quality.
    
    start studying again!
    (blurbs and?), prep4demos (incl COLOR, overvu/plan&c?), business steps
    (links in blurbs "about donations", "how you can help", "about funding:, ":donating" etc? 
      but not to alienate/irritate!!!
      ask devin 2revu?
    .
    sharing
    
    start using now to track health? like txt file, or more lik the spreadsheet? what do I need for it to work most cost-effectively in short, vs. med/long term?
      NOT NOTED ELSEWHERE.
    .
    who does github show as 'om' acct *contributors*: make it my acct?
    see other todo list
    b txt (d?)
    personal vsgeers &c
    debt reduction: start w/ making classes & methods smaller!
  .
  0.0.4x: refinements/bugfixes? or move to next release w/ a theme? or make it 0.0.5 & move others forward? 0.1 is still far enough off w/ plenty of #'s in between, right? or can simply go beyond 0.0.10 etc: depends on meaning, or whatever helps most. revu the 0.1 criteria & see.
  
  0.0.5 theme: sharing? many refinements, questions on using entities/classes etc for attributes; oct 26-nov 5? 0.0.5: i use it *and* it's better than what i was doing before: loving it; full spreadsheet replacement?
    sharing is primarily or just initially a way for others to see how I use it, even if I don't have other data to share?
      or, a way to share task lists, do planning/brainstorming on a big screen and share the results?
        could this be collaborative, i.e., have really slick merge capabilities, so a meeting is we all do it, then we all merge into a single one somehow, or one person does the merges into their own or the shared one, in front of the group?
        
        or it's a group-contained one, and everyone gets a copy, then the group pulls stuff in or indivs do, whenever?
      .
      .
    .
    3 implement some color/general highlighting, make it easy to make more text use it later.
    'colors'/general highlighting: make names stand out more, maybe the top #'d menu opts?  !
      1st see how done at all, try itt w/ repl
      
      pass instead of 1 string per line, a line is from a collection containing strus of some kind: each stru has a string and some indication of color (or of a priority instead: what would go best w/ a dif't UI?)?
      
      how does scalatest do colors on the terminal? maybe use the same blue as this?:
        Run completed in 5 seconds, 45 milliseconds.
        Total number of tests run: 39
        Suites: completed 10, aborted 0
        Tests: succeeded 39, failed 0, canceled 0, ignored 0, pending 0
      .
      and maybe the #'s of 'choices' blue, for distinguising from letters/more?
    .
    try it some more, enough to validate ui/concepts so far? STUFF ABOUT OUTLINES ETC TO REPLACE MY TXT FILES!?:
      when importing stuff to om, learn from observing what I've kept, what is worth keeping in future? 
        or just assume storage is cheap, n keep info 4 records/analysis of my prev growth patterns & whatever else I can learn?
      .
      think: what do I *really* need next: the handy todo entry of classed data, or outlines/organizing, OR MODELING THINGS W/ WHAT I HAVE NOW. WHAT WILL REALLY MAKE IT MOST USEFUL TO ME IN WORKPLACE, AND/OR AS A TOOL TO MOVE OM ITSELF FORWARD, OR TO ORGANIZE ALL MY INFO & FAMILY PIX (SO AUTO-LINKED OR SEARCHABLE WHERE THEY SHOULD BE ETC), *or what* best??  or is sharing better 1st? (no, probably useful data entry, my use, so i have something to share...?)
      
    .
    when it works *at all*, update the readme line where now says working... or whatever status
      (ongoing...re-note 4 later).
    .
    'relations and direction'
      when showing rel types to choose, also show them all in reverse so you can add that way too? (ex: add rels from parents to rest of siblings, but using 'is parent of')
      
      when showing relations on an entity (w/ the other attrs), also show the relations that were created in the other direction? (i.e., where that entity is the entity2 of a rel)
        only for certain direction types?
      .
      what should we really do overall about duplicate entity names: when they're the ones that belong to dif't other entities, dif't people refer to dif't things by the same name? (rid of dup check, or make it smarter and only check things already on *that* entity, or how far2go?!?)
        could: add an entityMenu opt saying 'list entities relating to this'
          but something like that would have happened w/ other plan'd rel wk, no?: when we include entities on the other side of rels from this one, in theattr list?
            make it plain on those what the dir is?
            but what if not bidirectional?: then menu opt "show all entities relating to this one" makes more sense?
          .
          when adding this, could comment in ctrlr that a non-text UI should show this & other things in a more friendly way, probably
      
      .
      MORE RELATED, poss overlapping notes:
        need to be able to select relation types in reverse
          THINK THIS THROUGH from design standpoint of how caller will know it's a reversal...?
          
          need to include the reverse data (mingled? order by..what?) with the other data returned by getEntitiesGeneric when inTableName=="RelationType"
            & a test for this.
          .
          ...and then somehow, in ctrlr.askForAttributeData, it has to know that the returned id is for the rel IN REVERSE, and assign the values to the DH as fits.
          
          THEN we also have to display the reversed rels when showing entity attrs.
        .
      .
    .
    5? or  that estimate was for part of this: some refinements
      how will capture output like txt dumps from stack traces etc at work 2 revu ltr? put this on priority list to view files.../documents OF TEXT ATTRIBUTES.
        create a temp file
        if windows...put in msg that it needs to support notepad (just export to a temp file4now?)
        else use EDITOR or PAGER var & shell ... w/ those facilities.
        read back fr the temp file & update it
          make sure have backups since there is no undo!?!
      .
      convenient editing (prefill val 4 typing, cursor at end?)
      
      ideas for improvements to features/efficiency of lists/groups:
        .4 removal from groups in quick mode just removes from group unless it's the last group it's in (then, confirms? or says this?: 'are you sure you want to remove this from the last group that contains it?'  )
          archiving is its own thing, and 4 now, affects all lists....
            therefore is this needed even?
          Or should it just delete, or what?
        .
        show 'containing' entries as alternate to usual list 'abc...'
          i.e., see what things contain it
          in what contexts?
        allow selecting an existing group for adding a rel to group
          try it by putting 'documents' list (now under documents), into church member role: but it's a dif't list, no?
        allow searching for all groups and/or entities that contain or have a rel to a given entity?
          or put this under 'searching' 2 eval then.
        handle it if a group is already in both the destination and source groups, and user tries to move it to the dest. grp
          is in mDB.moveEntityToNewGroup
          just remove from src, don't try adding to dest?
        .
        allow moving an *entity* (group w/ 2 subgroups) up to prev group like we do now in quickgroupmenu 
          i.e., if you move a grp w/ 2 subgroups, into a sibling group, then go there, you'll see the entity menu which doesn't have that feature. If it has just 1 subgroup, you'd see immed. its group menu, which does have that feature.
        .
        **needs ability to move an entry from anywhere, to anywhere 
          consider use cases, simple design, cost/benefit
          use case: jumbled stuff, or moving something from onep lace in outline to very dif't place....
          so, mark, menu, search, affect?
            cut vs. paste?
          or, copy/paste just an id?
          works across windows (multi-platform?)
        .
        add menu options like this?
          move to containing group & go there
            puts in near this same one in the order: maybe right after it.
          move to containing group & stay here
          move to ...any group (see sort/filter just below)
        what else for 'speed' of entity entry/navigation/editing? (faster than jedit & better in many ways!?)
          consider each one a member of the idea class or thought?
            probably not: it can just be an entity w/ no class (esp if entered fast, like don't have 2 specify class).
          .
          break up "flowed" data by inserting some kind of token and it would break that into sub-entities which could then be moved up or down? (uses code similar to import, below, to create the ents/textAttrs?)
            doc this
          .
          quick entry (dif't menu choices? doesn't prompt for dates; what else to make it faster/better than jedit 4 that?)
        .
        (MAYBE this applies to hierarchical/containment lists of ANYTHING).
          (if not now, move below to reconsider later)
        .
        adding sort/filter opts to the object selection lists' menus!
          types of search/filter
            entities by class?
            recently addded
            "close" in the model
              for this 'nearest', it searches in network recursively until full # desired is found...saves where left off to cont w/ "more??
            "newest" 1st
            oldest 1st (as when 1st written/defa)
            showing only groups (not obj's, but the groups they are in)
          .
          break up the obj sel method by type? what best?
          
          maybe
            make more clear which is which in an attr (or ENTITY) list, w/ each one prefixed by their owning entity's name? or how distinguish one person's thing from another person's thing by the same name?
            
            saves the last one chosen for next time
              in user prefs?
                are prefs kept in a place the user can't delete?
              .
              or is it better for it to be eidtable &/or prevent deleting them, then use some kind of new system table? OR the ".system..." object?
            .
          .
        
        try using it?
        later, we might want to also allow subgroups of dif't types, and we move things around, ie entities can be in multiple classes and/or we can move them to subgroups anyway.
          but wait for a use case(s)!
      .
      what can be done on 'relations and direction' most economically? what is my timeframe: do it right or fast for usefulness w/o much time to work on it now?
      
    .
    RISK AREA;MAY ADD TIME: think what to do & when, about the questions on using entities/classes etc for attributes
    
    'questions on using entities/classes etc for attributes'?: part of entering ht partner's addr etc:
      can the concepts of class and attribute type be merged? some poss thoughts:
        consider these thots/q's, for the examples:
          inches
            an entity because it has history, definition, context?, who knows what else
            a class because it can have code (conversion to other units, math...?)
            a type because it describes quantities
          length
            an entity??: 
              context (dif't meanings in dif't physics theories, non-euclidian, whatever?)?
              rules?
              other?
            a class?
              might also have code: math, operations, rules, checks for validity (ie, nonnegative)?
            a type: also describes quantities?
              BUT DO THEY BOTH? DOES A QUANTITY HAVE 2 TYPES? OR EACH PART (UNIT/NUMBER) HAS A CLASS? EVAL THIS IN CONTEXT OF THE OTHER STUFF, Q'S...?
            .
          ssn
            %%
          street address
          other?
        q's/thots to eval for each example
          a class is an entity
          a class expressses type
          a class has code
          are all classes entities?
          are all entities classes?
          are all types one of those? both?
          don't use a class on an entity (type) unless you really need to?
          what is the class/type/code?/whatever for a text attr for house number and street? (or would those be broken down further?: prob'ly not, too many kinds, just settle on the 2 lines ppl use.? whatever is most generic?)
        design review? who when?
          be4 or after demos etc? or *now*? but, w/o review? just tom/mark, right now?
        will data need to be restructured for this?
      .
      need to distinguish in flow/ui, the entity template for a class, and the entity that gets created while adding a text (or other!?) attribute.
        and clean up the defining entities I added to zachery snow, creating new ones instead
      .
      can attributes have a class instead of an entity? (like home address...think thru it: does the street address part 
        OR, are addresses really broken down even further: is it worth it? (street, house humber, or has house which has number?)
        OR did it work the way I entered it: house has entity 'address', has attr whose type is entity 'street addr' where the entity is of class street addr: will that scale? be circular? try it....
        
        and will this work even better when one can enter things from classes, then i define an addr & use it?
        
        OR**: just clarify in the attribute that the entity is the *type*, and its class is the class for that *type* (such as the attribute *types* of weight, pounds/kilos, and ssn or street address conceptually are entities: those concepts have history, definition, whatever: we represent those concepts w/ nouns and so the type is in fact an entity.  The entity can have a class (units, strings, even ssn or street address itself could be a class, to store logic like to break it up into parts, or some other code shared across it? think more re this), but the class *doesn't* have to have a defining entity (or at least the defining entity doesn't require fields) until there's a reason for it
          just clarify this, in the UI and usage? docs?  Work w/ that & see how it goes? 
        .
      .
      a possible solution?: keep existing structure because
        (how doc/discuss/expl this2ppl?)
        each attr type is an *entity*, because it can have multiople names, context, etc
        each entity can have a class, where useful code aka behaviors is stored
        
        it doesn't matter if this *type* entity has,is,or is in  a class: it's simply handled by whatever shares the code ("group"?):  it's a "code-holder/grouper" by whatever name.
        
        a class shouldn't always need a template entity unless that is useful.  I.e., we might have code, or grouping(?), around entities, but not have to have fields on it. (example is a house number line of a home address?)
        
        ...but also (keeping in mind those things that are really entities not classes (like length)), consider whether a class is really an entity too: does it have the same things an entity does? Or would those be stored only on entities referring to that class?  And does each class name really come from its template/defining entity, baecasue it could there have context-driven names, or whatever else might have made a class into an entity...?
        
        so, based on this, we/I can decide not to worry about it & just go on? does this answer all the q's?
    .
    6: if at all possible, start on "add one like this" for classes!
    implement the "create more like it" part for entityClasses/groups:  i.e., the ability to use the entity template conveniently when adding the new entity in the class&group..
      revu the below
      
      maybe just have a menu option that when chosen, reads the things in the template, show them to the user in the same order
        shows a screen w/ each thing enterable: dates, quantity, text, file, etc. anything needed like my todos(?), and each one can be entered (w/ validity cks? or is that only part of 'code' stuff below?), and user can go thru them quickly and press enter to keep, esc on the next one (or end?) when done or after last one entered, that also means done.
        
        would be helpful eventually for user to be able to set the order of them.
        
        and where in that order, also the things in the entity that are not in the template?
        
        with defa from the prev value in the entity if any, otherwise the value from the template, and depending on input the value saved will be the defa (save it or don't dup more likely, but what if the defa changes? so better if saved (or that could be an option, or a future option).
      
      **When creating an entity that is in an existing class:
        somehow help/prompt user on filling things in, using defaults to start each one
          if defa is a date, specify all the values if zeros, or cut them off? what about time zone: alw use local one as now?
      .
      entity add logic looks at the class's template to see what default to use
        pre-fills that default for editing!, w/ cursor at end
          stuff keyboard, or is that built in?
            to any version of line thing? just stuff & go....
        ui supports that
          prompts for each field
          how structured: all always there, or just adds as you go?
          is there a menu option to edit an entity, and it prompts you again for each attribute/group found in the template?
        .
        what operations need to look at the template for default data? 
          what are the use cases? what should the behavior be?
        .
        try it w/ todos! contacts!
      .
      what about subclasses etc? now or later? what use cases?
        like, if yo uwant to add something to an entity, but not to all other entities in its class
          creates a subclass?
          do like traits (multiple)? learn scala more 1st or?
        .
        traverse the hierarchy, while conveniently doing the other use-cases?
        "luke has contacts/people" which are family, acquaintances, business, work-related, or combos/subsets
          ie relates to 'luke has parents': no conflict there?
      .
      do now or later?:
        make sure that one can edit a text field to choose blank, even if it had a non-blank default value, coming in.
      .
      and in this?:  consider if relevant yet: ANYTHING THAT BELONGS TO A CLASS has to have ability to be managed by query OR category? (also noted under queries....keep in mind w/ both?)
      .
      is this faster than other tools I've used? better? how, or why not? what needs?
    .
    consider if relevant yet: ANYTHING THAT BELONGS TO A CLASS has to have ability to be managed by query OR category? (also noted under queries....keep in mind w/ both?)
    
    5 design/initial work of how to allow code associated w/ objects: behaviors/actions/verbs
      OR: should anything below be done 1st like relations, boolean, files, so I can add more data to the system!?
      
      so can quickly update todos, for example, as done, edit, move to date, &c.
      
      ideas2integratebelow
        how would such code be tested w/ good habits etc?
        
        need a way to assoc an entity w/ a class
          existing (does checks?) or new, entity or class either combo.
        .
        the code is as simple as a comparator (for sorting)
        om provides for the code an iterator over entities, and runs the code on each? or what?
        the user can draw from whatever fields are desired, in creating an entity, from its class 
          not all required
          indicates which ones
          can sort on those
          if the code ever finds a field not present it is smart enough to ignore it? even in user-gen'd code? OR simply rather, to use default values from the defining entity.
        limit deletion of defining entities. 
          (maybe db alr does, due to the constraints, and we would just be making it friendly, if/when.)
        todos could include a simple priority number (or any entity could; among many other things in those todos), upon which they could be sorted easily.
          manual sorting, IF imple someday, would simply use this # right?  unless the user cares re their own entries & wants to keep it separate, so then we'd need a separate #.
        .
        will need a way to edit default text (how to other java apps find a system editor? or put that on backlog for portability, just do what makes sense for now w/ process executor and editor var like git does or such?).
          or embed a simple one?
          and/or tell user where the file is tmp saved, they can edit, it will retrieve when said 'done'?
        .
        text & date probably need to be shown first.
        maybe w/ a boolean that says "is appointment/has a time", or just find those w/ the time filled in, and can query those or sort them at the top AND SCROLL THRU THEM.
        
        thus the sorting can be arbitrarily rich, w/o getting complicated all the time.
        sorting could retrieve only N rows/time fr db, then keep the top N of them for display (as the logic goes thru more rows, until all if needed, or just those for display)? Or find out based on avail. memory how many to get and do as many as possible, or...?  Just pick some #'s for now, and do that; it should be fine, just decide how often to go back to the database, or do it every time for simplicity and to get started.  !
          or find a way to get only certain ones from the db, or other optimizations, maybe sometime.
        .
        getting url, webpg, etc from other account (A WAY TO PUT WEB INFO INTO OM!)
          OR: SHOULD THIS BE MODELED INSTEAD OF SAVING ALL THAT TEXT?? OR WHAT?
          
          have a place to put scripts like this
            logic inside code that libr available (imported already) to run external cmds & get data back?
              contribute that to apache!!?? or rewrite myself, first.
            run the script (in pieces?)
            put the output in the right entity, in right list, whatever
          .
          set up sudoers (visudo) for running commands as another user 
            lacall ALL=(lacall-net) NOPASSWD: /usr/bin/xclip
          ...then can run the cmd to get whatever's on that clipboard (where ":2" is that user's $DISPLAY value)
            sudo -u lacall-net xclip -o -d "localhost:2"
              ...where the 2 needs modification per x session.
              BUT it doesn't seem to work under X
                msg
                  $ sudo -u lacall-net xclip -o -d "localhost:2"
                  Error: Can't open display: localhost:2
              ...but does from a console (ie, display w/o x).
                would it work from an app launched not from bash but from elsewhere?
                would it work if I mess w/ xauth enough?
          ...THEN:
            wget it and save date retrieved
            transform that to text using some cmd from the beginning or ending screen of output from 
              aptitude search html
            put the url, date retrieved, and text into an entity?
            also put text into a summary/excerpts field
              which the user can conveniently edit down to the interesting parts
                author? title? quotes? date/something?
            have a subject, short descr?
            
          .
          then also? see if the site URL AND ip addr is in my /etc/hosts file, and if not, sugg it to the user?, and save site info over time?
            an interesting way to not have my own dns server? Or, what best?
          .
          or is it time to start doing dns on my own, or focus on the OM trust networks?
        .
        for code that operates on classes, if data not there, it chooses how to act in the case of a null (so make it None so the code knows & has2decide).  AND: how will the system track & manage changes over time, like to store the fact that fields were removed in case it is intersting info in itself or that knowledge affects the desired logic?
        .
      .
      org/vsgeer the below? scope it?
      
      handling verbs: see Mark's comments on "sense & tenses", 10/2003 on om-list.
      .
      where stored
        held by classes 
        is there any better plc than in classes
        its own table that relates to classes
      how to embed/run?
        what lang?
          options
            scala
            guile/scheme
            custom DSL
              or livecode?
            other 
          .
          how decide?
            does book talk re DSLs?
            can do scala easily now, or guile (read up on, but it does raise the skill level req'd maybe too much? or can be simple w/ the little schemer or such?)
              then try DSLs later?
            or is ruby easiest to embed? what about ease of use by laypeople? vs. jython? or allow any, easily, by some simple mechanism?
        find how to execute code from a file, w/in om
          thus then from the DB
        .
        then how to do it w/ a library
        
        then learn to use a function that looks up things by context+name? Ie, so people can use their natural lang more for this kind of programming
        
        prevent dups of attributes given key + type (might be more than just type, like length AND unit, or is that bad because we should avoid duplication of data, so just length prob'ly..?) + name in context (all names, for each context, can have only one of those?)
          OR is it really just by key + type ? what do re names: just make accessible, and **HAVE AN ASSOCIATION** such that when first encountered by the system they prompt the user for "which __? [if one of many]", then saves that perm'tly, just as a human would if you're talking w/ them, determine it from context, and IT IS FOR USERS MORE LIKE THE REAL world?
        .
        find out how to do it easily from w/in the IDE? or something to make debugging efficient?
          eg, from the repl, but with a library, or how would users ideally *want* to do it, what's easiest & more like the real world, and then how make that happen, in good steps?
        .
      .
      1st learn to 
        embed scala (repl OR interpreter)
      ...and see what the book says about DSLs 
      notes
        for todos: have 1st the fields (& logic) that *more* ppl will care about, other last?
          similarly group by roles &c? & "getting things done" (see notes fr dan stratton)?
        .
        could have a table for that (named?), which says whether each key is for a class or an entity, and then menus always assoc that w/ them & show them.
          top-level (or "system") could have them for grabbing info from other programs, maybe w/o having to go to that entity, or something. Or grab them for later filing? that initial or later filing could be fast by doing fast lookups for things based on the names used for them.
        .
      .
      how handle repeated todos: daily things that if not done don't repeat but just show up again the next day?
      and seeing upcoming calendar events?
      .
      to test on files: see 'check checksums'
    .
    ---------------------------------
    (2^)
    3 finish initial usefulness for code assoc w/ objects: make todos convenient, at least for dates?
      sortable?/prioritizing?:
        change prioritization via years gained to consider also the likelihood of that person spending those years helping others (thus a multiplier effect), and how many  others, how much for each of them, etc? (otherwise the years gained just apply to the individual)
      can show up by date
      convenient to edit to change dates &c?
      easy to survey upcoming scheduled items, all, or priority things?
    .
    ? OR POSTPONE UNTIL AFTER CAN DEMO?: .3 are postgres dumps in 'bk' backups really working?
      test a restore? both ways (from full cp and from the dump both)?
      the .gz format going ok?
      
      other re backups of om data:
        (now or later?)
        what best practice recommended (now vs. after below is done?)
        does postgres do incremental? what pg best pracs are there?
          note pg dumps have some passwd info (how does it work if a hash; any risk?)
        would sharing do it well enough?
          if tracked how many have, who, if can get back from them, if mod'd, or such?
          or just as *backups* not as only sharing?
        .
      .
    .
    ? OR POSTPONE UNTIL AFTER CAN DEMO?: adding/removing fields on an object in a class: how affects the class or other obj's
      when adding an entity to the groupMenu, and user has selected to create a new class:
        ask & store (where?) what if any default values for new ones
          and make that work for when adding: it picks those up in some good way (but don't have to store values that (don't have a defa and?) are blank right? just skip those or use defaults when doing calculations, and create them only when an edit changes them?)
            save that idea for when adding code, also (that it finds defa values if not spec'd)?
          .
          Always show the defa values when displaying, even if not saved?
            do this at some *really* low level so reliable.... and well tested.
          .
        .
        allow editing these, and it allows filling w/ defa values, and if nothing there before and user changes it, save the new value. 
        
        when adding a field that's not in the archetype
          ask or always?:  add it to the archetype also, or make this one different? In a group, enforced or....?
            can it just be something "extra" on that entity that makes it dif't from the rest of the class, or...?
              if dif't, then when doing code/other on it, it shows clearly which are part of the archetype (parent) and which aren't?
            .
          .
        .
      .
      asks if should modify all in the class, or create a new class? what best?  Or, could just consider removed ones "null" now.
      
      default aren't necessarily saved unless changed, but are available as defaults if the user wants to edit them? 
        user will have to confirm/keep them, because changing the defaults otherwise would mess up any existing oens.
      .
      so maybe user has to keep or delete each default, or just have them be null unless assigned for each field?
      
      then they're available if wants to add them later.
        and/or just pick them from a list to add?
      .
      would be nice to be able to sort them, so user can do the most common first then stop, or skip thru some & use some others, &c, and skip the rest if desired.
      when you change an entity (add/edit/del attrib or relat) that the system could/should ask the user if the same change applies to objects "like this one" (probably those that have been initially formed in its image, possibly those that it was formed like, or optionally those in a class that the user can define by query, list, etc) [same goes for add/delete property or relationship; same for delete object or create relationship or anything else?]
      
    .
    5 adding much data and making it work well....(note now, & prob'ly just move this & related stuff below to after classes/queries are working, or use cases for them?)
      how much of this is set up by defa for new systems? any? or later, not impt now?
      
      org contacts by attr or category? (prob'ly attr, because they can be in > 1 category, but until queries work, will need to just do it by category, but noted that 4 queries later)
        can be both, automatically somehow? consider thoughts on how to auto-enter data
      .
      plays by role (or all, like queries/contacts above?) by category(1st for now, but), then by attribute(mainly?--but after queries ready).
      
      Maybe this includes some stuff from next dated sections
        'relations and direction'
      
      add data
        siblings
        children
        __?
        wait4classes - Home Depot's phone number is _____
        wait4classes then?: My employer is _________
    .
    by nov 9? 0.0.6: replaces spreadsheet & any other notes
      CAN USE IT FOR THE DAILY HEALTH TRACKING!?:
        has code(?), import/export (w/ choice of fields, & of depth?), convenient entry?
        try it: all steps
      .
    .
  .
  is now the time to implement 'sharing'?%%$%
    sort below by structural testing benefit, & other cost/benefit.
    check out other sync schemes out there?
      architectural patterns book?
    see for ex  file:///usr/share/doc/postgresql-doc-9.1/html/datatype-uuid.html
    by when design use of UUIDs/GUID?
      (probably at most an added table(s), or maybe a column, & corr. code?)
      
      WILL ADDING THOSE CAUSE DATABASE RESET? STARTING OVER OR HARD CONVERSION? IF SO, DO BE4 ADDING MUCH MORE DATA?
      
      OR, can (or will be able to) convert by 'sharing' methods, or import/export, or simple db conversion something, so no problem?
    .
    local data contains
      remote references (just a link)
      a complete copy 
        w/ reference to original source & date
        then syncing can check dates & ask whether to overwrite?
    .
    synchronization other notes
      needs undo feature?
    implement
      revu below
      study REST apis, toolkits, how to design an api
        do I want a cli api 4 anything?
      endpoints
        see new things not repl
          could be in a group
          by same things as entities/groups: new, nearness to a particular one, from the top, by name...?
            share code there? how best design it? learn more scala goodness 1st or...?
          .
        .
      .
      create a UUID/guid in each system to distinguish it
      internal stuff to pull data from remote to local, & what to do with it
        %%$%
      synchronization (going back the other way?)
    .
    or, for some use cases (more below) can psql replication be good enough (demos, work/home &c)
    (added long after nov 9 date above)
    are these ideas really what i want to use? good enough for long-term? multi-device? (or just 4 now: what best?)
      get design reviews?
    .
    put highest-risk parts 1st and do spike solns
      then do the highest-benefit parts first, if can be done securely!! I.e., to have something to ship/demo.
      and put that in my proc under design &c
    security
      start w/ assuming nothing is shared, and things only are if/when marked?
      at 1st, only share what is truly *public*, or readonly (relevant becaue they can always screen copy or whatever anyway??)
        HOW IMPLEMENT??
        and provide user guidelines/suggestions on what that is, what local configs
          what are risks w/ dif't types of sharing, so what policy is good/best, given dishonesty and enemies, or what model for the world now & later for this?  
            i.e., here's what to do *now*
            and here's what to do w/ ppl at dif't levels of trust.
            
            ideas
              some things really are public now and you can't help it (most everything about you?), so give up on that?
              
              OR, what is needed to prevent id theft if dif't than incremental process going on now?
                protecting against whom? some you can, others you can mitigate, others you just can't anyway right? But those where you can't are the ones that want to control & enslave if they can, and they already have your data, so treat them each accordingly.
                
                or both groups are, just in dif't ways, so handle accordingly based on risk/reward, considering both long n short-term?
                
                except for the time and extent that these 2 groups (or other categories?) interact/leak/share info (alr, probably in some measure, will prob'ly grow?), or learn to easily factor products of large primes etc etc etc.
                
                So, basically, this is envisioning the best strategy from now until everything is known anyway so why bother trying so hard to keep dishonest people out.
                
                Maybe what we need are MITM hooks for *everyone* to see *all the traffic* or whatever *anyone else* can see!
                  so that the only security anyone needs is physical/border security; control systems for physical things s.b. off this grid?
                  maybe impractical now
                  
                  OR, use its features to make a realtime whitelist of passengers, rather than a blacklist?
                    sounds creepy? 
                  .
                  then how do you do business since any identity could be forged?
                    maybe we still w/ pub/private keys or other encryption for now (requires physical key exc?), for nonrepudiation/auth/privacy/permission etc, and when that's broken we have to do physical trust networks again?  Maybe this is why the prophecies about number in forehead, or such slavery, that does turn out to last until all the bad actors are gone.
                .
            .
          .
        .
        how/if does this relate to "shine a light / shining a light on 'them' as much as 'they' do on 'us'"?
      later, limit it more?
        by user/group?
      save where things came from, and mods since?
      use pub/private keys to non-repudiate?
      what other security issues here?
    ui/experience
      consider use cases of
        sharing work/home todos etc
        sharing betw systems for replication/backup/demos
        1st specific demos
        researchers collecting, publishing data to peers/public
        who else? ck customer list... other marketing ideas/use cases in gen'l?
        
        will it show for documents, who/what/where added it (ie, origin info), since now we just show/keep the 
      .
      will it be as easy to use as a word processor? in gui version?
      
      where now we have a menu w/ add existing entity or create one, we add item to "link to or copy remote entities"
      
      then it makes the connection to the remote, and you just go traverse the model, and having found an entity you indicate it w/ a keystroke (reserve one, removed from the current long list of letters?)
      
      can indicate one, then link, or copy it to n levels
        but if copying, ui shows 1st how many there are & the size & asks for confirmation
      
      OR, can pick ones to add to a set, and when all done, all those are copied or linked
    authentication & encryption
      re security (& see todos elsewhere?) also:
        thoughts on why/benefits/advantages/reasons of/for letting others log in to one's own om inst is best, using existing tools as much as possible
          the existing tools are well-tested and maintained by others.
          
          gives great flexibility in granting update rights in the code later, for those logged in
          lets login happen under the control of the original inst's owner.
          
          still allows flexibility of controlling things from the OS level: separate accounts, import/export, shared/public/limited insts, openbsd features, but keeps it simple for OM internals.
        .
        all this prob'ly means that to use om you have to host your own instance somewhere, or go w/ an om-instance service provider!: (see 'reseller'
        
        unless/until we re-impl/redesign it for mobile devices?
      .
      can use openssh, with this as the shell on the other end?
        but how would that return data!? it saves it then does scp!
        
        but what about the scenario where you want to share only public om data w/ someone, but not open up your whole system to them? Does that go along w/ making sure the only proc they can run is OM, and it is impossible to break out of it?
          have an embedded openbsd server or server-side limits on what it can access?
            if so, doc the best pracs for self/others for future use.
          .
          do web searches incl openssh
            for any tool that lets you switch users after auth, or allow ppl in who don't have accounts on the system, to do limited work only?
              if there is such, would it be reliable enough to simply use PermitUserEnvironment or such, to simply get them in, let them do controlled things only (proc restricted to om, nothing more, and it prevents them from smashing into acct via om/pgsql code which is the main/next risk here: or could openssh prevent doing *anything* other than om, so even if they break into postgresql or other daemons on the host they couldn't go farther, and would require an OS bug to get root?)
            
            what is the openbsd default config? does anything there give good ideas?
          .
          ssh svr can do something in config to limit things well enough
            search 'man sshd_config' for things like 
              'ForceCommand'
              ChrootDirectory
              PermitUserEnvironment
                homedir, su?
                
                all in an *unchangeable* way!!?, except by breaking out, but then the script merely exits the connection, w/ no alternatives?
                
                user must not be able to break out of the om-calling script though.
              .
              usepam?
                lets you switch users after auth, or allow ppl in who don't have accounts on the system, to do limited work?
              
              limit, 
              user
              
              etc, or any other configs.
            ...and everything else in that fascinatingly probably-useful file! any others like it!!??
            
            search 'man sshd' for things like 'directory'
              could try the step 8 in the 'LOGIN PROCESS' section, which exits after rung OM
            otherwise it means user shares all homedir stuff w/ anyone who can connect via ssh.
          .
          Or, data is shared only by pushing to an opened (public/shared/controlled however OS controls it), repo?
            ie only those w/ access can get in, and they can do everything?
              so the only messy code is the push logic in om?
            requires handsfree login for the main acct, and a possible parm of which user is coming in, but not password, so we get in as owner but w/ limited access (public, owner/author/viewer, whatever)??
              of course this is ONLY if the inst owner sets up the script to allow that by having his username same, pwd blank (or shown on the cli so visible to all: seems bad but possible), and choosing to pass the "whoami" parameter to om.
              
              otherwise it's normal, all controlled by the os as usual.
            .
          .
          or, have a separate user acct for this, so any login is OK?
            can one user 'become' another in sshd login process? I.e., you get in as a user w/ one set of credentials to ssh, but you're actually using the om rung under the account of a dif't user.
              or something like that?
            .
            if so, how to get data in/out of it from other acct(s) who mainly use it??
              this would be a cool idea if it worked, as far as using the OS to keep things separate, like for browsing etc too!
              
              could allow user to copy everything (public!) to a world-readable acct, do it all from there
                but that hinders later features doing more granular security
            .
          .
          OR: whatever remote user access allowed has their *own* user acct (or uses a public one) to access om, and it internally manages letting user log in as someone else with the "public" flag or something?
            seems to open more risk of mistakes/holes and more code
          .
          whatever we choose should enable, not hinder, likely future features
            like
              granular security: limit to users/groups
              writable data by visitors (could simply give them a host acct?)
              GUIs
                or is that remote enough (known to need more work, have more resources) that we should explore the text ui more 1st?
              .
              websvr access?
            ...and whatever else is in this doc!
          
          what if user tries to run dif't cmd than 'om'?
            get jim freeman involved? tim riker? the openbsd/openssh ppl? (as a design revu, or do I need proof-of-concept 1st? at least have a discussion w/ the right ppl.)
          .
        .
        OR, this is a prototype, and the key features ("better" security etc) are added later?
          no, this needs to be able to grow like wildfire among the willing.
        .
        om svr makes sure sshd is running by cking procs?
          have a troubleshooting guide, or helps built-in to OM for if things go wrong.
        .
        if releasing this, it might be a good time to ck in 'documentation' under 'security'
      .
      besides these and non-repudiation, what other main encryption benefits are there?
      
      what other risks are there, what other goals for (like 'shining a light'...) or benefits of other security measures or key features/issues to address?
    code mods for the client
      override classes: which/how?
      just connects w/ dif't UI thing (ssh) and does same work?
      OR, dif't connection type altogether, and dif't code to do it 
        but overlapping in some parts/ways?
    code mods for the server
      override classes: which/how?
        for allowing user to traverse
          ReST?
          or just openssh & launches an instance w/ "public" flag or such?
        then knows how to collect, gather into a file, zip, and become scp server to copy it over
          or uses ssh: see things like 'Subsystem' and 'sftp' in 'man sshd_config'!
            and everything else in that fascinatingly probably-useful file! any others like it!!??
        security
          limits things to what is truly public
            really good tests/model for this so it's simple, and very reliable
              hit it hard w/ tests: using my code reliability/testing/fuzzing ideas
                pre/post conditions
                hit it w/ every known and unknown input and make sure the output is right or OK, and it's unbreakable.
                something like programming 'by contract'?
              .
            .
          .
          what else?: think how it could be penetrated and then do everything possible to make sure that is impossible.
            thank theo and the openbsd/openssh etc guys for making this so much easier: good things to build on.
        .
      .
      user decides when to let it make the connection, when not (OR, is that totally managed at the host level, like putting 'om' in the path?)
      
      later, make multi-user, handle contention/load/security/whatever other issues.
    .
    other/later ideas, to integrate w/ those elsewhere also
      'watch for updates / watching / monito' feature
        there are various approaches to this; see 2013-12 (or 2013-11, less likely) slashdot discussion re polling vs. events, pushing monitoring, synchronous, asynchronous etc other such keywords
        
        the only news that matters is what one gets from here?
        
        except what about urgent danger, ie threats in the whole world env't?
          maybe such threats are stored in the model as a 'risk' thing on all entities?
            including geographic, or affecting one's immed fam or friends (distance things)?
            and the threats are attached to the risks, w/ dates, allowing for updates
            as a possible bad future under all entities, or some such? 
              see how I store possible future now....should that go as a defa (from template) on *all* entities?
          .
          maybe attach urgency to those and they are 'push' or such, or the 1st thing that one gets when checking?
            with a "see within" time
            could be tech threats, safety, or whatever attaches to things in the model that one cares about?
          .
          maybe an urgent notices table, everything else is pulled based on the client human's priority?
          
          how would normal news fall into this
            deciding what one cares about
              things pass a threshhold
              nature of threat or change
            .
            types of news
              great ideas/tips
              changes to law, tech, culture, society, good habits &c
              crime/disasters/bad things happening
                a % threshhold or geographic proximity? otherwise one can simply check stats or periodic summary of how places are...if one is going there? 
                  like a place's crime rate based on proximity & severity, frequency?, & assoc best pracs?
                  best pracs that change by locale due to culture or other factors there vs. in oneself being there?
              human interest stories
              sports
              weather
              &c?
              industry-specific
              other-specific
            .
          .
          integrity of leaders of things that would affect investments or votes
          
          major actions by society, institutions, indivs, whatever, or trends, that would affect decision-making for any of the areas one cares about & its risks (see org notes on 'investing' for more ideas/thots there).
        .
      .
      everything has a last changed date?
        entity's last changed date would be the last date of any of its attrs/rels, but not rel'd entities?
      .
  .
  0.0.6 theme:  ?
  
  Can now also add data like this?:
    My shoes are in the study by the door
    The honda and the truck are about due for an oil change
    where to put things like recipes & howtos?
    someone likes something in their Christmas stocking
      like is a change in emo state (up or down) based on a condition at a time? do all that, or just simply?
    .
    One good place to take the family camping is Anderson Ranch Reservoir, according to coworker
      put in ideals/family/recreation/ideas? goodness measured in some code, based on quality?
    .
  .
  0.0.7: replaces contacts/people in other places
    replaces 'contacts'/people in other places
      could under my personal rels w/ ppl, have 'contacts' (or see what else is there now)
        sort the below, consider use cases, if the design will work:
        THEN under that have 2 groups each w/ a class: persons, corporations/groups
        eventually? each of those (persons,corporations) could have
          events associated w/ them
            queryable by "my journal" (so have to be assoc's w/ me? query cks for those tied to me and to the corp? so it has to  tie to both somehow.  Similarly to photos of people?)
            
            viewable by person (as are photos), or by corporation, or by 'my journal'?
              see anything connected to that person or corp, in a query/list?
          auto-updated last contact based on events log
        .
      .
      fully? printing? at least better than what I have now: at least can export the contacts/people back to .txt &c.
      create entities for parents
      define a relat betw them.
      create entity for 'key contacts' (see under bus notes
      create entity for 'contacts/people'
        a 'list'
        (later: a query?, but 4 now dont worry)
        add attrs to it
          is there a way to "turn on tracing" like set -x does, in scala? maybe w/ aspects or such? 
            even at dif't levels? helpful for debugging in general?
          macro to add println stmts like i did in eclipse/java? use same one?
          how show stack traces? start w/ exc.printStackTrace()
          fix err
            msg
              **CURRENT SELECTION: contacts list
              ==============================================
              
              No attributes have been assigned to this object, yet.
              
              Attribute list submenu: (or choose attribute by letter)
              1-List next attributes
              2-Add "quantity" attribute (example: a numeric value like "length"
              3-Add "text" attribute (example: a serial number, which is not added/subtracted
              4-Add "relation" (i.e., ownership of entity, containment, family ties)
              0-Main menu
              
              
              
              
              SELECT TYPE OF RELATION(i.e., ownership of entity, containment, family ties; leave both blank to cancel; cancel if you need to create the needed type before selecting):
              Exception in thread "main" java.lang.Exception: Key rel_type_id=0 and entity_id_1=0 and entity_id_2=0 does not exist in database.
                      at org.onemodel.Relation.<init>(Relation.java:25)
                      at org.onemodel.TextUI.getAttributeTypeIdFromUser(TextUI.java:581)
                      at org.onemodel.TextUI.getAttributeDataFromUser(TextUI.java:472)
                      at org.onemodel.TextUI.displayObjAttributesWithMenu(TextUI.java:381)
                      at org.onemodel.TextUI.promptForNameAndCreateEntity(TextUI.java:295)
                      at org.onemodel.TextUI.handleMainMenuInput(TextUI.java:174)
                      at org.onemodel.TextUI.launchUI(TextUI.java:148)
                      at org.onemodel.TextUI.main(TextUI.java:44)
              You have new mail in /var/mail/callla

      create rel betw me & the contacts/people (I have contacts/people)
      create 'has a' relat  (edit to just 'has' ?)
      use that 'has a' relat to make it have all my contacts/people
        OR do this by role?
      fix this when I tried to add parents
        OR, can reproduce this by adding 'contacts/people' or 'personal ties' as a 
        err msg
          mEntity is org.onemodel.Entity@4bbd7848
          **CURRENT SELECTION: <name>
          ==============================================
          
          No attributes have been assigned to this object, yet.
          
          Attribute list submenu: (or choose attribute by letter)
          1-List next attributes
          2-Add "quantity" attribute (example: a numeric value like "length"
          3-Add "text" attribute (example: a serial number, which is not added/subtracted
          4-Add "relation" (i.e., ownership of entity, containment, family ties)
          0-Main menu
          
          SELECT TYPE OF RELATION(i.e., ownership of entity, containment, family ties; leave both blank to cancel; cancel if you need to create the needed type before selecting):
          Exception in thread "main" java.lang.Exception: Key rel_type_id=0 and entity_id_1=0 and entity_id_2=0 does not exist in database.
                  at org.onemodel.Relation.<init>(Relation.java:25)
                  at org.onemodel.TextUI.getAttributeTypeIdFromUser(TextUI.java:581)
                  at org.onemodel.TextUI.getAttributeDataFromUser(TextUI.java:472)
                  at org.onemodel.TextUI.displayObjAttributesWithMenu(TextUI.java:381)
                  at org.onemodel.TextUI.promptForNameAndCreateEntity(TextUI.java:295)
                  at org.onemodel.TextUI.handleMainMenuInput(TextUI.java:174)
                  at org.onemodel.TextUI.launchUI(TextUI.java:148)
                  at org.onemodel.TextUI.main(TextUI.java:44)
          callla@ws-callla-w520 Mon Dec 26 18:26:52:~/pers/proj/om
    .
    w/ each release now, revu ideas list below (or just put in om?)
  .
  review version numbering: 
    0.0.10... when, vs. 0.1.0?
    what is in 0.0.8, and are there 2 0.0.9's etc below? just revise/consider next, & overall what/when?
  .
  0.0.8 theme:  ?
  
  when this?: entering notes etc, more use cases, types of info:
    how do brainstorming, note-taking?
      how enter unlinked ideas afor speed, or find entities fast enough, or enter things as raw to-dos to file/fix later or ?
      
      how represent the verb 'help' as an action entity: "helping"? ~= some code which is a change instate, ie a speedup, time shortening between dates or as *enabling*/removing *obstacles?  (so, blockers are an entity?)  
      
      w/ relats: show other sides of relat (is parent of) in pick lists, & same for the entities related: their rels.
      
      do the features of ventana groupsystems etc fit?:
        brainstorming
        ranking/voting, &  group editing remove dups etc?
          reword/combine
          not criticize
          "consolidate"?
        others?
        
        see also
          http://en.wikipedia.org/wiki/Online_deliberation
        ...for many feature ideas, examples etc
    .
    how represent goals/ideals?
      just entities in ideals section, w/ certain attributes, steps in time, etc?
      like financial goals: I would like to:
        get $ at some level (inflation-adjusted from the entry date?)
        
        see note in other todos re 'represent goals/ideals'
    .
    how enter questions?
      is it a class? verb/action?
      change in state?
      or are they verbs/actions with blanks in them?
    how to convey non-existence before a valid date? or is it just the valid date itself?
    .
    about entering factoids into the system, journal entries, random thoughts that I used to file as text under a topic or chronology:
        example to try: "we had a nice [valentine's] dinner last night. This note/menu thing is from <name>"
            consider groups (marriage, "we"?--or not needed now?), just enter a marriage object?)
                enter children & relate them to family, or, just enter everyone and relate them to the family: marriage has 2 indiv entities, kids are entities, then make relats to the family entity
                
                then consider action: results in some change (or can--change may be absent. mine for now are eating & giving & serving dinner)
                    action is surely an entity
                        exclude it from the main entity query? or ....?
                        
                        is an attribute of an entity, with time (start/end?--how do for now?)
                        
                        it has/carries relationships: objects etc. i ate food. Food is or can be related to the actor or acting group.
                            then it would be related to a change in attributes of some nouns
                            
                            there is a person/entity whose attributes changed, and a causing attribute. I caused the food to be chewed & swallowed (act vs. acted upon).

                            
                            read the scrs again for a bit then model this: act vs. acted upon. Think--others related to that verse? Then ck the parts about light/truth/knowledge etc, briefly?
                            
                            ACTOR, ACTION, ACTED UPON, and a change in state that we can model later--how track it??
        ck the nouns, make relats between them, note that at that recorded point in time my emotional state was good ("are you up or down?"--do we have a simple model for that for now? later we could add peacefulness, energy level (physically or mentally tired, so we have up or down on various levels, mental, social/emotional (?-both?), physical, spiritual, or whatever else seems germane)
        
        then also see how this could be spit out of the system as a good representation of what happened--translate to text?  Maybe from various angles even, at some point,depending on the focus (which entity was the entry point or of most interest)?
        
        how do I intertwine the "note" w/ the "model"?--it IS in the model, because the model IS the note, and many notes?
    
        how would I find these now, topically or chronologically?: by entry date or which entities are involved!!
        
        also, one can express the opinion of another by creating an entity called "model" or "understanding" which is related/possessed by the the person entity; it then has various facts (entities w/ attributes) in it. Misunderstanding, then, would be represented by facts at a given recorded time which conflict w/ the facts in somone else's model or those of the main model "reality"-- ??.
            SO, WHEN THE "MASTER MODEL CHANGES" in a way that conflicts w/ someone's observation, do we have a single consistent view of reality by moving his perception off into a 
    .
  .
  0.0.9 getting others to use it:--------- (applies to > 1 phase below, common parts)
    queries, 'searching', filtering (see all those elsewhere 4 other notes also?)
      now
        create query to 'show all that links to me'
      %%$%
          entities that have rel2entity to me
            select * from entity where id in (select entity_id_1 from relationtoentity rte, entity e where e.id=rte.entity_id_2 and e.id=-9223372036854775570);
          I am in these groups
            select name from relationtogroup where id in (select group_id from entitiesinagroup where entity_id=-9223372036854775669);
          ...to which these entities have a rtg:
            select * from entity where id in (select parent_id from relationtogroup where id in (select group_id from entitiesinagroup where entity_id=-9223372036854775669));
          .
          %%also do?:
            class.defining_entity_id
            ?a.attr_type_id
            qa.unit_id
            rt ?
        .
        get a basic fulltext index query to work
          statements?
            %%
          on fields??
            e.name
            rtg.name
            ta.textvalue
            fa.description
            fa contents? text, strings?
            ?:
              class.name
              action.name
              action.action
              rt.name_in_reverse_direction
        updt menus to show entity id 
          and for relats2entity, relats 2 group, any others? or skip4now
        can these be scripted to run from cli w/ a parm & psql? easiest4now, or just do the below? 
          mbe both.
        get (part of?) the sch queries above to do "things close to me" 1st ?
        start putting these on menus
          ?: take a break, think more? good design? ck proc...? s.b. simpler or...?
          the/a search option for entity lets you pick fr
            to do what's there now (?)
            OR find 'all that link to me' (in a way that you can follow them to those other entities
              how display: put them in an askWhich as the collection
                but what if too many: a new window thing (see next N...)? can reuse smthg?
            OR the full-text thing below
        proc each
        
        think: do we need impr relat stuff now, or...?
      .
      use cases
        full text
        what links to me & how, to go there
        
        easier to find an entity easily from the list page: filter, sort, find by starting to type a name (given context)? etc?
        
        simple
          show all in a class
            limits on how many, more ....
          simple class or object manip things there? like?:
            %%
          .
          sorting, all ways conceivable
            on any field
            combo of fields like sql/spreadsheets do: 
            calculations of fields
            all combined
            like dif't things for my todos are now, or contacts/people &c
          filtering
            similar to sorting use cases
          incl archived material or not
        rich? or later?
          use BIRT? (oss reporting tool, data visualization, etc)
          
          tom says there are 4 kinds of classes (his om-list email of march 2001 sometime):
          someone said on slashdot?
            http://slashdot.org/~jefu said:
              Or is that KAOS (as in "Get Smart") ?
              
              I'm currently playing around with putting all my mail messages, bookmarks, web pages loaded, file accesses (on a day to day basis) into a database. Maybe not all the actual data, but the stuff that might help me find it when I need it. I'm hoping to eventually scan everything that changes on my computer or that I do for keywords and so on and then organize them so I can browse them by some kind of visual graph/map metaphor on any of several axes (type of file, date/time, keywords, directory ....).
              
              I want to be able to go in with a query like "sometime in july I did something having to do with a picnic and watermelon" and get a list of possibilities, then be able to rate those in the hopes of finding the exact info I'm looking for.
              
              OK, so far I only have some pieces of it. But I'm getting closer to a database schema for the information and that will help me figure out better what info I need to collect.
            .
          .
        notes/q's
          can do this well?:  "org contacts by attr or category? (prob'ly attr, because they can be in > 1 category, but until queries work, will need to just do it by category, but noted that [here!] 4 queries later)"
          and: "plays by role (or all, like queries/contacts above?) by category(1st for now, but), then by attribute(mainly?--but after queries ready).":
          
          ANYTHING THAT BELONGS TO A CLASS has to have ability to be managed by query OR category? (alr noted w/ classes, but keep in mind here also?)
      .
      could also use similar means to sharing, in the part where you just go traverse the model, and having found an entity you indicate it w/ a keystroke (reserve one, removed from the current long list of letters?), and it unwinds all the way back?
      .
      by fields, or man'ly & save/del the search info, as entities, or?  in a group? w/ a 'has' rel on the RTG class, like 'entity'?
      .
      maybe just break it out of the (or modify?) obj chooser to
        let one choose betw kinds of sches
          browse all (as now)
          ordered by 
            orig adding date (as now)
            most recently added
            could do these in other search modes also?
            by "nearest" to the cur't obj
              ie a recursive thing: list only (THE DEFAULT FOR THE CHOOSER UNLESS SOMETHING ELSE CHOSE, W/ A FULLTEXT SCH BUILT INTO IT AT SAME TIME?), or text sch also?
          text search
            incremental searches: does it w/ each keystroke on fulltext sch, case-insensitive?
            on strings in docs/files?
              based on type, or all?
          filtering by class?
          
    .
    related to 'searching'?:
      ability to 'clip' an item, and later 'insert clipped item' (grabs the id in some list, shows the list for choosing, then puts it into whatever is being displayed)
    see also notes under 'funding or business models' section re feature req'ts from there
    see also req'ts from the 'ideas' section & sub-stuff? for this point in release (do same at every iter boundary, as in proc.)
    
    at what point to use esperanto?
      do code & cmts in eo?
      have an eo topic (or list?) on the mailing list or other comm.
      
      do 'i18n' 1st in eo?, then add others that just say "eo is *much* easier than english or any other language; best 2nd language for everyone, as it very much seems for reasons of greater efficiency *overall* in language learning including if other language(s) need to be learned, the apparent least total work required for the world to speak w/ each other". Say this in *their* language, until have time to do a full job of i18n etc.
      
      want to limit it to speakers, while barely encouraging adoption among developers and limiting the devs?
      so, when/how?
      based on that, use it for anything in, '.system-use-only' things (or as name for that itself)?
    .
  .
  jan 4? 0.1: where i can show it to other devs, and they can use it
    at some point, start having this very document in OM.
  .
  dec 17? 0.0.8: where i think i can get non-devs to use it, hands-on
    how will users comm about feature requests, questions, issues, devs?
      om itself? can take place of rss, mailing list, 'bug tracker', wiki, ...? use cases/needs as they arise or anticipate what/when?
    .
    interface issues/UI issues?
      localization? internationalization?
        when really needed?
        what does the ij refactor i18n option do? (if not dim)
        can it prompt user as it comes up and then uses OM internally for it all anyway?
        or the install just looks for a locale?
      release (like security) cklist or other...req'd habits or?
        is there some software release checklist(s) I can use to see if I've covered the bases?
        like multilingual web site?, forums etc? or use OM for those also??
        or is this all premature?
        what else lacking?
      .
      getting started has to be a good experience overall
        inst
        ui
        initial data, leading user along, sharing &c.
        start simple, say where to get adv features?
        consider dif't types of users, their expectations & their experience before, thus coming in w/ this how goes4them.
      how handles the use cases and UI/user experience comparison with things like?:
        outlines/mind maps (show more info at a time in OM?)
        evernote
        wikis
      doc this in some faq's?
        also things like
          how relates to semantic web etc!?
            notes on how it creates/could export data for semantic web, which IIRC doesn't address issues of creation, just interchange.
            
            When I read about cyc, mindpixel, semantic web, and some other efforts, they seem very interesting but just didn't resonate w/ me as solutions to the key problems I wanted to solve, except as useful partial solutions.  Of course I could be wrong as I don't know as much as I would like to.
        .
      .
    .
    (or start w/ only devs earlier? maybe D 1st, or what is ideal 2nd user?)
    adding features..? so at least I can use it for own data (all or?)
      (only put in it public things, or have security ready?)
    .
    see if it's something D can use might like things to track?:
        photos if *very* easy to transport around, like making scrapbook
        phone #'s if hear might need someday
        ph #'s, addrs
        recipes
        things bought/needing rotating system
        to-do lists if its i the wall, in front of her forced to read every day
        medical history/events
        big events like big family vacation
        big milestones in kids' lives/growth/etc
    .
    it handles feature requests for itself (& sharing those? see sharing elsewhere)
    are IDs guids? 
      so that objects in each system can be shared w/o collision w/ others, including logins
      
      old note: consider whether to use uniqueidentifiers in pgsql instead of long values (so larger db? more unique across installs? smthg?)
        use genguid (or other tool) to make a globally unique number?
        see:  http://www.taurussoft.org/files/
        description:  
            Uniqueidentifier datatype is 128-bit (16 byte) wide datatype claims to be unique across Universe. It's a good choice for primary indexes and making relations between tables. This inplementation depends on libuuid library from e2fsprogs package by Theodore Ts'o. Licence is LGPL.
        .
      old note: do we want/need unique IDs across databases, for replication or integration? Discuss w/ list, esp Mark/tom:
          like Docm, w/ a unique id centrally assigned per model database?, or locally assigned, plus a fully-qualified hostname+domainname?
          
          or generate one based on random # plus date plus ethernet address or somthing and call it good enough?
          
          or search google for something like this (possibly leaving out "postgres", for theory: "postgresql globally unique identifier"
          
          try the new "uniqueidentifier" datatype I got email about? Is it stable/good enough for use now? algorithm to last, etc? or go w/ what I have & mention this 4 future?
            from: dmitry@taurussoft.org
            Hi All!
    
            I've ported uniqueidentifier datatype to PostgreSQL 7.2.X. It's
            available at
            http://www.taurussoft.org/files/uniqueidentifier-0.1.9.2.tar.gz Version for 7.1.X is available at
            http://www.taurussoft.org/files/uniqueidentifier-0.1.9.1.tar.gz
            The only difference between two releases is adoptation to 7.2.X system
            catalog. No new functions/bugfixes.
            
            Uniqueidentifier datatype is 128-bit (16 byte) wide datatype claims to
            be unique across Universe. It's a good choice for primary indexes and
            making relations between tables.
            This inplementation depends on libuuid library from e2fsprogs package by
            Theodore Ts'o.
            Licence is LGPL.
            
            Regards,
            Dmitry
            
            
            
            ---------------------------(end of broadcast)---------------------------
            TIP 5: Have you checked our extensive FAQ?
            
            http://www.postgresql.org/users-lounge/docs/faq.html
      .
      does this relate to backups? or use now? an old note:
        should use this? seems like not, but what are the keys I use now? make them guids (probably mentioned elsewhere, so if not using then skip this issue)?
          -o, --oids
             Dump object identifiers (OIDs) as part of the data for every table. Use this option if your application references the OID columns in some way (e.g., in a foreign key
             constraint). Otherwise, this option should not be used.
    .
    have to do database upgrades now?
      approach?
        store the version in the db 
          (or simply the db version, doesn't have to relate to app version?)
            since a give app vers will always have a db vers, those fr git can also benefit
        the code has a .db version listed, and when it launches, checks that against the db
          if dif't
            it prompts asking if want to upgrade
            if no upgr, exits or?
            be4 upgrade
              warns user 
                there is no downgrade
                to have good, tested backups: you have been warned
                can exit then & come back
            does upgrade
              running some pgsql script
          how make db-indep? want to even? or can make it allow in future then postpone?
    can run w/ just a jar, no other setup?
    at some point, start having this very document in OM. 
      (now or later?)
    start using for auto maintenance
  dec 29? 0.0.9: where i *really* can get others 2 use it, and they like it and want it 
    (or start w/ only devs earlier?)
  jan 20? 0.3: it's useful to more devs, i.e., w/o personal comm/handholding
    it's useful to more devs, i.e., w/o personal comm/handholding
      i.e., there are github clones that i didn't communicate with?
  ALSO jan 20? 0.4: it's useful to more indivs, i.e., w/o personal comm/handholding
    cloud?
      for use cases like 
        same data, any device
        sharing here, or below?
    add logging!
      use cases?
        undo
          can store xactions fr pgsql & do them later on if can be applied cleanly?
        seeing history, when things were done
      .
      system records who entered info & when
      w/ aspects? and in the same db for management of old stuff?
  0.6: more indivs not only use, but they like it
  0.7: even better. features?
    how handle it when values need to outgrow what's in these types? Do that later (yagni), & just note for now?
        at least note it in realease notes or readme, as a warning or such?
      .
    .
    'context': dif't names for things 
      see context elsewhere (several)?
      sort this
      dif't names in dif't OM contexts: like showing not just an entity but what it's linked to
        makes searches 4 an entity more useful?
      .
      prove it by using eo, or nicknames/dif't things that dif't english-speakers would use?  
      make all times GMT? UMT?
      
      ideas to add re context from Thu Nov 07 10:32:27 MST 2013
        human language name depends on
          language
          subject of discussion (same name means dif't things depending on which one you're talking about)
          personal preference/familiarity
          place? (or who you're with: their lang/pref/familiarity)
        these things are often specific to a location, social group, individual
        is a separate table?
        depends on user's info too?
        
        System takes those things and 
        
        designing it
          model 1st the logic, then the data? 
            or vice-versa, & see how they both work? "essential vs. accidental complexity
            
            so in life we:
              think of a thing (an entity)
              to comm re it, we think of its name by:
                remembering sounds, words, situations, associations?
              ...which cptr could simulate by?
                ck *user's* context for language 
                  an entity/standard attribute on every person, part of the class?--whose name is long (normal, language-dependent!) or short/stdAbbrev (iso..?)
                    can *that* be modeled the same as everything else, or just go by ISO 1st as standard, have the rest modeled as normal?
                so, for display, if name is desired over picture?:
                  use that as (part of a?) key to look up the word in table keyed by human language?
                    further modified by location of linguistic affinity ("LLA"; similar to dialect but doesn't require specific definition, just flows from what people put in in the model, and for themselves?), which can be *anything* ("in our home we said it this way"), or even specific to a person, but the location is an entity and can be shared and the vocab comes along w/ it, and/or is hierarchical/contained in each other, each one has a parent ending in 'planet earth' whose parent is null or itself so the recursion ends there?
                    
                  (OR, can this LLA thing *displace* the language altogether? or are they best used together?)
                dif't for searching by name?:
                  does some things like the above?
                  
                  if it isn't found based on that 1st lang+location key, it (optionally? is fast enough? lets user know then goes to background?) in the current entity's related things (and/or starts w/ this user's entities?) for things that given (some parts of?) the user's context might have that name.
          context info is probably built on fly (to look up the name, or for everything?)
          have who revu the design (eric/tom/mark/dave/other?)?
          .
      .
      old notes on this: make it so any object can have 0-n names.  These may be context-dependent (later; when varies by time, place, lang, etc etc).
        context also represents things like a model of someone else's opinion (or one's own, at a dif't time, or the state or reality at that time, dif't world & observations etc), so that not only the vocabulary changes but you can also model what you think is someone else's opinion, like re our messages on the om-list c. Mon, 30 Oct 2000 07:26:25 -0700. Collision/disagreement between the models is a dif'c of opinion; stress is a measure on one of the emotional scales. 
        
        the largest context is the entire system (or collection of linked databases).
        .
      old notes: How we could do "context" and "time"? (model this then ask others if seems good--get design feedback from ppl how best? read up on simulations etc etc or just do the design then publicize it?) Make sure design is gpl 1st.
        
      and where said this?: has other interesting there re logical statements also: could revu 4 ideas... ltr?
        [Entities] are related to contexts within the model: expected to be valid in some, not others (or valid to a fuzzy-defined extent as per tom?)
      .
      maybe: context is done by what we are pointing to--it is a matter of the database changing so that the getter methods return the data that fits the situation. And the situation is defined by the time/place you are in, so you'd have to tell them that.
       
      maybe: simulating time/place changing is done by the objects themselves knowing when & where they and/or their attributes are, and when the time/place changes, they are notified by some loop which sends them the change event or simply calls a time or place change method, and they respond by switching to different pointers for the values of their properties according to the internal info about what goes w/ what time/place.
  
      Maybe this is done by having an event loop that has an array of all affected objects (they tell their own children somehow) and as we go thru time it notifies them all and they react accordingly (by updating their own display or whatever). To optimize, we could have this loop (or a separate one for those having the information) that tells the next time interval on which the notified objects would care about a change, so that we only notify them if the time threshhold in the array has passed. Design this into the system for review at this time or later?
      .
      can it search via dif't/multiple names for the same thing, and where there are > 1 results, prompt w/ the other names to see which, or go by linked proximity w/in the model, or by context in the sense that one name is more applicable to another because the other name really means something else?  Example: air conditioner (used to mean 'swamp cooler' to me), but in this household both terms have individual meaning, so I should be able to find either one, w/ either term, esp if using other terms or actions that specifically apply to just one of them, or it is nearer in context, or more recently used term in conversation/work, or is the user's (more context) "favorite" term for the situation, or according to the language they speak, even if others use dif't terms for it.  (And the system uses the others' terms when communicating w/ them: if not just GUIDs and then it looks up the terms for them on the spot, based fully on their context at that time.
       
      Could it handle things like "ask the other questions for this person at the same time" even if the todo or whatever came up on a task that one only sees now: serendipitously combine things that are "near" in person, place, mental or physical requirements, ....
      
      review questions on the yellow notepad ppr etc, plus Mark's email I saved about class def's & "is-a".
  1.0: users like it a lot and would give 5-star ratings, though still just desktop
  
  set future plans & milestones?:
    about
      revu vsgeer
      org & prioritize these, of course, in OM...
      these are main things only; also ck ideas list below for smaller things
    ---------------
    'GUI'? 
      compare to nicer UIs like thoughttracker, evernote & its oss clone, etc?
      if via web, could see
        "Seven Web Frameworks in Seven Weeks: Adventures in Better Web  Apps", now in print and shipping from pragprog.com/book/7web
        
        play framework
      .
    .
    packaged for debian in a .deb?
      create a .deb (for stable?) or a "proper tarball" 
        and possible other promotion things...?
        see about doing it well?:
          http://news.slashdot.org/story/13/09/11/0048242/how-to-turn-your-pile-of-code-into-an-open-source-project?utm_source=rss1.0mainlinkanon&utm_medium=feed
          http://blog.smartbear.com/open-source/how-to-turn-your-pile-of-code-into-an-open-source-project/
          make a tarball? why, vs. git? or as release format? 
            was:
            change format of my zip file (& add tar.gz?) See other things on this page (& its other pages in same paper re README & other files & where to announce etc):  http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/distpractice.html says:
              The single most annoying mistake newbie developers make is to build tarballs that unpack the files and directories in the distribution into the current directory, potentially stepping on files already located there. Never do this!
        .
        announce/provide to web sites it mentions like bibio & freshmeat, freecode   
          http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/introduction.html
        where else do ppl announce things (when ready)?
        could learn re dist systems from freenet (at sourceforge), publius (at&t), gnutella
        .
      .
    mobile? 
    as a business?
    sharing/collab?
      try sharing family photos or other data w/ geeks
      a REST api allowing it to get data from other instances, and integrate the data nicely (ie, sharing, social data)
        look up "social data"?
      make security work right
      has to handle dif't app & DB versions gracefully?
    .
    simulations? can this cover everything, even if we have to break an object down into components, to be able to model/describe/depict/do simulations? Probably need to read up on simulations & modeling more, after I get v.1 out in a form I can use.
      simulations (related to how I'd handle verbs?): ideas of mine from 12oct2003:
              Participants in simul. are the ones selected by user and all that are proximallyimmediately related. any entity "affected" (state changed) during th simul. pulls in to th simul. as well all its related entities. (Limit toal #? or try both & see if affects so optimized either by some limit to total # of participants in simul. or by guessing which to omit because relahionship is distant or not affected enough?) 
              
              Entities to participate in simul. need scripts that respond to events like changes to geogr. location of neighbors., time, or whatever events) could affect them. The simulation management code (or related objects?) calls these events (or related obj's call them to pass on th effects, while still respecting the timslicing of the simul.?).
              
              thread management tool makes sure the simeslicing happens fairly, and granular "enough" (per "n" instructions have a timeslice?)
              
              How make these easy to invoke & run & write event handler code on objects & prepare & get and/or save results, or auto-update model & show consiquences or inconsistencies in the model based on relatiosn & natural consequences of events in the simulation?--for the user or internal system who may initiate it?
              
              How make this flow into or use tools of neural nets or expert systems, that's easy for a non-articulate or non-tech user to run & enhance/improve the model & the simulation stuff (like C)?
               
              read up on simulations:
                  incl. Tom's links on SOAR toolkit, posted to om-list in oct2003.
              .
    .
    other things we listed in our orig requirements on onemodel.org
    see learning notes elsewhere
.
tech ideas%%$%
  start using composition more instead of inheritance?
  
  how sort/group all the ideas, better?
    make some into new sections (not ideas, but upcoming topics)?
    what are all the kinds of sorting? record this? (does not address structure, just grouping and/or sorting)
      alphabetical
      size or some kind of most/least, comparators
      color
      other category ("like things together"
        librs do author, genre, size...
      other "hatracks of understanding"? There was like an ACM article about this once.
    by?:
      section/type
      urgency
    poss sections?:
      upcoming topics
      cleanup stuff & misc integrity, etc.
      maybes & big ideas
  .
  (see other material to improve communication on what OM is, & can be.)
  
  retry new version of IJ? when? after 13 been out longer, or see what changes are in it?
    or if still can't debug interactively, try web sches for that err, w/ 'scalatest'?
  .
  refactoring and debt%%, general improvements
    'issues to prioritize'
    .
    possible data integrity issues HIGHEST PRIORITY
      what's recursive about deleteGroupRelationsToItAndItsEntries and its deleteRelationToGroupAndALL_recursively? is it doing the right things, really??????????
    . 
    routinely annoying things
      make a way to add subentry DIRECTLY to a group, w/o having to create it as sibling then select target & move in.
      
      need to fix deletion of groups w/ nested entities/subgroups
        review the code...: is it all good (in various places where called?)
        make it work at all
          try deleting junk/t2/testgroup2
        .
        then make it work w/ a recursion in the groups: nesting.  simple/complex/what?
        
        how audit all this really well, & put really good tests around it?
    .
    make development faster
      some refactoring: make classes & methods smaller!, move more code from Ctrlr, db into model classes like Entity, etc
        & see elsewhere re refactoring
    .
    very annoying if they come up / bugs or serious issues (but were less important than a release)
      for db.getCountOfGroupsContainingEntity: 
        account for archived entities like others do by default?
          ie, join w/ entity, n omit from grp cnt if entity is archived? 
          optional? which callers would want which?
          are there others w/ same issue?
          how remember that, in future?
        .
      .
      editing the 'relation to group that led us here' prompts for a new reltype, which group, and dates, but only saves the dates, so doesn't fulfill expectation it sets.
      
      ADD A TEST FOR ROLLBACK NOT WORKING IN SOME CASES!!:
        WHEN i  had a bad (no) where clause in db.archiveObjects, it complained like this:
          msg
            Exception in thread "main" java.lang.Exception: Exception while processing sql: update Entity set (archived, archived_date) = (true, 1390071957850) 
                    at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:124)
                    at org.onemodel.PostgreSQLDatabase.dbAction(PostgreSQLDatabase.scala:206)
                    at org.onemodel.PostgreSQLDatabase.archiveObjects(PostgreSQLDatabase.scala:1669)
                    at org.onemodel.PostgreSQLDatabase.archiveEntity(PostgreSQLDatabase.scala:937)
                    at org.onemodel.Entity.archive(Entity.scala:124)
                    at org.onemodel.Controller.deleteOrArchiveEntity$1(Controller.scala:846)
                    at org.onemodel.Controller.entityMenu(Controller.scala:938)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:804)
                    at org.onemodel.Controller.entityMenu(Controller.scala:979)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:804)
                    at org.onemodel.Controller.entityMenu(Controller.scala:979)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:804)
                    at org.onemodel.Controller.entityMenu(Controller.scala:979)
                    at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:804)
                    at org.onemodel.Controller.entityMenu(Controller.scala:979)
                    at org.onemodel.Controller.mainMenu(Controller.scala:308)
                    at org.onemodel.Controller.menuLoop$1(Controller.scala:120)
                    at org.onemodel.Controller.start(Controller.scala:123)
                    at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                    at org.onemodel.TextUI$.main(TextUI.scala:26)
                    at org.onemodel.TextUI.main(TextUI.scala:1)
            Caused by: java.lang.Exception: Affected 106 rows instead of 1?? SQL was: update Entity set (archived, archived_date) = (true, 1390071957850) 
                    at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:137)
                    ... 20 more
        ...BUT THE ROLLBACK DIDN'T WORK!!!!!!!!!!
        so do
          run tests if I break that in rollback code, to see if it's well tested
          confirm that it fixes, w/ the changed parm
            interactiv.
          %%
          put in a grep in gp to ck for wrong use of that parm (or other script)
            in scala?
            could do something like
              grep -irEn "archiveObjects|deleteObjects" src/|grep -v "def .*Objects(.*, callerManagesTransactions: Boolean.*"|grep "callerManagesTransactions *= *true"
            ...then?
              find the 1st line # starting w/ that one containing a '{', and the 1st line # *after* *that* one containing a '}' (actually, would have to count them to find the method's '}' not that of other code).
              
              then find whether there are methods in that thing, that say beginTrans & commitTrans & rollback...(?), in THAT ORDER?
            .
          .            
          AND: NEED TESTS AROUND THAT ROLLBACK AND THE ONE IN deleteObjects !
            (or combine them so same test4both)
            and any others that are in any way like that
          .
        .
      .
      where I insert longs, like System.currentTimeMillis, should I be accounting for time zone? Probably.
        Always do GMT/UMT? Probably.  
        Is it consistent that way, w/ all dates?
        What do w/ the old dates that got put in w/ mountain time? (daylight/standard: matters at all?)
      .
      does a transaction rollback happen if an exception is thrown during it?
        can ck on the db if one is in place while stepping thru?
        OR some other test
        
        If not, fix that, such as in methods like deleteEntity & others that don't ck at all?
      .
      add tests for
        controller
          import/export
            see file under other*/ dir as a candidate for testing or idea (gen randomly betr?? what, 4 speed? only gen once?)
          incl mods made on/before Sat Apr 19 14:55:27 MDT 2014 (mbe after... sch log 4 import/export)
        db
          createEntity (ck for new col: insertion_date)
          findRelationType
          moveEntityToNewGroup
          getSortingIndex
          getContainingRelationsToGroupsIds
        .
      .
      update tests
        getattrcount for new attr types (d,b,f)
          and what ELSE in postgresqldatabase did I not update for those, like has textattr now??
            (fixed that one at least, shortly after Mon Jan 20 11:25:23 MST 2014)
          .
        and db.prefixColumnNamesWithTableName (in gSA) added shortly after Mon Jan 20 11:44:53 MST 2014  ?
      make archiving
        *prevent deleting/archiving the defining entity of a class? except...when?
          just don't have that menu option in that case?
          what happens now if user does either one?
          or at least warn? how & at what level should this work?
        to use separate tables? (for space over time? any other reason?)
        have a way to see archived data & un-archive (or undo?)
        anything elsewhere on archiv?
        what NOW happens when we del an ent, and it's the type (or other) for other attrs?
          do we prevent it?
            no, it should fail now, right?
          what should happen (for deleting OR archiving!?
            ck all the tables that relate to entity, see which to del & which to check/prevent at controller level or where(?), when rel exists.  AND HOW RELATES TO ARCHIVING...SAME!
            
            AND/OR?: make db.getSortedAttributes also ignore rows of attrs, whose types or units or whatever are archived entities (but shouldn't happen if we do the above correctly, true?
              could see similar code cked in ~ Mon Jan 20 13:02:25 MST 2014
            .
          .
          SO WORKARound is to not delete or archive things that are units or attr types.
            not designed/intended for that, so unlikely to happen for now, but w/ probably would, w/ a large user base.
        .
      .
      handle looping data in db.deleteRelationToGroupAndItsEntities, if a group eventually contains itself!
        build a list, ck it when looping to skip dups, then act on it all at once? or done just as well as it's going along?
        Then remove the note in user prompt in ctrlr:
          Note: the deletion does do recursion
        ...added in ckin sometime just after Wed Jan 22 16:57:01 MST 2014.
      .
      how *remember* to include "(not archived) and" or whatever in future-written queries? wait4abug or.......?
        and make it plain to callers!?
      .
      fix but when trying to del a rtg:
        msg
          k-has group: testing only, class: (specified as None)
          l-has group: testgrp4, class: todo-template
          m-has group: testgrp5, class: (mixed)
          k
          
          
          
          
          
         
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group: testing only, class: (specified as None)
          1-Add entry
          2-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          2
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (regular menu: more complete, so slower for some things): has group: testing only, class: (specified as None)
          1-Add entity to group
          2-Filter (limit which are shown)
          3-Sort
          4-List next items (of 1 more)
          5-Delete group definition
          6-Delete group and all entities in it
          7-Go to quick group menu
          0/ESC - back/previous menu
          6
          DELETE this group definition *AND* its entities, with *ALL* entities and their "subgroups" that they eventually refer to, recursively (actually, the recursion is not right and will probably fail if you have nesting...): *******ARE YOU REALLY SURE?****** (y/n) (y/n) [defaults to n]: 
          y
          Um, this seems unusual.  Really _really_ sure?  I certainly hope you make regular backups of the data AND TEST RESTORES.  (Note: the deletion does(n't yet) do recursion but doesn't yet properly handle groups that loop--that eventually/ever contain themselves.)  Proceed to delete it all?: (y/n) (y/n) [defaults to n]: 
          y
          Exception in thread "main" java.lang.Exception: Exception while processing sql: DELETE FROM entity where id=-9223372036854775640
                  at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:124)
                  at org.onemodel.PostgreSQLDatabase.dbAction(PostgreSQLDatabase.scala:206)
                  at org.onemodel.PostgreSQLDatabase.org$onemodel$PostgreSQLDatabase$$deleteObjects(PostgreSQLDatabase.scala:1744)
                  at org.onemodel.PostgreSQLDatabase$$anonfun$deleteRelationToGroupAndALL_recursively$1$1.apply(PostgreSQLDatabase.scala:983)
                  at org.onemodel.PostgreSQLDatabase$$anonfun$deleteRelationToGroupAndALL_recursively$1$1.apply(PostgreSQLDatabase.scala:982)
                  at scala.collection.immutable.List.foreach(List.scala:318)
                  at org.onemodel.PostgreSQLDatabase.deleteRelationToGroupAndALL_recursively$1(PostgreSQLDatabase.scala:982)
                  at deleteGroupRelationsToItAndItsEntries(PostgreSQLDatabase.scala:1000)
                  at org.onemodel.RelationToGroup.deleteWithEntities(RelationToGroup.scala:62)
                  at org.onemodel.Controller.groupMenu(Controller.scala:1973)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:1789)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:854)
                  at org.onemodel.Controller.entityMenu(Controller.scala:982)
                  at org.onemodel.Controller.mainMenu(Controller.scala:309)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
          Caused by: org.postgresql.util.PSQLException: ERROR: update or delete on table "entity" violates foreign key constraint "valid_entity_id" on table "entitiesinagroup"
            Detail: Key (id)=(-9223372036854775640) is still referenced from table "entitiesinagroup".
                  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
                  at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
                  at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:299)
                  at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:127)
                  ... 18 more

      .
      fix (w/ test 1st!) bug where adding an entity w/ class 'none' to group w/ class 'none' throws an error and doesn't let you.
        what *should* it do, that is worth spending the time!?
      .
      fix bug where adding the 2nd entry to a group puts it above the 1st entry, instead of below.
        see likely related cmts in db.renumberGroupSortingIndexes
      
      update tests around psqld.hasMixedClasses where I removed "archived" from sql statements in commit just after Wed Feb 12 14:34:26 MST 2014.
        change was:
           diff --git a/src/main/scala/org/onemodel/PostgreSQLDatabase.scala b/src/main/scala/org/onemodel/PostgreSQLDatabase.scala
           index de1a5a2..2ecf018 100644
           --- a/src/main/scala/org/onemodel/PostgreSQLDatabase.scala
           +++ b/src/main/scala/org/onemodel/PostgreSQLDatabase.scala
           @@ -868,13 +868,13 @@ class PostgreSQLDatabase(username: String, var password: String) {
                // group, and you get > 1 when I wanted just 1. This way it seems to work if I just check the # of rows returned.)
                val numClassesInGroupsEntities = dbQuery("select class_id from EntitiesInAGroup eiag, entity e" +
                                                         " where eiag.entity_id=e.id and group_id=" + inRelationToGroupId +
           -                                             " and (not archived) and class_id is not null" +
           +                                             " and class_id is not null" +
                                                         " group by class_id",
                                                         "Long").size
                // nulls don't show up in a count(class_id), so get those separately
                val numNullClassesInGroupsEntities = extractRowCountFromCountQuery("select count(entity_id) from EntitiesInAGroup eiag, entity e" +
                                                                                   " where eiag.entity_id=e.id" + " and group_id=" + inRelationToGroupId +
           -                                                                       "  and (not archived) and class_id is NULL ")
           +                                                                       " and class_id is NULL ")
      .
    .
    somewhat annoying if it comes up,  w/ no workaround
      can subgroups become orphaned, esp w/ cascading deletes?
        or when else?
        need ability to search for them, browse?
        put in a constraint that every group must be in a RTG, or remove this requirement in ctrlr.deleteOrArchiveEntity?:
          how done /w entity/class%%:
              // Start the entity w/ a NULL class_id so that it can be inserted w/o the class present, then update it afterward; constraints complain otherwise.
              // Idea: instead of doing in 3 steps, could specify 'deferred' on the 'not null'
              // constraint?: (see file:///usr/share/doc/postgresql-doc-9.1/html/sql-createtable.html).
              dbAction("INSERT INTO Entity (id, insertion_date, name, class_id) VALUES (" + entityId + "," + System.currentTimeMillis() + ",'" + name + "', NULL)")
              dbAction("INSERT INTO Class (id, name, defining_entity_id) VALUES (" + classId + ",'" + name + "', " + entityId + ")")
              dbAction("update Entity set (class_id) = (" + classId + ") where id=" + entityId)
            .
          could make it require all groups to be in an rtg.  Or, would one ever want that not to be true, and just find orphans when they occur? Such as when deleting a group from one place, and adding it to another? Or would one want stragglers in some cases, to be stragglers?
        .
      .
    .
    little bugs%% (infrequent or avoidable, or with "SO <workaround...>")
      bug when adding entry: duplicate sortingindex:
        msg & how got there:
          $ om
          
          
          
          
          
          
          ==============================================
          TextUI, OneModel version 0.0.4-SNAPSHOT: a program to manipulate knowledge, and
          store, transmit, share it etc.
          (c) 2002-2014 Luke A Call.
          
          The purpose of this software is to do good.  If you don't at all times
          practice complete honesty and the Golden Rule, then begin that as a
          sincere life-long effort, before using or distributing this software in any
          way.  Also preserve this message, and make this same request to those to whom
          you distribute this software in any form, including that they make this same
          full request to others to whom they redistribute.  Someday, everything will be
          known, and every individual will be accountable; God will audit.  He will also
          help and guide you, if you ask humbly, sincerely, patiently, and obediently.

          This program is free software: you can redistribute it and/or modify
          it under under the terms of BOTH:
          1) the above requests; and
          2) the GNU Affero General Public License as
          published by the Free Software Foundation, either version 3 of the
          License, or (at your option) any later version.  If you need other terms,
          contact " licensing ..at.. onemodel.org ", with the subject "onemodel
          licensing".

          
          This program is distributed in the hope that it will be useful,
          but WITHOUT ANY WARRANTY; without even the implied warranty of
          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
          GNU Affero General Public License ("GNU AGPL") for more details.
          
          You should have received a copy of the GNU AGPL
          along with this program. If not, see <http://www.gnu.org/licenses/>.
          
          Authors, if applicable, can usually be contacted through the same avenues
          by which you received this software, or similar.
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: Luke
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...                                                
          2-Import/Export...                                                                                                                                                                                             
          3-Edit name                                                                                                                                                                                                    
          4-Delete or Archive...                                                                                                                                                                                         
          5-(stub: no relation or classDefiningEntity to go to)                                                                                                                                                          
          6-Search: list next items                                                                                                                                                                                      
          0/ESC - back/previous menu                                                                                                                                                                                     
           a-has: spirit
           b-has: <B>ody
           c-has: <C>ontacts (relationships with people and groups)
           d-has: <D>ocuments
           e-has: rol<E>s
           f-has: <F>uture plans
           g-has: material resources (<G>old)
           h-has: <H>istorical info (personal; also other?)
           i-has: contextual <I>nformation
           j-has group/4: <j>umbled info,<j>unk to organize, class: (mixed)
          e
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: rol<E>s: found via relation: Luke has: rol<E>s
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (rol<E>s) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: self/child of God role
           b-has: employment/career/professional role
           c-has: husband role
           d-has: father role
           e-has: brother/extended family member role
           f-has: church member role
           g-has: citizen role
          b
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: employment/career/professional role: found via relation: rol<E>s has: employment/career/professional role
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (employment/career/professional role) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: OneModel
           b-has:  employee
          b
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY:
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (employee... program.)
          0/ESC - back/previous menu
           a-has: plans
           b-has: vision
           c-has: strategy
           d-has: goals
           e-has: empowerment
           f-has: measure/report/review/revise (& repeat)
           g-has group/6: 2014 journal entries, class: journal entry
          a
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: plans (class: plan: vision/strategy/goals/empowerment/execution/review etc): found via relation: 
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (plans (class: plan: vision/strategy/goals/empowerment/execution/review etc)) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: vision
           b-has: strategy
           c-has: goals
           d-has: empowerment
           e-has: measure/report/review/revise (& repeat)
           f-has group/9: tasks (execution), class: todo-template
           g-has group/23: notes, class: reference-note
          f
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/9: tasks (execution), class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->periodic/repeated tasks                                                                                                                 
           b->done - enter by reporting period?                                                                                                        
           c->qs for someone or in standup                                                                                                             
           d->tasks with DATES (but non generally periodic/repeated)                                                                                   
           e-unsorted entries (or to file elsewhere)                                                                                                   
           f->lunch                                                                                                                                    
           g->programming                                                                                                                              
           h->misc but valuable                                                                                                                        
           i->ideas                                                                                                                                    
          a
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: periodic/repeated tasks - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->first/early                                                                                                                             
           b-sometime in day                                                                                                                           
           c->2x/mo (mid-, late)                                                                                                                       
           d->last in day                                                                                                                              
           e->6h/week learning                                                                                                                         
           f-add tasks 4 stories next 2 iters or tasks next 1, stories the next one?                                                                   
           g-during next planning?                                                                                                                     
          a
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: first/early - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-SIGN IN TO CONFLUENCE, *then* ck cal, email w/ LIMIT                                                                                     
           b-remember standup, burndown ready?                                                                                                         
           c-strecxoj                                                                                                                                  
           d-reminders running?                                                                                                                        
           f-Email !                                                                                                                                  
           g->other reminders/habits to form:                                                                                                          
          g
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/2: other reminders/habits to form:, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->be4 spkng/emailing: reread: is it clear? correct? no critical tone? should I wait/reconsider if it's obvious/silly? too tired to know?  
           b-DON'T DEPLOY to production anything on Fri - Mon (unless CDO-mature & no risk etc etc, details in steve  email 2014-4-17)         
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: first/early - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-SIGN IN TO CONFLUENCE, *then* ck cal, email w/ LIMIT                                                                                      
           b-remember standup, burndown ready?                                                                                                         
           c-strecxoj                                                                                                                                  
           d-reminders running?                                                                                                                        
           e-do breathing ?                                                                                                           
           f-Email D!                                                                                                                                  
          *g->other reminders/habits to form:                                                                                                         
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: periodic/repeated tasks - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->first/early                                                                                                                             
           b-sometime in day                                                                                                                           
           c->2x/mo (mid-, late)                                                                                                                       
           d->last in day                                                                                                                              
           e->6h/week learning                                                                                                                         
           f-add tasks 4 stories next 2 iters or tasks next 1, stories the next one?                                                                   
           g-during next planning?                                                                                                                     
          d
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: last in day - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items (of 1 more)
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-day's journal of tasks                                                                                   
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: periodic/repeated tasks - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->first/early                                                                                                                              
           b-sometime in day                                                                                                                           
           c->2x/mo (mid-, late)                                                                                                                       
          *d->last in day                                                                                                                             
           e->6h/week learning                                                                                                                         
           f-add tasks 4 stories next 2 iters or tasks next 1, stories the next one?                                                                   
           g-during next planning?                                                                                                                     
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/9: tasks (execution), class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->periodic/repeated tasks                                                                                                                 
           b->done - enter by reporting period?                                                                                                        
           c->qs for someone or in standup                                                                                                             
           d->tasks with DATES (but non generally periodic/repeated)                                                                                   
           e-unsorted entries (or to file elsewhere)                                                                                                   
           f->lunch                                                                                                                                    
           g->programming                                                                                                                              
           h->misc but valuable                                                                                                                        
           i->ideas                                                                                                                                    
          a
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/7: periodic/repeated tasks - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->first/early                                                                                                                             
           b-sometime in day                                                                                                                           
           c->2x/mo (mid-, late)                                                                                                                       
           d->last in day                                                                                                                              
           e->6h/week learning                                                                                                                         
           f-add tasks 4 stories next 2 iters or tasks next 1, stories the next one?                                                                   
           g-during next planning?                                                                                                                     
          d
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: last in day - group, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items (of 1 more)
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-day's journal of tasks                                                                                                 
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          ck the 'misc but valuable' stuff? (betr: link here)
          Exception in thread "main" org.onemodel.OmDatabaseException: Exception while processing sql: update EntitiesInAGroup set (sorting_index) = (-3278619704092000256) where group_id=-9223372036854775727 and  entity_id=-9223372036854761198
                  at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:144)
                  at org.onemodel.PostgreSQLDatabase.dbAction(PostgreSQLDatabase.scala:209)
                  at org.onemodel.PostgreSQLDatabase.updateEntityInAGroup(PostgreSQLDatabase.scala:1397)
                  at org.onemodel.Controller.placeEntryInPosition$1(Controller.scala:2019)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2306)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2438)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2438)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:900)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
          Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "nodupsortingindexes"
            Detail: Key (group_id, sorting_index)=(-9223372036854775727, -3278619704092000256) already exists.
                  at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2062)
                  at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1795)
                  at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:479)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:353)
                  at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:299)
                  at org.onemodel.PostgreSQLDatabase$.dbAction(PostgreSQLDatabase.scala:128)
                  ... 22 more
      .
      bug when exporting: no such file or directory
        msg
          ==============================================
          **CURRENT ENTITY: spiritual plan / spiritual vsgeer (class: plan: vision/strategy/goals/empowerment/execution/review etc): found via relation: plans has: spiritual plan / spiritual vsgeer
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (spiritual plan / spiritual vsgeer (class: plan: vision/strategy/goals/empowerment/execution/review etc)) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has group/3: spiritual plan / spiritual vsgeer, class: (mixed)
          2
          
          
          
          
          
          
          ==============================================
          1-Import
          2-Export
          0/ESC - back/previous menu
          2
          Enter number of levels (0 = 'all'); ESC to cancel [defaults to 0]: 
          
          Include metadata (verbose detail: id's, types...)? (y/n) [defaults to n]: 
          
          Listening for transport dt_socket at address: 5005
          Exception in thread "main" java.io.IOException: No such file or directory
                  at java.io.UnixFileSystem.createFileExclusively(Native Method)
                  at java.io.File.createTempFile(File.java:1879)
                  at java.io.File.createTempFile(File.java:1923)
                  at org.onemodel.Controller.exportToCollapsibleOutline(Controller.scala:1164)
                  at org.onemodel.Controller.entityMenu(Controller.scala:959)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
        .
        SO workaround: don't have slashes in entity names.
      .
      this bug?: (unexpected jump to unexpected spot in code... have2restart om)
        msg
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/9: 2014-03-24, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-confluence updates w/ what i've learned re ept supt, outdated material etc.
           b-updt intranet profile
           h-play w/ installing virtualbox (err msgs; virtualbox-dkms is rec'd but s.b. req'd it seems)
          (Some lines were longer than the terminal width and have been truncated.  That could mean that either your terminal width is less than  140 characters, or that there is a bug in the display logic.)
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/10: 2014-3-12--2014-3-25, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-3-11
           b->2014-03-12
           c->2014-03-13
           d->2014-03-14
           e->2014-03-17 monday
           f->2014-3-18
           g->2014-03-19
           h->2014-03-20
           i->2014-03-21
          *j->2014-03-24
          (Some lines were longer than the terminal width and have been truncated.  That could mean that either your terminal width is less than  140 characters, or that there is a bug in the display logic.)
          j
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/9: 2014-03-24, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-confluence updates w/ what i've learned re ept supt, outdated material etc.
           b-updt intranet profile
          (Some lines were longer than the terminal width and have been truncated.  That could mean that either your terminal width is less than  140 characters, or that there is a bug in the display logic.)
          8
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY to highlight (*)
          1-keep existing (same as ESC)
          0/ESC - back/previous menu
          *a-confluence updates w/ what i've learned re ept supt, outdated material etc.
           b-updt intranet profile
           f-talk w/ ChadS re time/ppl 2 coordinate effects on SLAT of m-c mods.
           g-reschedule meeting (few tries...)
           h-play w/ installing virtualbox (err msgs; virtualbox-dkms is rec'd but s.b. req'd it seems)
           i-look at why m-core tests won't pass now: cis/cas, sas errs?
          (Some lines were longer than the terminal width and have been truncated.  That could mean that either your terminal width is less than  140 characters, or that there is a bug in the display logic.)
          8
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY to highlight (*)
          1-keep existing (same as ESC)
          0/ESC - back/previous menu
          *a-confluence updates w/ what i've learned re ept supt, outdated material etc.
           b-updt intranet profile
           c-discussing move of 
           i-look at why tests won't pass now: cis/cas, sas errs?
          i
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/9: 2014-03-24, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-confluence updates w/ what i've learned re ept supt, outdated material etc.
          *i-look at why tests won't pass now: cis/cas, sas errs?
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): :
          go dnstrs w/ kevin, look at the proliants w/ odmi, discuss at length incl w/ dennis re approach.
          Exception in thread "main" org.onemodel.OmException: never should have got here: should have been the logic of ~nowhere to go so doing nothing
                  at org.onemodel.Controller.getNewSortingIndex$1(Controller.scala:1789)
                  at org.onemodel.Controller.placeEntryInPosition$1(Controller.scala:1735)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2041)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2173)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:1919)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2049)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2173)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1057)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:898)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1057)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:898)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1057)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:898)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1057)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
    
        .
        and another inst of that bug w/ full hist:
          lacall@callla Mon May 12 15:18:52:~/proj/om
          $ om
          
          
          
          
          
          
          ==============================================
          TextUI, OneModel version 0.0.4-SNAPSHOT: a program to manipulate knowledge, and
          store, transmit, share it etc.
           (c) 2002-2014 Luke A Call and any other authors/contributors.
          
          This program is free software: you can redistribute it and/or modify
          it under the terms of the GNU Affero General Public License ("GNU AGPL") as
          published by the Free Software Foundation, either version 3 of the
          License, or (at your option) any later version.
          
          This program is distributed in the hope that it will be useful,
          but WITHOUT ANY WARRANTY; without even the implied warranty of
          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
          GNU Affero General Public License ("GNU AGPL") for more details.
          
          You should have received a copy of the GNU AGPL
          along with this program. If not, see <http://www.gnu.org/licenses/>.
          
          Authors, if applicable, can usually be contacted through the same avenues
          by which you received this software, or similar.
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: Luke
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-(stub: no relation or classDefiningEntity to go to)
          6-Search: list next items
          0/ESC - back/previous menu
           a-has: spirit
           b-has: <B>ody
           c-has: <C>ontacts (relationships with people and groups)
           d-has: <D>ocuments
           e-has: rol<E>s
           f-has: <F>uture plans
           g-has: material resources (<G>old)
           h-has: <H>istorical info (personal; also other?)
           i-has: contextual <I>nformation
           j-has group/4: <j>umbled info,<j>unk to organize, class: (mixed)
          e
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: rol<E>s: found via relation: Luke has: rol<E>s
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (rol<E>s) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: self/child of God role
           b-has: employment/career/professional role
           c-has: husband role
           d-has: father role
           e-has: brother/extended family member role
           f-has: church member role
           g-has: citizen role
          b
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: employment/career/professional role: found via relation: rol<E>s has: employment/career/professional role
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (employment/career/professional role) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: OneModel
           b-has: employee
          b
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY:  employee 
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-Import/Export...
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity employee 
          0/ESC - back/previous menu
           a-has: plans
           b-has: vision
           c-has: strategy
           d-has: goals
           e-has: empowerment
           f-has: measure/report/review/revise (& repeat)
           g-has group/6: 2014 journal entries, class: journal entry
          g
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/6: 2014 journal entries, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->2014-2-24--2014-3-11                                                                                                                    
           b->2014-3-12--2014-3-25                                                                                                                     
           c->2014-03-26--2014-04-08                                                                                                                   
           d->2014-04-09--2014-04-22                                                                                                                   
           e->2014-04-23--2014-05-06                                                                                                                   
           f->2014-05-07--2014-05-20                                                                                                                   
          f
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->2014-05-07                                                                                                                              
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
          d
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/3: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-m-c- work on docs for our modules moved out; many updates.                                                                               
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          8
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY to highlight (*)
          1-keep existing (same as ESC)
          0/ESC - back/previous menu
          *a-m-c- work on docs for our modules moved out; many updates.                                                                               
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          c
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/3: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
          *c-........n mostly reorg parent/child relats among our data team pages                                                                     
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          PDP- cont on platf apprent. (AND update some CDO docs)
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          *d-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                   
          8
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY to highlight (*)
          1-keep existing (same as ESC)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          *d-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                   
          c
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
          *c-........n mostly reorg parent/child relats among our data team pages                                                                     
           d-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                    
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          .......(basically did all the doc updates for all 3 data team modules removed fr m-c & others i'd been saving up)
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/5: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          *d-.......(basically did all the doc updates for all 3 data team modules removed fr m-c & others i'd been saving up)                        
           e-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                    
          8
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY to highlight (*)
          1-keep existing (same as ESC)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
          *d-.......(basically did all the doc updates for all 3 data team modules removed fr m-c & others i'd been saving up)                        
           e-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                    
          e
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/5: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a-m-c- work on docs for our modules moved out; many updates.                                                                                
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
           d-.......(basically did all the doc updates for all 3 data team modules removed fr m-c & others i'd been saving up)                         
          *e-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                   
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
          *d->2014-05-12 MONDAY                                                                                                                       
          d
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/5: 2014-05-12 MONDAY, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-m-c- work on docs for our modules moved out; many updates.                                                                               
           b-misc- discuss/think re new monitor/standing work setup, rearrange things after my countertop raised.                                      
           c-........n mostly reorg parent/child relats among our data team pages                                                                      
           d-.......(basically did all the doc updates for all 3 data team modules removed fr m-c & others i'd been saving up)                         
           e-PDP- cont on platf apprent. (AND update some CDO docs)                                                                                    
          ESC
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/4: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
          *d->2014-05-12 MONDAY                                                                                                                       
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          2014-05-13
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/5: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
          *e-2014-05-13                                                                                                                               
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          m-c- finish doc updates for removed components & some CDO ones per errs I found while removing these fr m-c
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/6: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
           e-2014-05-13                                                                                                                                
          *f-m-c- finish doc updates for removed components & some CDO ones per errs I found while removing these fr m-c                              
          7
          
          
          
          
          
          
          ==============================================
          CHOOSE AN ENTRY (that contains only one subgroup) FOR THE TARGET OF MOVES (choose from SAME SCREENFUL as now;  if the target contains 0 subgroups, or 2 or more subgroups, use other means to move entities to it until some kind of "move anywhere" feature is added):
          1-Unselect current move target (if present; not necessary really)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
           e-2014-05-13                                                                                                                                
          *f-m-c- finish doc updates for removed components & some CDO ones per errs I found while removing these fr m-c                              
          e
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/6: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
          +e-2014-05-13                                                                                                                                
          *f-m-c- finish doc updates for removed components & some CDO ones per errs I found while removing these fr m-c                              
          2
          
          
          
          
          
          
          ==============================================
          1-Move up 5
          2-Move up 1
          3-Move down 1
          4-Move down 5
          5-Move (*) to (sole, if present) subgroup of selected target (+, if any)
          6-Move (*) to calling menu (up one)
          0/ESC - back/previous menu
          5
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/5: 2014-05-07--2014-05-20, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->2014-05-07                                                                                                                               
           b->2014-05-08                                                                                                                               
           c->2014-05-09                                                                                                                               
           d->2014-05-12 MONDAY                                                                                                                        
          *e->2014-05-13                                                                                                                              
          e
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/1: 2014-05-13, class: journal entry
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to highlighted entity (not the subgroup)
          6-Search: list next items
          7-Select target (entry move destination: gets a '+')
          8-Select entry to highlight (with '*'; choosing the letter instead goes to the subgroup if any, else to that entity)
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a-m-c- finish doc updates for removed components & some CDO ones per errs I found while removing these fr m-c                              
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          PDP- learning some n doc updates re platform tut.&c
          Exception in thread "main" org.onemodel.OmException: never should have got here: should have been the logic of ~nowhere to go so doing nothing
                  at org.onemodel.Controller.getNewSortingIndex$1(Controller.scala:2058)
                  at org.onemodel.Controller.placeEntryInPosition$1(Controller.scala:2004)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2306)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2438)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:2184)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2314)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2438)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:900)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:899)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1066)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
          lacall@callla Tue May 13 09:04:32:~/proj/om
          $ 
        .
      .
      this bug?:  om bug (after editing an entry via other9, thencoming back2this 9): (seems to be when the list is longer than the screen and you try to hit #7 to mark a move target?)
        msg
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/43: breaking out from mc (incl src, testing, deployment, references!), class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to selection (if selected entity only contains one RelationToGroup, goes directly to subgroup)
          6-Search: list next items (of 3 more)
          7-Choose target, to move entry to its (sole, if present) subgroup (gets a '+')
          8-----
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->done - brk out fr mlte are in the p
           ...
           loying: ONLY WARs go to amazon...should we??: there are hooks inside a webapp (inside xyz itself) to start the process.
           M-much testing,deploy,testing etc (see entry in main list for more re this)
           N-STORY: remove it from the old code base
          7
          Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: -1
                  at org.onemodel.Controller.addRemainingCountToPrompt(Controller.scala:694)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2054)
                  at org.onemodel.Controller.groupMenu(Controller.scala:2290)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2084)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2030)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:1839)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2002)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2030)
                  at org.onemodel.Controller.groupMenu(Controller.scala:2290)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2084)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:1872)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2002)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:1872)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2002)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:852)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:851)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:851)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:851)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:851)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
          
    
      
      
      .
      noted elsewhere already? but: putting entity in group adds to the name, so it can be longer than 140 chars & crash.
        undo the '- groups' addition thing, & let concert show it?
      .
      creating new entry in a list sometimes puts it above the highlighted one instead of below (like if there is only one entity beforehand, or if the highlighted one is last in the list, maybe same things), and then moving it (from 2nd-to-last in longish list) created this stack trace
        msg
          lacall@acerblack Sat Feb 22 12:27:55:~/proj/om
          $ om 
                                                                                                                                                                                                         
                                                                                                                                                                                                         
          
          
          
          
          ==============================================
          TextUI, OneModel version 0.0.4-SNAPSHOT: a program to manipulate knowledge, and
          store, transmit, share it etc.
           (c) 2002-2014 Luke A Call and any other authors/contributors.
          
          This program is free software: you can redistribute it and/or modify
          it under the terms of the GNU Affero General Public License ("GNU AGPL") as
          published by the Free Software Foundation, either version 3 of the
          License, or (at your option) any later version.
          
          This program is distributed in the hope that it will be useful,
          but WITHOUT ANY WARRANTY; without even the implied warranty of
          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
          GNU Affero General Public License ("GNU AGPL") for more details.
          
          You should have received a copy of the GNU AGPL
          along with this program. If not, see <http://www.gnu.org/licenses/>.
          
          Authors, if applicable, can usually be contacted through the same avenues
          by which you received this software, or similar.
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: Luke
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-(stub)
          3-Edit name
          4-Delete or Archive...
          5-(stub: no relation or classDefiningEntity to go to)
          6-Search: list next items
          0/ESC - back/previous menu
           a-has: spirit
           b-has: <B>ody
           c-has: <C>ontacts (relationships with people and groups)
           d-has: <D>ocuments
           e-has: rol<E>s
           f-has: <F>uture plans
           g-has: material resources (<G>old)
           h-has: <H>istorical info (personal; also other?)
           i-has: contextual <I>nformation
           j-has group/2: <j>umbled info,<j>unk to organize, class: (mixed)
          f
          
          
          
          
          
          
          ==============================================
          **CURRENT ENTITY: <F>uture plans: found via relation: Luke has: <F>uture plans
          Attribute list menu: (or choose attribute by letter)
          1-Add attribute (quantity, true/false, date, text, external file, relation to entity or group: i.e., ownership of or "has" another entity, family ties, etc)...
          2-(stub)
          3-Edit name
          4-Delete or Archive...
          5-Go to...
          6-Search: list next items
          7-Set current entity (<F>uture plans) as default (first to come up when launching this program.)
          0/ESC - back/previous menu
           a-has: ideals by role
           b-has: calendar/events
           c-has group/13: tasks: general & personal, class: todo-template
           d-has group/3: tasks: employment/career/professional, class: todo-template
          c
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/13: tasks: general & personal, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to selection (if selected entity only contains one RelationToGroup, goes directly to subgroup)
          6-Search: list next items
          7-Choose target, to move entry to its (sole, if present) subgroup (gets a '+')
          8-----
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
          *a->done items                                                                                                                              
           b-unsorted entries (to put elsewh
           ...
           m-ck org/jed                                                                                                                                
          m
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/13: tasks: general & personal, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to selection (if selected entity only contains one RelationToGroup, goes directly to subgroup)
          6-Search: list next items
          7-Choose target, to move entry to its (sole, if present) subgroup (gets a '+')
          8-----
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->done items    
           ...
          *m-ck org/jed                                                                                                                               
          1
          NAME THE ENTITY:
          Enter entity name (up to 140 characters): : 
          vacuum around desk etc! (periodically?)
          
          
          
          
          
          
          ==============================================
          Nowhere to move it to, so doing nothing.
          Press any key to continue (except the spacebar)...
          
          
          
          
          
          
          
          
          ==============================================
          ENTITY GROUP (quick menu: acts on (w/ #'s) OR selects (w/ letters...) an entity): has group/14: tasks: general & personal, class: todo-template
          1-Add entry
          2-Move selection (*) up/down, in, out...
          3-Edit group name
          4-Delete or Archive the selection (*)...
          5-Go to selection (if selected entity only contains one RelationToGroup, goes directly to subgroup)
          6-Search: list next items
          7-Choose target, to move entry to its (sole, if present) subgroup (gets a '+')
          8-----
          9-Other (slower actions, more complete menu)
          0/ESC - back/previous menu
           a->done items                                                                                                                               
           b-unsorted entries 
           ...
          *m-vacuum around desk etc! (periodically?)                                                                                                  
           n-ck org/jed                                                                                                                                
          2
          
          
          
          
          
          
          ==============================================
          1-Move up 5
          2-Move up 1
          3-Move down 1
          4-Move down 5
          5-(stub: have to choose a target before you can move entries to it)
          6-Move (*) to calling menu (up one)
          0/ESC - back/previous menu
          3
          Exception in thread "main" org.onemodel.OmException: never should have got here: should have been the logic of ~nowhere to go so doing nothing
                  at org.onemodel.Controller.getNewSortingIndex$1(Controller.scala:1742)
                  at org.onemodel.Controller.placeEntryInPosition$1(Controller.scala:1688)
                  at org.onemodel.Controller.moveSelectedEntry$1(Controller.scala:1833)
                  at org.onemodel.Controller.quickGroupMenu(Controller.scala:2002)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:852)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.goToSelectedAttribute$1(Controller.scala:851)
                  at org.onemodel.Controller.entityMenu(Controller.scala:1010)
                  at org.onemodel.Controller.mainMenu(Controller.scala:315)
                  at org.onemodel.Controller.menuLoop$1(Controller.scala:121)
                  at org.onemodel.Controller.start(Controller.scala:124)
                  at org.onemodel.TextUI.launchUI(TextUI.scala:197)
                  at org.onemodel.TextUI$.main(TextUI.scala:26)
                  at org.onemodel.TextUI.main(TextUI.scala:1)
        .
        so workaround: restart & sort it
      .
      deleting a (the last?) entity from a group doesn't go back to grp menu but to an entity pick list: for what? Then one ESC goes back to the deleted entity as if it still existed and showing its class, even tho both those r del'd.
        SO: just hit ESC there twice
      .
      deleting to a class-defining entity by navigation starting with a group, then member, then its template/cde, then choosing delete option/y, results in stack trace due to db constraint. 
        fix: Should not allow user to have that option (or instead of askign y/n, say like we do elsewhere (when deleting a class: "Can not delete class, because it is the class of") that it can't be del'd because it has some entities using it.
        SO: restart app and/or delete all entities in the class 1st.
      .
      this on ui
        + " (of " + numLeft + " more)"
      ...doesn't seem to be correct. SO ignore it 4now.
      
      ?should add test for totalRowsAvailable in db.getSortedAttributes
      
      deleting a date attr leaves that  attr menu up, and re-deleting it yields a stack trace/crash.
        so, hit ESC after del.
        same w/ other attr types?
      .
      exporting a file that is already on filesystem (so goes to /tmp) doesn't put on the extension.
        so: rename it
      .
    .
    make RelationToEntity line 78 not allow updating rel_type_id (so consistent w/ RTG; since it's part of the key?
    
    ck parameters as a habit, such as these from a note removed from cntrlr.quickGroupMenu?
      note
        //%%confirm that these parameters are valid!:
        //%%(do that routinely, in the process now?)
        //%%do same thing in groupMenu and anywhere else?
        //startingDisplayRowIndexIn: Long, relationToGroupIn: RelationToGroup, highlightedEntityIn: Option[Entity] = None
      .
      currently in code revu cklist says "Need any add'l parameter validation?": expand/move that or not worth it?
    .
    FIRST: MODEL BETTER the "0" value entered for validOnDate(!!), & CONVERT THE ONES THAT ARE THERE from 0 to that! 
      (like, it should be a separate boolean value w/ a constraint that the long is null when the bool is true, and vice-versa)
        the knowledge about specific thingies like this in teh date  is spread out into way to many places: should be in 1 plc.
      .
      // keeping in mind that the app currently assigns a separate special meaning to a 0 date (for all time, see db.createTables for details).
      .
      other notes:   get better w/ dates/time. e.g. dealing w/ 0 year(if even needed?), & relative dates/uncertainty like FS?
        Array("Please enter the date when this was first VALID (true) (like this, w/ at least the year: \"2013-01-31 23:59:59:999 MST\"; zeros are " +
        "allowed in all but the yyyy-mm-dd):  (Or for \"all time\", enter 0.  Or for unknown/unspecified leave blank.  Or or current date/time " +
        "enter \"now\".  ESC to exit this.  For dates far in the past you can prefix them with \"BC \" (or \"AD \", but either way omit a space " +
        "before the year), like BC3400-01-31 23:59:59:999 GMT, at least up through the year. There is ambiguity about BC that needs some " +
        "investigation, because java allows a '0' year (which for now means 'for all time' in just this program), but normal human time doesn't" +
        "allow a '0' year, so maybe you have to subtract a year from all BC things for them to work right, and enter/read them accordingly, until " +
        "someone learns for sure, and we decide whether to subtract a year from everything BC for you automatically. Hm.")
        
        //ABOUT THAT LAST COMMENT: WHY DOES JAVA ALLOW A 0 YEAR, UNLESS ONLY BECAUSE IT USES long #'S? SEE E.G. 
        // http://www.msevans.com/calendar/daysbetweendatesapplet.php
        //which says: "...[java?] uses a year 0, which is really 1 B.C. For B.C. dates, you have to remember that the years are off by one--10 B.C. 
        // to [java?] is really 11 B.C.", but this really needs more investigation on what is the Right Thing to do.
        
        /*
          and note to get better w/ dates later (read javadocs better, ck apache, see some articles? incl re scala?), and/or the below..., 
          AND make sure whatever gets stored I can print!
          - until more things are in place, mention to users that this only goes back to ___
          - we at some point will have to model an *event*, which have related time-related  attributes, which can be modeled at that point as the user 
          sees fit
          - in which case we might want to have available a kind of attribute that doesn't have its own date attached, 
          or for which those are ignored. Drop them if/when?
          - have some wiki/forum/list/community for discussing such things? (until supplated by om itself if poss?)
        */
      .
    .
    group postgresql class' methods by table (or move code to the model classes like Entity?)
      for easier navigation and faster tests during devt since not executing whole thing each time, & for ide performance when it's parsing all the code?
    .
    other bad smells? refactoring! (see elsewhere)!
    
    write tests or what, for new methods committed ~Wed Jan 22 13:36:35 MST 2014
      (all were man'ly tested w/ thorough breakpoints)
      in controller
        moveHighlightedEntry
        findNewNeighbors
        getNewSortingIndex
      in db
        getGroupEntriesData
        getAdjacentGroupEntries
        deleteRelationToGroupAndItsEntities
          including that can roll back at end, after deeply nested (or not) work, and all the data is still there
          then re-do w/o that rollback/err, and the data is all gone
        renumberGroupSortingIndexes
        getGroupEntryCount
        getGroupEntryCombinedCount_nonRecursive
        getEntityInAGroupData & the 3 just after it
        getGroupEntryObjects
        getSortedAttributes' added return value (total #)
        rtg.getClassId that inner recursion part
        in textui.showmorechoices, the 'var index = -1' and its uses?
    db testing improvements
      write tests. cmt others so they can run fast during this
      in db tests, try mocks & over time make tests run faster, starting w/ slowest now? OR get to a demo-able state first!!
    .
    date precision ?
      for example see where cmt says 
          // Fill in the date w/ "blank" information for whatever detail the user didn't provide.
          // But why should the UI be doing that? Messy.
          validDateStr += dateFormat.format(0).substring(validDateStr.length())
      ...in textui.scala, in its getvalidondate in getAttributeValidAndObservedDatesFromUser.
    .
    in general, make knowledge about anything (like whether groups can be of mixed classes, constraints on that, and what it means) kept in one place only!
      consolidate pgsqldbtests that do things repeatedly like w/ validOnDate or observedDate, or other duplicate code?
      
      where pgsqldbtest has create* methods, move their assertions into the callers for consistency? (unless callers call too much; or just do it in one of the callers).
    .
    convert strings to constants (see enums here elsewhere? what's scala best practice?)
      like "relation"
      see enum in code revu cklist?
    .
    fix the bad smells, especially 'large class' and 'switch statements' (fowler) ?
      and the fact that the db tests call into the model classes' tests (Entity...; circular): matters?
    .
    move some types to their own tables
      especially relationtype!
      
      probably first should see how it does as is, & whether it's more valuable as is. Eg, if attrTypes really should be entities and treated as such because they themselves have attributes & relations...?
    .
    move the notion of a group's class from being stored in the 1st entity in a group, to being stored in a group, and if the group.class is NULL it means mixed are not allowed? 
      is this a better tradeoff? space vs. speed?
      does it simplify the code & the logic?
    .
    find best way to auto-test the controller? 
      or, is lowest cost/benefit to just test interactively since it changes a lot & is used a lot,  & all new mods can be tested carefully w/ breakpoints?
    .
    start tracking test coverage
      & any other metrics?
    .
    in various places the code says ".get" w/o cking for None, because it should never be there & if so it's a dat aproblem.
      but in those places could we do something other than crash if it is None (i.e., a data
    .
    instead of duplicating code like this, abstract it, avoid repetition:
      current example:
        val response: Option[Int] = ui.askWhich(None, choices.toArray, Array[String](), includeEscChoice = false, Some("^C to quit"))
        if (response != None && response.get != 0) {
          val answer = response.get
          // None means user hit ESC (or 0, though not shown) to get out
          answer match {
        .
      .
    .
    use scala's ability to abstract things, and combine the model classes (Entity...) into something that shares code instead of dups code?
    
    put something in db.createDefaultData that does a cleanup (not rollback but destroy...) if there is an exception?
      so that errors during it won't results in a half-created system for users?
      when??? wait for a problem?
    .
    put in many tests around the DB?
      purpose: so if someone ports it, we know whether they got everything and did it right, integrity-wise and anything else we can think of?
      
      constraints etc
      
      & test the xaction stuff in deleteObjects method
      
      AND for how they're called from controller? (esp delete methods?)
    .
    ?: have entity/reltype deletion logic 1st show the user what will be deleted with it (a count? lets them go to those?)
      for rel type, includes the relations using it (so showed in ui: really gone? if not what should UI have shown?)
        or is this alr handled in the db? what's lowest good level 4 it?
      for entity, what about other entities' attributes that use it as a type?
    .
    places in the code that say "idea", like where db refers to model layer classes (such as Entity).
    
    to simplify menu code, make a new askWhich method w/ dif't parms &/or return code?
      maybe put off until i have a lot2do there otherwise?  
      idea
        the caller builds & passes in a hashtable, where keys are the prompts, and values are the code calls to run
        
        the askW method returns the prompt (key) for the one chosen, however it does it (in this case, doing the same as it does, but returning not the # but the prompt.
        
        the caller then simply runs the value that goes w/ the key
      pros/cons
        rewrite
        will it be clearer/easier to use & read & maintain?
        how long take?
      to do
        make a clone of askwhich, make a test method that calls it (like any test method we alr have?), and make sure it runs the code
          a very simple one at first
        then convert one of the existing menus to use that
        try it for a while: any more auto-testing that makes sense for this?
        if like it, conver the others
    .
    review the code for cleanup/simplification:
      esp: can controller be org'd betr
        it's getting too complicated (maybe less so now after Mon Nov 25 12:19:55 MST 2013?)
          one set of ideas was: have the controlr class as now, which contains (or just in same file?) these classes:
            all in a separate control pkg?
            
            contrlr class has itself & all the shared stuff prob'ly including hte big pick list fn.
            mainmenu--as noted on that fn
            attrlistmenu
              break it up? separate file w/ various methods or no matter all ide-navigable anyway?
              incl attreditmenu prob'ly.
            .
            for details, see the %%'s I removed in the commit of ~Mon Nov 25 12:19:14 MST 2013
              except some minor commented parts are already done, about passing entities between functions instead of global vars.
        
        ck for side effects in every method, who calls it, and if the side-effects can be delayed (at least setting the cur't entity!--put that under betr control).
          like listentities and createentity and callers of setCur'tEntity (can it be a val instead or something cleaner?)
        
        can vars be vals, and each thing just gets returned info
        maybe move some code out into a dif't class & add tests
          or w/in that same class
        ck refactoring book for smells/ideas?
          like shotgun surgery
          long method
          things w/o tests
          side effects
        .
      .
      same stuff for textui?
      then put stuff in code revu so it doesnt' get worse
        like tock for those smells? or is alr there?
      .
    .
    try the fsc "-Xlint                         Enable recommended additional warnings."  option?
    
    look into the comment at the end of 
      "getAttrCount" should "work in all circumstances"
    ...in psqldt.  Prob'ly start by seeing what jdbc and pgsql are doing there, what it means?
    
    simplify PSQLD..getSortedAttributes so ij can analyze/ck it.
    
    eliminate idwrapper and comments around editAttribute in contrlr & entity?
    
    run the intellij options off Analy<z>e menu & see what's to learn?
    
    remove directionality stuff from attr, reltype, db, psqld, controller, ui?
      & idwrapper from attr
      & unused methods from entity?
      OR is "is next to" an example of nondir, so would want to keep it (is nondir the things that go both ways identically/equally?)
      
      in psqld.createRElationType:
            // put in checks on the 2nd,3rd parms?, so 2nd requires a nonempty, depending on value of 3rd.
            // and similarly elsewhere? (like in the interface so alw done, or what?)
    .
    convert the DataHolder classes to have all vals?  (immutability and all that)
    
    clean up the types where perhaps there are needless T's, like in Controller.getStringAttributeTextFromUser and similar, and their  callers.
    
    combine get*AttributeData (eg getTextAttributeData) and all similar methods in psqld, w/ passing in dif'ces as parms?
    
    break up psqld class' big methods.
    
    in controller: //idea: change this to actually get an "OM_NonexistentEntityException" or such, not text, so it works
      // when we have multiple databases that might not throw the same string!
      if (e.toString().indexOf("does not exist in database.") != -1) {
    .
    idea: combine? or make these sections use scala's functional features better/cleaner/concise.   easier 2 maintain also?
      controller methods like getInfoAndCreateAttribute
    .
    do this the right way (after ready to start doing demos/cf?): allow names to include semicolons, proper escaping 4 all field
      We have a check now to prevent, for security?, but what about text that contains semicolons / files? 
      see cmts in current fn db.escapeQuotesEtc
      see for example, the more info in (& be4...) 
        file:///usr/share/doc/postgresql-doc-9.1/html/sql-syntax-lexical.html#SQL-SYNTAX-BIT-STRINGS
    .
    can controller.getQuantityAttributeDataFromUser and the other 2 like it be combined cleanly?:
      and the others after that, like getQuantityAttributeTypeIdFromUser etc?
    .
    what makes it most easily testable/maintainable?
    remove mDB from Controller (and textui), and it is only in the model layer (RelationType ...).
      how enforce this?
    put "the existing layer of objects which have mDB as a member variable, such as Relation, Entity, TextAttribute" etc into a 'model' package?
    
    have a ui package?
    where put othr stuff, package-wise? or don't bother.
    
    consider assigning a better default to the sorting_index when putting an entity (or subgroup) in a group (because now the controller sorts it out by renumbering, when they are all 0 or such).  Here are some earlier thoughts on that:
      // BUT%%, what if it's a dup/collision? should have logic in the called method to deal with that, so this parm is a suggestion (doc'd so?)?
      //OR%%, callers can always specify the one they want, and if it doesn't work also call the other new methods that controller uses in the quick grp menu,
      //and if the here-called db method (which doesn't know the desired order) finds a problem, it can call one of those simple methods to find an
      // unused id, going in the up direction w/ a simple order and limit... (cmted accordingly)?
    
  .
  user experience/use cases/ease/UI:
    see ui & experience elsewhere
    
    can it do 'lifestreams'?: find docs by date saved?
      just a query right?
      what is that UI like? can get a demo or something?
      but it's all about convenience?
    .
    to share ht/vt route changes, more easily than now? save a word doc fr word w/o extra work: total ease fo use (not switch to some other app & find things...).  compared to online shared docs?
    
    make it so one can (on any platform?) just press a button and it puts the thing they're working on into this system.
      no more files/directories? how integrate w/ everything, make it ever more simple?
    .
    can the help system/docs be built-in, so it guides them as things change?
    ppl don't want to read to learn to use the system...including even on-screen? make it that easy?
    
    if we ever do this:
      The "System": could later have a system id, keys, admin contact?, creation date. Or maybe this will instead just be a special table in the system w/ an entity ID.  Stubbing it here for now.
          thus, the "create one" entitymenu or mainmenu's condition would change, so it shows 'create me' and **--> things even if it's there
          (automatically made? create a task 4 this?)
      ...then we should change the prompt when starting up w/ an empty db to suggest creating *that* first, OR adj it so the prompts come up even if that one is there (is it hidden)?
    ...and maybe we should do that as a btter place to store the default entity anyway? (sometime)
    
    easier to navigate if the letter for each menu option is selected from that name (start w/ 1st letter and do caseless matches on the available chars, removing each one as used, and if all are used, just taking the 1st letter in list as we do now)?
    
    searching: should ctrlr.searchForExistingEntity have some kind of change to the db.checkForBadSql so it allows regex type things? how make it safe? see debt note re that elsewhere alr & combine them.
  .
  make my customization to jline's UnixTerminal class method readVirtualKey a contribution/merge to upstream on github?
    which one? jline2? how know which is "right" one? the busiest/most contribs? original author or?
    then see what my stuff does to the tests
      & what it should do....
    and simplify by making setTerminal possible?
    and make more of his members protected so I wouldn't have had to copy them into my class? does it simplify enuf?
    but see other jline poss customization(s?) below
    after it's in the upstream, I've converted to using it, and it's well tested:
      can remove jlinebindings.properties from proj (in the top dir) and the cmt re it in INSTALLING
  if I DON'T: then see the TODO, and the things I just commented out in JlineUnixTerminalSupportingEscKey.java.
  .
  update the scalatest docs for mockito w/ om's example use?
    but does it work w/ newer IJ?
  .
  integrate org (spreadsheet) notes re 'om' into this big todo list/plan
    or wait until I can put them into om itself?
    and browser bookmarks in dif't accts present/past?
  .
  'documents' enhancements:
    make it so one can view them! fires up some editor or something, or at least copies out & gives the path?
      how determine viewers per mime type in a portable way?
      postgres wiki on large objects (https://wiki.postgresql.org/wiki/BinaryFilesInDB) suggests using:
        http://en.wikipedia.org/wiki/Internet_media_type
        
      or on debian at least?
      then on other platforms, or make it easy to insert?
      contains
        encoding or just for text?
        mac forks or...? 
        sha256sum (or other type? ck wikip re tradeoffs w/ smaller shas, or cksum, or md5sum?)
        mime type ? file extension? both?
          how get it in a plaf-indep way?
          how confirm?: use a viewer 4 that type?
          for debian, more info at https://wiki.debian.org/MIME 
        binary contents
      .
    
    
    worth adding this? had better since not doing tests I thought of usually leaves regret?:  make sure we verify file upload against *local* file *after* upload?
      test for that? tweak local file? (prob'ly good....'
        could see Entity.addFileAttribute
        
        ie get md5 from svr (was alr verified so use the saved one; or get it from the doc itself again like the other test?), AND get it from the local file again (and size?) and tell user: confirmed upload: if your file is still good on disk, it certainly appears good in the server (matching).
        
        BUT how not make this over-redundant w/ whatever else we're already cking?
          what's too much?
          THE GOAL IS: to make it so that messing w/ the code can't bugger it up in a way that a test won't catch, even if ... it's an unexpected kind of change?
          
          but to what else does this apply, that has higher value than being fixated on documents? (disk cksums on the whole system, in & out of OM, like w/ fancy filesystems and that postgres checksum feature?)
            still, how keep the code from breaking in maintenance w/o our knowing, or is that the most impt question?
          .
      .
    change the size/md5hash setting/checking to happen purely on the server (i.e., a malicious client couldn't mess it up)--it always reports right?
      in db.verifyFileAttributeContentIntegrity as of Mon Jan 13 16:23:53 MST 2014
    .
    when classes working well & *code*, have a way that 'check checksums' on everything in the document class
      see the coment in pgsqldt at "idea: ck cksum"
      (same for anything in the system? how long can the string be? or treat docs dif'tly.
      OR, is this internally/alr provided by pgsql in text/blob/whatever type(s)?
        see cmt re this in INSTALLING for prior to installation of postgresql.
      .
    .
    probably need to do now, and change user warning accordingly and test that manually:  haven't tested *exactly* how large a file can be in OM. pgsql docs say large objects up to 2GB. But there should be some (infreqent?) test for that, so we know exactly what works?
    
    what about changes? like, version control of them? diffs...?
  .
  create online help
    OR is it better just to make it more clear so no help needed? or documentation/docs or getting started helps?
    
    maybe jline use can ck for F1, and when detected, invoke a callback?
    the callback (or something in OM) can simply display the help text for a given situation
    
    In case of date entry, this could be used to greatly simplify the prompts?
    
    And for adding new attribute types, what to do with (ignore...) the class's defining entity? And in that one case where the screen text doesn't really match, can be improved? (now when creating an entity it  says something about "or attribute type...", but that doesn't apply if it's the class' defining entity.
    
    In other cases there can be a default help ("read the screen")?
  .
  i18n/unicode/localization stuff:
    change db setup to use bytea type instead of text/char? (so that we don't ever have to care about the db locale?)
      if so, can conversion be clean for me & whoever, to not mess anything up?: do backup, and be4/after dumps to compare somehow, or how just do it safely....?
        but what does the db locale setting do for us really? is it safe to completely ignore it except at the client?
      .
    .
    need to learn about this
    
    include the web site?
    when done
      create links across top of the web site for langs
  .
  android/ios versions/gui
    html5?
    see eric pabst's android/scala work,
    make mockups of a gui from what I have now (controller)
    ask ben 4 design ideas/feedback (pay?): base future plans on that?
    hire eric 4 android while i do ios? or i do w/ his or other tools?
      or I do in a x-platform some tool thing?
    .
  .
  windows version? or what platform next? if windows:
    jline as noted elsewhere: push upstream or handle whatever that issue was
    handles files w/ spaces in path?
  .
  'sorting' notes
    see elsewhere also
    
    Make it possible/easy(?) to sort the results of getSortedAttributes (ie, as called by entityMenu to show the list of rels&c), possibly by sorting by name & letting them put #'s by the names, w/ a query something like this?:
      select name from entity e, relation r where r.entity_id_1=-9223372036854775807 and r.entity_id_2 = e.id order by name;
    ...or by adding a "sorting" kind of field to each attribute table, so the user can choose an option to show all those attrs (or all those for a type?) in a list, select up or down until the list is as desired, then gen some #'s w/in that group to put in that column, and update the columns w/ those, and order by that in the future (or as a default?).  IF EVEN NEEDED AT ALL, GIVEN that by then we will ahve different logic for names (context-driven, so would have to be off the 'preferred'~ name, if by name), and hopefully by then the ability to specify sorting for classes/groups/queries/whatever that comes to be by then.  IN THE MEANTIME, just live w/ it, it's OK.
  .
  add logging now in the absence of undo feature, so I can see what happened and put data back if needed?
    or, just rely on the scrollback buffer4now?
    see elsewhere re logs or such
  .
  make it show entities in a group with AND without AND both 'archived'/'archiving' stuff or not (useful?)?
    use cases????
    when do, ideas
      flags in db on groups (& later, entities?): 'show archived' & 'show normal' (w/ defaults)
      make these flags settable from grp (or entity?) menu(s?P)
      all queries (that now have 'archiv' in them) use these flags
      display distinguishes archived things from non-arch.
        "arch'd <date>" at beg, or end (but alw showing)?
      .
    .
  .
  add ability to automatically survey lists or data in general and find trends/patterns/correlations
    like co's do w/ "big data" now
    e.g., to help ID connections in how one feels health-wise, given dietary & activity variations, etc.
    see more elsewhere re econ/research/mentoring etc: to optimize all those.
    a good place to try out AI concepts?
  .
  for customer support/helps on forums/such
    use runtime aspects switching on/off for logging?
  .
  make OM track web site policy changes, like places that have that onerous license clause that you have to be aware of it?
    data includes
      url
      http content
      "impt string(s?)" as defined by the user
        probably like "updated: October 2012"
      the text content, so easy to diff/tell what changed if headers 
        by copying it in man'ly, or using some html renderer 4 it?
      .
      code to 
        retrieve it for all such sites (every 3 days?)
        notify & show diffs if something changed?
      .
    .
  .
  improve scala style/knowledge/usage!
  .
  could I use om to supervise the work or mentor a large group, including all the IT systems they need?
    by objects/classes/etc, and sharing/trust networks...?
    ex: managing drug testing for 1000's of empls, by cking hair samples, and closer testing if warranted.
  .
  need a 'public om' ??:
    create a big shared OM instance (integrable w/ my/others' personal?), that can have things like all public stuff, whatever growth
      where: amazon or?  multiple? alw have my own b/u copy somewhere else x3.
    .
    what login:none?
    handle concurrency better!
    sandbox
    for evals/demos too
    what top level menu?:
      see what wikip has 4 menus?
      could be:
        earth
          people
            by genealogy as FS.org
            groups
              all kinds, whatever is useful to anyone
          physical features
            continents
            oceans
            other systems
              atmospheric, etc
          past
          possible future
    wikimedia features?
  .
  use OM for social networking (or: can store OM code in OM??)
    e.g. to share code and networks of contributors
      ie collab tool, see more on that elsewhere
    make it bootstrappable though
      if so, at what point in process?
      (see github note)
    .
  .
  can every entity's display ('GUI'!!) be beautified, via the standard gui, or persons' contextual  variations on it whatever, into something like a beautiful web page, so it all meets the vision of the original web, and has the same communicative power, and the same control and flexibility, both at the author level and at the 
    ie devs say how they want it to look w/in the model, and dif't contexts of users in the model (incl their viewer)
      w/ ultimate flexibility
    AND w/ that, the viewer can decide which client/context to use! (text, flash, whatever?)
    OR we just define things, and make hte viewer beautify more & more by showing the *real* beauty of things! our world!
      because the more we model it, the more it's like reality, and our real world is indeed beautiful (depending on which parts you look at, but that's reality for you, expressed: it's whatever you seek; and if one seeks beautiful things one finds it (AofF 13), all expressed as: truth, and goodness.  Representations of the real world. Beauty, integrated in the model, all "one" (the O in OM), because they are real. Truth.  All truth, beauty: a model. One, beautiful, expression (crudely called: onemodel) of truth and goodness.
      
      this is not worship of onemodel, or self, or an idea, or set of ideas: but worship of God, and an expression of the truth and beauty we can find when we seek him: as accurately and completely and beautifully as our abilities and circumstances and priorities, with His blessings, can allow.
    .
    idea was while looking up temple schedule info
  .
  security notes
    (see also security sectn under 'documentation')
    
    review best practices
    whitelist what can go into the database, at DB layer?
    never execute user-entered code? key exceptions protected?
    
    confirm that one user can't see the fileattributecontents of another user? mbe discovered docs below are enough:
      These 2 urls seem to conflict on that point, the safe-sounding one is likely newer:
        http://www.postgresql.org/docs/9.1/interactive/largeobjects.html
          or: file:///usr/share/doc/postgresql-doc-9.1/html/lo-implementation.html
        ...says it's ok?: search for 'grant' ...
        THIS ONE MAKES IT LOOK GOOD NOW:
          file:///usr/share/doc/postgresql-doc-9.1/html/runtime-config-compatible.html#GUC-LO-COMPAT-PRIVILEGES
        .
        http://jdbc.postgresql.org/documentation/80/binary-data.html
          search for 'security'
        https://wiki.postgresql.org/wiki/BinaryFilesInDB
          search for '8.4'
    .
    should one similarly start doing my own dns to key sites, dns-sec?, and use https or what-have-you or how are they going to keep this straight in the future? ck cost/benefit using om.
    
    relates also to 'monetized sharing of data' section
    
    irrevocably flag personal data (w/ hashes like git/bitkeeper?) with license info so if the security fails it is still clear what was authorized and what is wrongl, for those w/ a conscience or who want to sue ?  
      what few easy choices recommended?
      
      include some kind of personal DRM? can't be seen w/o your key, only in memory, and is never written, but good luck getting it out if you forget: better share w/ a few people under their own keys, and write it down for yourself.
      
      (slashdot article head l seen Sat Oct 12 12:41:06 MDT 2013 "would you secure personal data w/ drm tools?"
      
      make it so only those you define can see data, due to encr and public/private keys? (as long as you trust them not to share it or accept the risk that they can, but watermarked so you know who did?)
      
      see "trust networks" re more
    poss database sql injection if something saved there?
      so what else to escape besides single-ticks? read up on this for pgsql, or in the more general case?
      And maybe move all the pgsqld calls like to *.exec* into *separate* methods that I *always* have to call, which does the checkForBadSql call itself, so I can't forget in the future easily?
    .
    read re
        To connect to a particular database, a user must not only pass the pg_hba.conf checks, but must have the CONNECT privilege for the database. If you wish to restrict which users can connect to which databases, it's usually easier to control this by granting/revoking CONNECT privilege than to put the rules into pg_hba.conf entries.
    crit
      user only sees own stuff
      local auth only; no pwd needed
      db name like 'om-<username>', cli could specify otherwise, later?
    .
    indvidual users: who can see what? owner/author/viewer? groups, or...?  **collect requirements.
    jdbc to server layer?--or other issues related to making sure the postgresql host authentication is what we want?: 
        see jdbc part of postgresql documentation on authentication methods it accepts, & admin guide to configure them?
    .
    owner/author/viewer?
    groups (as def'd w/in om) as those
    .
    tight as a drum, perfect because simple?
      relies on os or something, instead of any code of mine?
    .
    who audits the design?
    
    MAYBE: we could write security in a way that lets you have your secure data be in a local DB, and non-secure shared stuff in a shared DB w/ some open license. That way we don't have to write any security code? Note this 4 future?
      this would have the advantage of making distributed models available
      
      it would have the disadvantage of making it less convenient to get to secure stuff via my palm vii? (since security is now handled at the web server/host level, rather than inside the om system)
      
      maybe we could get the best of both by letting a user connect to a public host, and provide connection info at runtime to the server which is only kept in memory and not given to other users; or somehow based on some secure transient info the host can auto-connect to a separate secure system? Would like suggestions here. Maybe we should define those requirements better, after reviewing our other existing requirements. How best to serve a large community (scaling to global, or not yet?)?? Make distributed work well? graceful when a dependent remote system is down? handled redundant systems so that they can replicate among themselves and you don't care if one goes down just use another?
      
      Maybe we have separate requirements here: security and redundancy and distributed storage/processing? Any others to design in now? Then go looking for good examples or how we'd design or borrow ideas for this ourselves.
    
    .
  
  .
  ways to share lists of shared work like bugs, 'bug tracker', wiki, task tracker, todos, feature plans planned features, support issues, whatever?:
    family todo list by area/urgency/value (so we can work together and not wonder how to say we need to do something or how to remind, see what we'll both work on), shopping lists, ....
    
    have an entity that we update to each other, share somehow
    
    OR have a messages thing, that go to a specific person or shared queue, and these are transmitted, as the peer-to-peer thing would allow, sort of like the shared linkedin-like service.
    
    similarly it could put out a general message looking for something
      like
        who has this model appliance and an owners' manual?
        savers/DI/ebay: I want to get rid of or get this, who has?
        
        how far it goes or to which systems it goes depends on the value and what people want to receive in their own systems
          or via shared systems
          somehow it forward it on if not found at a particular level
          w/ a shared object space it (like the entity for that model appliance, or type of widget/whatnot), it could be automated!
          
          confidentiality possibile similar to the linkedin like svc!
          
          it could be automated to find the lowest-cost exchange, to include shipping and the profit each expects.
          even has an auto-negotiation algorithm!!
            could be done in a way to not game the system
            or doesn't matter: just gets what ppl want, does what they want
            goal-seeker for highest-profit xaction to ppl? 
          .
        .
      THAT IS A MARKETPLACE: people can MAKE $? OR SAVE IT FOR OTHERS AND MAKE THEM VERY EFFICIENT?
        could it cover *everything* ?
      .
    .
  .
  'documentation'/docs/training?:
    tell them a pgsql cmd to make backups/restore?
      does it work for the files too?
      (is mentioned in INSTALLING, cb imrpoved)
    .
    tell users to make sure they enlarge the scrollback buffer i ncase hit an errant keystroke? 
      &/or log stuff? log all the output & rotate it somehow?
    .
    make backups: errors in the program might mess up your data (though we aren't aware of any such errors as of this writing), and you have no recourse other than to fix it or restore from an earlier copy of the data.  It is also important to test to make sure you *can* successfully restore and use the data.
    
    form/place
      IN om, sharable? and/or on web site (to get started)?
    about
      vision
      strengths
      weaknesses/limitations
      future
    basics
      read the screen
      find good examples
        how best 2 get started w/ data like mine or learned from others?
      .
      #1: keep like things together
      share what you learn (if it is truly public)
        see security section below
      model things like the real world: what they *are*
        (how did that help me w/ things like vsgeers or other things i actually model?)
    nonobvious quirks
    about modeling
      #1: keep like things together
    .
    misc
      files can't be stored if > 2GB.
      
      concept for training in it, or what to tell users who are getting started
        the initial things to add? (or auto-create or be able to import those from others?)
        can simply do these from the UI, so none req'd?
        text attributes are rare: (almost?) always it should be a relationship to an entity instead
          eg, instead of a text attribute on an entity saying it's manufacturer is "samsung", it would be a relationship between the entity and samsung: was made by/made
        .
      .
      add note on web site or here smwhr re why not logical assertions? (no inheritance; they may represent obj's but it seems you need a taxonomy first--this model is the taxonomy; names built-in, but names are not data, just a name. objects are the data, which may have many names. I think they richer, more real representations when full obj's & relats, & therefore can be processed more effectively, realistically, & thus we can think better & get better results.
  
      post our archives under the document list, linked to the regular archive page. Also could link to the email messages I saved from before--our earlier digests, too.
        later on (put this w/ other onemodel todo notes & start consulting them) get a bugtracking system & post our source in a tarball somewhere. And get us an IRC channel to talk on?
      .
      when adding new features, document the use case/story/scenario that drives it, so ppl know what it is for? How do this documentation? 
      How do system documetnation in general?
      
      Indicate? (or not worth it since temporary) that the group under .system* for classes is optional: just a convenience for human finding, until a query from the db replaces that as is alr done w/in the code.
    .
    security
      in user docs/hints/internalInstrucs of OM, strongly recommend openbsd if they really want their data to be secure. & have own dns? or use OM for it...? or use om w/ encryption/auth/non-repud internally, so you ALWAYS know who you're connecting to & from whom getting data!!!!
      .
      is it truly public? what is wise to share?
        i.e., what could an enemy use against you, like governments (or anyone w/ power) that make life sometimes harder for those w/ whom  they disagree.
        
        can it be used for id theft (i.e., someone sells your house while you're on vacation, or incurs debts/crimes in your name, or wrongly interferes w/ your reputation)?
        
        is it already public anyway?  much is.
        
        From whom do you need to keep it (ssns etc from ID thieves, how keep things from malicious or foolish ppl in highly-funded organizations?: those are different risks in terms of relevant content and ability)?
        
        Some things are simply irrelevant or harmful to others: for example, a personal disagreement in process of being resolved. Or details of personal hygiene.  Images that distract anyone from the full affection they should have for their family (incl future) (i.e., using natural attraction to the body as a promotional tool), or which help someone visualize and become accustomed to performing evil acts, which teach harmful ideas like that people are treated as objects, anything against the golden rule or that is dishonest, or that suggests an individual human is less than important and precious.  Etc.
        
        Or nonpublic info that betrays possible weaknesses that could be used to hurt persons or families (unfortunately that happens), unless the harm of secrecy is greater (cf. "security by obscurity" articles on internet and use sound judgement).
      .
  .
  upgrades: om itself could ck for later ver of jar and ask if they want to get it from github (w/ sumry of changes?) (or from my OM site?)
    HAVE THIS WELL TESTED/WORKING BEFORE THE 1ST USERS COME ON!? 
      do it in a cdo kind of way: not to everyone at once. ?
    .
    and have signature cking whether legit'ly mine (signed w/ private key, OM cks it w/ public one)? 
    and on whether they want yes or to be asked again in a week/month/year/never
    and it helps them inst or is a godo exper anyway.
  .
  an 'enum'/'pick list' type?
    can use consistent text instead, and/or booleans
    wait for more clear use cases
    
    then & decide whether to use classes, but: idea: for each text attribute (or any other attr?) if the ID is in a (specialized or general for all attr types? other fields?) pick list/enum table, then it's used. needs ui supt of course.  And read up on enums in pgsql 1st!

  
  allow storing binary objects/documents larger than the 2GB pgsql large object facility allows?
    But, it would be nice to NOT have to manage storage outside pgsql. Maybe not needed.
    Could consider DATALINK (dif't approach, just a spec though; see references on large objects in postgresql or search).
  .
  create some kind of warning when approaching the maxID value max value for ids sequence limit?
    see 'guid'
    see also notes under 'postgres db usage improvements' elsewhere
    quick&dirty way? (cost/benefit)
      put a limit on sequences, well short of real one, w/ a documented(documentation) way to man'ly override that & consider it a warning
    .
  .
  about 'maturity' models/'mentoring'
    see stuff in my ch calling txt file
    list the areas (phys,soc/emo,phys,sp; others?)
      incl interest, desire, capacity
      or what desire *could* be if influenced? (good & bad)
        this gets into scrs: what insights do they still have4us?
    .
    for a person one desires to serve (starting w/ those closest by default? auto?), could consider these issues for 1) helping them grow towards Christ (i.e., being a complete/perfect person, balanced in the meantime whatever the criteria for that are...?), AND simply doing service for them (ways to delight?) or strengthening relationships:
      desires of their heart,wishes,dreams,whatever
        wants
      position relative to ideal growth steps(?), in all areas of life.
        needs
        (what is good)
      but be careful on all these in case one is wrong: have process checks that verify before offense/harm.
    .
    Then one does not have to communicate intentionally, but can poll or have notices when one being mentored posts critical info that suggests urgency.
      watch/subscribe/rss feed for 
    
    in each, the growth in steps
      sources: 
        ch books re teaching, parent's guide
        childhood educ stuff (charly has info?)
      do they have to come in order?
      to move forward might depend on
        motivation
          how's the relationship to motivate: trust? (see 'trust networks')
          see "influencer" &c
          faith....desire
        skills
          obedience
          practice
            intentional, overlearning, whatever
      steps could include:
        phys
        mental
        sp
        soc/emo
        
    .
    notes from org
      make it automate teaching/mentoring for success
      
      define success (follow God, learning & service; but let anyone quantify it by max human life/quality gained etc, change their assumptions or whatever to see it their way)
      
      balance in life: dif't areas etc
      Then w/ it as a guide, work on things in a rotation based on priority/growth/maintenance/roles/vsgeers, where the rotation is not 
      necessarily based on a day (but could be): find whatever is most effective. Put it in lifehacker? write articles there or how make
      money like they do myself, based on improving self/things? & SELLING SOMETHING: MAYBE MY OWN MODELS/WORK!? OR HOST
      AN EXCHANGE OF THEM W/ AD-BASED?
    .
    HOW maturity models WORK:
      concept in the large:
        id areas, dev't phases w/in those w/ prereqs to loop you back in thought, and see how best to get from one to the next, or to eval self or s.o. being mentored and see what the relationship or the individual need next to have the most joy & give glory to God.
        
        includes eval/noting/tracking/planning w/ the helping
        
        to what extent is it good to see/view/know what one lacks or what the next phases/steps are?
          can help to know it by thinking re/trying them (but maybe that's just the beginning when one IS ready).
            but by having a bunch of things in mind you can ponder/think/understand/improve: maybe that's just done by having multiple things in progress, some on the shelf in the early stage of learning.
          .
          can be a problem to know if
            it's a bad idea, you don't realize it, and don't want to be made a fool to everyone at once, but learn about it w/ one person and then change it. Or not share things that could be wrong, not yet well vetted, and so would mislead someone. 
            
            so: have right caveats on things. Don't assume mentor is always right: how manage that? just let mentee decide or....
            
            see security/privacy issues elsewhere: a person might misunderstand, be hurt, react badly: there are many things we don't trust to those who aren't trained/trusted w/ that thing, even if they do know about it. Or some knowledge that is not good for someone to have before adulthood (porn), etc. etc?
        .
      .
      process in the small?
        understand something
          visualize/think, hear, read, or see etc
        do it
        write the steps
        make it consistently reproducible by oneself
        then by others
        then think re what the prereqs and expected outcomes are (bigger-picture test, when not to do)
        then put those prereqs as prior steps or whatever to fit it into the big picture of growth/maturity models
        integrate it w/ all other parts of life in the 'ideal'
        teach it, help others (covey steps, incl "finding your voice")
        automate, intentional practice, or overlearning etc etc at some point?
        at what point find ways to eliminate, delegate things/steps/work?
          priorities & real goals or better ways or dif't probabilities of success of dif't strategies vs. their risk (c/b/r)etc can suggest eliminating something or reorging them/postponing, or changed assumptions....
          
          see process design/BPR, covey, other bus/effectiveness stuff that's related?
        .
      .
      consider levels for everything not just whether
        see article I bookmarked about software engineering journeyman/master/etc
    .
    thinking of everything in cost/benefit, in life (as a step for dif't areas) and when using the maturity model itself.
    
    in recording learnings about or w/in the maturity model (maybe ONLY within), how distinguish between hypotheses, theory, and "laws" (things w/ very high confidence)?
      for related thots, see elsewhere on confidence, rounding, significant digits, levels, confidence curves (like bell curve but based on one's guesses or other info?)?, etc?
    .
    physical health
      hygiene
        including efficiency
      nutrition
      exc
    .
    ideals
      comparing to, deciding what are next needs
      or if one goes back/regresses what to do next
      diagnosing problems, knowing how to address best
    .
    what is the right % of what kinds of virtue in indivs & populations, that enable what kinds of freedom and thus the appropriate laws?
      types?: family (chastity, support, ...?), honesty, golden rule, work, 10 commandments or noahide-like, etc?
      
      make a model, apply it to history & see if it's predictive
      if quantifiable, apply to int'l and domestic policy, such as who you let in where?
    .
  .
  see notes re 'fuzzy sets' from my old om notes, now in below jnl.
    also see elsewhere re 'uncertainty'
  .
  use jpa/hibernate/ibatis or such? probably not worth the trouble, now
  
  put in some kind of reread before update in the same transaction so if it's changed since the last read it ends xactn, & tells user & lets them decide (then repeats that).
  
  could see "adding worldviews with certainty levels" from old jnl notes below
  make some rel types (fundamental ones like 'has-a', others...?) built in?
    can function w/o them? why would ppl have to create them? 
  .
  do we need garbage collection, for entities or other things not linked anywhere?
    1st query & see what there is & what impact this has on the system (can do low-priority queries?)
    automatic like git, allows man'l?
    
    old note:       want a job to find all unitID's and attrType ID's in teh ModelObject table that were once used as unit/attrType on quantity objects but are now orphaned (unused anywhere for that)? Is it practical to identify those in anywayso I even know that's what they were?
    
    and see how happened/prevent? or should?
  .
  see docs/requir.txt
  how to organize all the world's disparate data, so it's out there and can be more ordered for research, use by many?
    bulk import stuff from many places?
    just building/sharing as indivs as it grows?
  .
  understand/fix all warnings from mvn builds
  
  look into using graph (& other?) databases like neo4j etc. Understand well their pros/cons, play w/ them, know when would be good, vs not?
    or reddis? aggregates as documents? ravendb? etc re database stuff avail now?
  .
  UIs
    see elsewhere
    rest
    browser
    sms/ussd?
    
    cartoon-like displays (or comic, animation), or whatever visual/graphical representation can be produced based on the data or pictures, automatically built at runtime by the system (ie not usually stored?).
      we discussed or mentioned this on the old mailing list, no?
      no patent, we have prior discussions on this, = prior art?: see in my archives or archive.org searching for 'cartoon' or 'animat':
        om-old-SAVING-for-history-like-showing-prior-art-whatever/onemodel.org-maillist--fullRawNewArchive-see-historical-name-in-git-before-removing.txt
        see also the README, and whatever it drew from
          and proj/om-sav/README-older-that-mentions-animat
        .
      .
    .
  .
  structure OM to allow a market for code & plugins 2 act on the data?  OSS or not, & lic we have now allows it?
    use cases
      run fancy queries
      create fancy objects
      do fancy operations
      certain markets moreso?
    .
  .
  try my ideas of making things bulletproof & generally much better tested? or?
    every layer solid so others can work better (problem of multiplying failure rates across layers)
    noise generator hits it hard, cks for crashes: crashme 4 linux, others?
  .
  can retrieve all old files from git if needed?
    make a new clone of it somewhere tmp
    read them all
    confirm jline in .m2
    delete the jline jar: have xtra saved?
  .
  try 'samehost' (no quotes!) instead of 127.0.0.1/32 in postgresql config file,  & doc it if works / is better?
  
  how handle uncertainty?
    esp w/ quantity attrs: but others too?
    can be expr as:
      % confidence
      +/1
      certainty curve
      (and significant digits ?)
    does the existing model already let you do all this, so no problem, ppl just need an example?
  medical/research market/features: make it help doctors/medical practitioners/patients diagnose obscure things / diagnosis
    contains hunches?  research in progress? helps perform/confirm/refute studies, or at least make their usefulness more visible at the right time to the right people?
    like 'malabsorption': see wikipedia: how to put something into the body, or grab a cell, or scan or something, that can quickly determine total state of health, where health has a complete definition (adjustable per person?) no matter how complex, with all cellular molecules checked in a statistically valid way, that are what they should be (not some kind of $-likely side test, ie blood cerum vs. cellular, dif't parts of body: COMPLETE definition as far as able to determine), like eating an apple you don't have to know what's in it.
      just start somewhere, and make the best med knowledge in there, properly corroborated w/ trust networks/levels &c, and diagnostics tools, until we get to that point.
      
      and the system auto-updates confidence levels of everything, when someone's credibility changes!
  .
  Put in something that checks om's own internal integrity, data format readability
    see also 'check checksums'
    
    for all files it stores (by storing a checksum of it to compare) & mark which may be getting corruptedband need to get from backup (or the checksum is wrong). Also somehow checks all other data like the db integrity itself? Can the code be stored in it, and/or other system backups?, then back it up separately, and check the integrity of  everything as you do? What best long-term plan give this fallen world but terrestrial/celestial goals?
   
     Might also need to schedule reminders to check for all formats and make sure can still be read/displayed, or if there is a need to convert them to new formats. for old ones, save the code or something? What best?
   
  make a copy of the discussion summaries from mail archive, by month, for the list, & save it in my backups? (do I still have too much data saved at pair?)
  
  GUID/UUID management
    see related, elsewhere

    how relate this to ID needs for sharing?
    
    do this, and update the code that comments (quoted) about the need.  Make it so "the thing to get IDs will re-use deleted ones and wrap around the set of #'s" and/or warn much better when rung out of IDs?
    
    we can hold as many rows per table as very roughly?  18 * 10^18
    ...but should confirm that.
      when matters to check if we're close, on any customer's system?
    .
  .
  how use gamification in OM?
  
  'postgres db usage improvements'
    put something in that traps/warns us when approaching model.getMaxIDValue()
      test first--how should it behave? what could go wrong? Just make it a notice, for now, when getting close?? to whom?
      could go in the model.createObject code? or in the database? where makes most sense?
      synchronize it so it would handle a multiuser situation?
    .
    check out the postgresql "routine database maintenance tasks" page, & what I should be regularly doing?:
         file:///usr/doc/postgresql-doc/html/maintenance.html
         
    read through postgres table maint link (mozilla favorite) & start doing it?
    
    add code to check for sql warnings anytime I do anything that could raise them (see jdbc tutorial or documentation?) 
    
    make the sequence col of ModelObject (& any other integrity thing?) have a default value and constraint to disallow nulls (also disallow null on name col).
    
  .
  unlikely or very low priority or ideas w/ unknown, prob'ly low priority
    make outline import handle larger paragraphs as text attributes
      FIRST needs a way to view larger text attributes
      create the attr if longer instead of throwing exc.
      add a parm to the recursive call bool lastLineWasATextAttribute
        defaults to false
        except right after we create one
          so, fails w/ exc if it has a line after it?
          (i.e., pass true there, and next iter thru, if creating a sub-thing, just fails since it's true...?)
        if creating a "sub-" thing on it, and it is true, then throw exc?
          OR?: INSTEAD OF CREATING THE TEXT ATTR DIRECTLY, CREATE A NEW ENTITY W/ SOME TEXT, ADD THE REST IN ITS TEXT ATTR, THEN GO ON AS NORMAL!???
      .
    import/export: possible enhancements
      (show incoming quantity first? limit it?)
      choose from
        override all (limit of how far out in the relations?)
        ask each time
        override none
        decide by date modified
        duplicate everything
    .
    any need to enhance 'import/export' capability (in case I need to go back to spreadsheet? or some adaptation: doesn't have to be exact, just get some data out)?
      OR at first, is just in groups, and exports each entity (if uniform class; what if not?) and makes it a comma-del'd file
        what about non-uniform parts? same, still? non-uniform at end? or same order?
      import similarly could create entities in a group, with those things as attrs (like spreadsheets do, using 1st row as col headers?)
        require certain format, and/or ask a lot of questions?
      .
      make gedcom import/export, and/or "other" import/export--so people can combine systems or abandon this w/ confidence? or is ther any benefit to import/export as sharing tool, vs. the rest api?
        use that import/export to create models that can share w/ others, that they can use to quickly get started, or for demos? 
          at what step will I need this, when getting others on board below?
          integrate that w/ testing somehow or ... what best 4 ppl getting started anyway?
    .
  .
  'trust networks'/trust models that share/receive depending on whom you trust, for what, and corroboration.
    global knowledge based on who trusts who, really.
    http://it.slashdot.org/story/13/10/03/006248/security-after-the-death-of-trust?utm_source=rss1.0mainlinkanon&utm_medium=feed
    business model around this? what would ppl pay for? trust? donate to?
    
    for some use cases, search also for 'trust' elsewhere 
    
    trust/reputation networks (i.e., trust for those that give the reputation: built starting only w/ those ppl trust, and always updated
    
    replace or help w/ DNS because you only get updates from those you have decided to trust?
      see dns hijacking by fax issue in slashdot seen Sat Oct 12 12:44:49 MDT 2013
    
    auto-adds trust ppl to one's circle, like linkedIn, but auto reduces the trust by degrees as distance from personal verification increases?, and increases as the # of trusted people at a certain level personally also verify?

    what to trust/track, what basis?
      data about a person/entity
        cares whether does / remembers the commitment
        
        able to & really does *remember* successfully the commitment (does or follows up w/ info helpfully, if not w/in power, no longer a good idea, whatever)
        
        reports back
        
        actually meets commitments w/ *timeliness*, vs. lateness
          how timely
        .
        takes w/o asking/telling?
        tells truth as known/understood
        uses golden rule (levels)
        sheer competence, by area...?
      .
    .
    could this be used to ship packages also? to carry out commerce? have some kind of barter? track vague 'credits' and could encourage service to those w/ the most of them, incl via the mechanisms elsewhere (cool project, om feature?) for doing the 'most good'.
  .
  'fellow passenger' (in other todos) whom I met on airplane from rome to Atlanta in aug or sept 2000, said could contact Information Library Systems, univ. of N.C., library/info science, w/ U. of VA & Duke--geared to archival & storage of info on a vast scale. he also had fascinating things to say about somebody who influenced Emerson & Thoreau and also the school system where he sends his children (2 daughters?)--many worthwhile ideas on childraising, which he(passenger) had thought & read about, quite a bit.
  .
  get ppl from dif't fields involved (prioritized by contrib or likely usefulness) to make it really useful to them
    like medical, other sci or soc sci research?
    to the Church.. somehow?
  .
  ideas from late 2012, like ways to make education universal and esperanto popular and OM help all to find balance in life and know where/how best to grow next, and FULL EMPLOYMENT.
    see esperanto/eo elsewhere, and mentoring.
    
    note studies that you learn more french in 5 years if you spend the 1st 2 studying eo.  And how much easier than anything else (ie lowest total worldwide effort, to understand each other).
    
    a wiki via OM for/of om? sorting by benefit & future ideals?
    involve esperanto (or gellish english or wikiversity or the like) making it hte best source for that thing, then get other knowledge communicites on board, making it *their* lingua franca, one at a time. like where the best work is done in multiple languages, amking it hard. or where much translation is done like at the UN. Use "influencer", read a lot, & move it forw. as a universal wwiki/om for growth, rust, employment in abalancedways, all at once! and service.  
      What is the best esperanto wikipedia rea now? which titles are longer than english or by how much? grow that superiority? then among its external academic community or how gest to make it snowball? 
      maybe introduce OM 2 the esperanto community first and combine it w/ wikiversity? 
      grow such an area (or all of) in wikiversity first? b
      best courses there, for ___?
      
      subjects?
        int'l law? linguistics? other int'l academic subjects? chemistry?
      machine translation to assist in making/keeping esperanto at its forefront by moving data over always, adding new data to the eo language version first? as a default automated always? fr. all to it, for what subjects? eo itself? & others?  
      
      as an OM default or beginning?
      or make it a busines that can hire *anyone*? (if no minimum wage, especially)
      mentoring expected at all levels "trainee" incl. prisons?
      cab nbe copied
      learn business
      get a plan & prereqs?
    esperanto+om+openTestsGrowthAreas + employment + wikiversity.
    the areas
      employable skills!pay hse 1st?wiki in english or EO or OM
      areas of growth/balance in life
      revenueroles & goals
      acct on up there & backing it
      start writing
      wiki for D & me
      sell ads on our wiki?
    .
  .
  ideas for 'cool projects' cool ideas on their own, or using OM:
    web site to enter priorities and it suggests top ways to donate or serve based on what adds most value (hrs of life, quality of life) (and a similar website for employment or contract work of all kinds), i.e., how to do the 'most good'.
      -or is it a duplicate of findthebest.com (see also itsthisforthat.com) as mentioned here?:   http://news.cnet.com/8301-13577_3-20015971-36.html?part=rss&amp;subj=news&amp;tag=2547-1_3-0-20
      -or just a waste because the gospel is it, or is a way to involve everyone unitedly as far as they wish? “follow whom you will” Or could even the relief agencies of the world still use it?
      -dogood.org?
      -w/ a wiki to discuss how make it betr? Based on a github type proj? Start simple w/ mockups, tests, wicket & go from there?
      -ppl can enter needs, ways to fill them, make services available
      -similar site4employment, contract work?
      -what wojuld the opposition be, and how overcome or...? like someone else doing it wrong, in a way that distracts from good things w/ lots of noise but just isn't good (maybe that's OK, dif't sites attract dif't crowds—but we'd want to have most infl be good infl), changing criteria, ppl adv'ing 4 their charities: have a trust framework?
      -does this rely on OM under, or...?
      -or just pitch it to someone else? or....?
      -multilingual, multiculturally competent?
      -even improvements w/in the site are so tracked?
      .
      compare to redditgift or whatever that ksl.com article about sub for santa guiness paying forward &c
      
      ie people can do good, but have *fun* (gamification, rewards, &c?)
    .
    ULTIMATE HOBBY FOR MAKERS, GEEKS, OR ANYONE WHO LIKES TO BUILD STUFF OR KNOW HOW IT WORKS!!!:
      we can make stuff: home power generation w/ wind/solar, 3d printing, maker movement, free/open software & hardware, open scientific journals, it sometimes seems the sky's thelimit and we should be able to do anything.
      
      BUT CAN WE, REALLY, OR ARE WE SO DEPENDENT ON THE MODERN SOCIETY AND ITS ACCOUTREMENTS, TOOLS, INFRASTRUCTURE, ETC ETC THAT WE 
      phase 1
        a worldwide society that collaboratively builds things from *scratch*: no use of tools or outside help except outside info to learn how to do it, tools built within the project, and traded with others. Documented steps so reproducible by anyone.  See what is the best (by dif't criteria, whoever/whatevers), or *shortest* path to modern civilization, completely and totally from scratch.  Done by people still living in whatever livestyle they had or want, but the goods themselves can be traded, but only made & built upon things made *from scratch* w/in the system.  Trade can use modern means or no?
      phase 2
        some people get together to reproduce it, full-time
          have2work out legal issues of how to travel, live, extract resources & farm/build/whatever legally w/in the current world, just not using its stuff during that time.
          
          only outside help is info.
          
          they live it
          how fast can they achieve modern civ?
      phase 3
        broken up in segments, w/ specialists who do the rules only for that segment, then can get out & study?
        do phase 2, but *from memory*
      .
      notes: 
        will not be successful if we lose the key lessons of history: like that chastity before marriage and faithfulness/mutual support/respect etc w/in marriage makes families stronger, and that makes societies stronger (it's never been done by a society that completely rejects those principles, w/ long-term success, nor will it), and that honesty and the golden rule (for example) are essential or we just won't get along, thus we can't achieve much alone or together.  
      .
    .
    form a society (its own legal env't like a county?) which only allows in those who really buy in to honesty and the golden rule, and faithfulness to traditional marriage & respect w/in it.  Those judged not doing that can be sent to remediation-land, and then when repented they come back, or if they can't hack that they have to leave.  Of course can leave any time.  Avoid more laws than that...?
    .
    study: are democrats/repubs just dif't in how we approach life?
      could understanding that help with
        getting along: managing things, communicating across the dif'cs, agreeing better/sooner
        solving problems: knowing/applying when one kind is more suited to a situation
      .
      like whether 
        rules are bendable in general
        one must help others *personally*
        kinds of taking resp. or assuming others will take responsibility
        it's a "we" and responsibility is diffuse
        accountable before God vs not
      .
    .
  .
.
About this file: 
  1) It is a collapsible outline, where indentation levels are outline levels:  so it's more readable if lines wrap to the same column on which they started (not back to the left margin).  It is conveniently viewable in jedit for example (thus the last line; see jedit's "Folding" menu etc).  "%%" and "%%$%" are editor-independent bookmarks for quick reference, %%$% typically being for where I plan to continue working.
  
  2) It hopefully can cease to exist when OM can store and more conveniently manipulate & share this kind of info.
.
:folding=indent:collapsefolds=2:
